(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       156,          5]
NotebookDataLength[    216386,       4033]
NotebookOptionsPosition[    214273,       3991]
NotebookOutlinePosition[    214698,       4007]
CellTagsIndexPosition[    214655,       4004]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";", 
  RowBox[{"SetOptions", "[", 
   RowBox[{"$FrontEndSession", ",", 
    RowBox[{"NotebookAutoSave", "->", "True"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"NotebookSave", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$Path", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
      "$HomeDirectory", ",", "\"\<Dropbox\>\"", ",", 
       "\"\<EpidCRNmodels\>\""}], "}"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"<<", "EpidCRN`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RN", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\"\<A\>\"", "+", "\"\<B\>\""}], "->", "\"\<C\>\""}], ",", 
     RowBox[{"(*", 
      RowBox[{"Reaction", " ", "1"}], "*)"}], 
     RowBox[{
      RowBox[{
       RowBox[{"2", "*", "\"\<A\>\""}], "+", "\"\<B\>\""}], "->", 
      "\"\<D\>\""}], ",", 
     RowBox[{"(*", 
      RowBox[{"Reaction", " ", "2"}], "*)"}], 
     RowBox[{"\"\<C\>\"", "->", "0"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Reaction", " ", "3"}], "*)"}], 
     RowBox[{"\"\<D\>\"", "->", "0"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Reaction", " ", "4"}], "*)"}], 
     RowBox[{"0", "->", "\"\<A\>\""}], ",", 
     RowBox[{"(*", 
      RowBox[{"Reaction", " ", "5", " ", 
       RowBox[{"(", 
        RowBox[{"influx", " ", "A"}], ")"}]}], "*)"}], 
     RowBox[{"0", "->", "\"\<B\>\""}]}], "                    ", 
    RowBox[{"(*", 
     RowBox[{"Reaction", " ", "6", " ", 
      RowBox[{"(", 
       RowBox[{"influx", " ", "B"}], ")"}]}], "*)"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k1", "*", "a", "*", "b"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Rate", " ", "for", " ", "reaction", " ", "1"}], "*)"}], 
     RowBox[{"k2", "*", 
      RowBox[{"a", "^", "2"}], "*", "b"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Rate", " ", "for", " ", "reaction", " ", "2"}], "*)"}], 
     RowBox[{"k3", "*", "c"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Rate", " ", "for", " ", "reaction", " ", "3"}], "*)"}], 
     RowBox[{"k4", "*", "d"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Rate", " ", "for", " ", "reaction", " ", "4"}], "*)"}], "fA", 
     ",", 
     RowBox[{"(*", 
      RowBox[{"Rate", " ", "for", " ", "influx", " ", "A"}], "*)"}], "fB"}], 
    "                          ", 
    RowBox[{"(*", 
     RowBox[{"Rate", " ", "for", " ", "influx", " ", "B"}], "*)"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<reactions and transitions: \>\"", ",", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"RN", ",", "rts"}], "}"}], "]"}], "//", "MatrixForm"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "spe", ",", " ", "alp", ",", " ", "bet", ",", " ", "gam", ",", " ", "Rv", 
     ",", " ", "RHS", ",", " ", "mSi", ",", " ", 
     RowBox[{"{", 
      RowBox[{"defFormula", ",", " ", "defTerms", ",", " ", "defResult"}], 
      "}"}]}], "}"}], "=", 
   RowBox[{"extMat", "[", "RN", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<spe=\>\"", ",", "spe", ",", "\"\<def=\>\"", ",", "defResult", ",", 
    "\"\<gam=\>\"", ",", 
    RowBox[{"gam", "//", "MatrixForm"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<minimal siph=\>\"", ",", "mSi"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<autocat. sets=\>\"", ",", 
   RowBox[{"findCores", "[", 
    RowBox[{"RN", ",", "2"}], "]"}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.9627027020233946`*^9, {3.9627027557755327`*^9, 3.9627027627794952`*^9}, {
   3.962703591339924*^9, 3.9627036425539064`*^9}, {3.962703715845883*^9, 
   3.962703760615386*^9}, 3.962715107211918*^9, 3.9627173423040695`*^9, {
   3.9627184348469563`*^9, 3.9627184481518297`*^9}, {3.9628231457512503`*^9, 
   3.9628231613733854`*^9}, 3.962823213737838*^9, 3.962823277675476*^9, {
   3.962823440284357*^9, 3.962823459918148*^9}, 3.9628236708809013`*^9, 
   3.962844904116783*^9, 3.9628449690733423`*^9, {3.9628450611267757`*^9, 
   3.9628450891963515`*^9}, {3.962845192648903*^9, 3.962845193289407*^9}, 
   3.962845352955842*^9, {3.962849681306136*^9, 3.96284968170887*^9}, 
   3.9628547022942286`*^9, {3.962854896806715*^9, 3.962854914391412*^9}, 
   3.9628555663944707`*^9, {3.9628557765563574`*^9, 3.9628557790343523`*^9}, 
   3.9628571714227705`*^9, {3.9628572496393967`*^9, 3.9628572503403177`*^9}, 
   3.9628572926113796`*^9, {3.962865403354826*^9, 3.962865408387747*^9}, 
   3.962865451038108*^9, 3.9628681799286137`*^9, 3.9628682229643345`*^9, 
   3.962889513902331*^9, 3.9628898039582586`*^9, {3.9628916615796394`*^9, 
   3.962891680128615*^9}, 3.962892822834195*^9, {3.9628929486434927`*^9, 
   3.962892962032708*^9}, 3.9628937877227025`*^9, {3.962893831585886*^9, 
   3.9628938478272943`*^9}, {3.9628938917064734`*^9, 
   3.9628938984966125`*^9}, {3.962894791472889*^9, 3.962894840070718*^9}, {
   3.9628948749400396`*^9, 3.9628948885724745`*^9}, {3.962942043943723*^9, 
   3.9629420454283867`*^9}, 3.962942100797423*^9, {3.962942948662923*^9, 
   3.9629429583635645`*^9}, {3.9629429917011538`*^9, 3.962943021267565*^9}, {
   3.9629432539798436`*^9, 3.9629432539798436`*^9}, {3.962945955334607*^9, 
   3.962945974185751*^9}, {3.9629462326172*^9, 3.962946262902196*^9}, {
   3.962946457780168*^9, 3.962946481647089*^9}, {3.9629472264570055`*^9, 
   3.962947227024354*^9}, 3.9629756715062466`*^9, 3.963021216043664*^9, {
   3.96302188008191*^9, 3.963021881048892*^9}, 3.963022231434904*^9, {
   3.963023951416649*^9, 3.9630239560150995`*^9}, 3.9630250427280493`*^9, 
   3.9630250931817365`*^9, 3.9630251974531574`*^9, {3.9630254434008784`*^9, 
   3.9630254499184823`*^9}, {3.9630280238647566`*^9, 3.9630280630334806`*^9}, 
   3.96303408827763*^9, {3.963034770227908*^9, 3.963034794836006*^9}, {
   3.9631185152362356`*^9, 3.963118559097946*^9}, {3.9631189275029297`*^9, 
   3.96311892824749*^9}, {3.9631191005744867`*^9, 3.9631191012759347`*^9}, 
   3.9631193036760006`*^9, {3.9631199133129606`*^9, 3.963119927472849*^9}, {
   3.9631212988217325`*^9, 3.9631212995571465`*^9}, 3.9631233005357027`*^9, {
   3.963124292827777*^9, 3.963124295937396*^9}, {3.9631243273526726`*^9, 
   3.9631243414127955`*^9}, 3.963124818242712*^9, {3.963125181255661*^9, 
   3.963125186123685*^9}, {3.963125262949148*^9, 3.963125283743681*^9}, {
   3.96312535416223*^9, 3.9631253941226063`*^9}, {3.9631258107834363`*^9, 
   3.9631258336126285`*^9}, 3.9631258691279883`*^9, {3.9631262021309986`*^9, 
   3.9631262028136463`*^9}, 3.963126377039057*^9, 3.9631264536128426`*^9, {
   3.963126599572325*^9, 3.9631266356900945`*^9}, {3.9631329323526707`*^9, 
   3.963132934348055*^9}, 3.9631341013361845`*^9, 3.9631348221838202`*^9, {
   3.9631372843805866`*^9, 3.9631372935318437`*^9}, {3.9631391220854635`*^9, 
   3.963139132943958*^9}, {3.9631408599017677`*^9, 3.963140860521123*^9}, 
   3.9631428580968833`*^9, 3.9631470240463333`*^9, {3.9631471972845497`*^9, 
   3.963147206469802*^9}, {3.9631473799114065`*^9, 3.9631474196970015`*^9}, {
   3.9631476380944357`*^9, 3.9631476549280653`*^9}, {3.9631496135381637`*^9, 
   3.9631496423901196`*^9}, {3.9631506157462015`*^9, 
   3.9631506173797836`*^9}, {3.963152791534934*^9, 3.9631528049536705`*^9}, {
   3.963153213079587*^9, 3.9631532151094294`*^9}, 3.963154200448008*^9, 
   3.9631542621012774`*^9, {3.96315632734126*^9, 3.963156327958044*^9}, {
   3.9631572222871246`*^9, 3.9631572396377854`*^9}, 3.963157502369219*^9, {
   3.9631575329721527`*^9, 3.96315753877153*^9}, 3.963158373475125*^9, 
   3.963158741123674*^9, 3.963159008772193*^9, {3.963159133412665*^9, 
   3.9631591343462043`*^9}, 3.96315919714952*^9, {3.963159439346257*^9, 
   3.9631594441954765`*^9}, {3.9631594850825047`*^9, 
   3.9631594998672028`*^9}, {3.9631595689711*^9, 3.9631595726045294`*^9}, {
   3.9631597929037046`*^9, 3.963159793311163*^9}, {3.963159920792288*^9, 
   3.96315994629218*^9}, {3.9631910526435356`*^9, 3.963191057611758*^9}, {
   3.9631913201049623`*^9, 3.9631913381566277`*^9}, {3.963191990075638*^9, 
   3.9631920193775206`*^9}, 3.963192248556553*^9, {3.9631922821424923`*^9, 
   3.9631922826758413`*^9}, {3.963192319094876*^9, 3.963192370280943*^9}, 
   3.9631925216729083`*^9, {3.9631926925494413`*^9, 3.9631926930516415`*^9}, {
   3.963192957343544*^9, 3.96319299953347*^9}, {3.9631945419304056`*^9, 
   3.96319454251571*^9}, {3.963195395303524*^9, 3.963195410537408*^9}, 
   3.9631964328962154`*^9, {3.963201013308385*^9, 3.9632010216416397`*^9}, 
   3.9632016546101847`*^9, {3.9632028551958914`*^9, 3.963202857579071*^9}, {
   3.9632029191665955`*^9, 3.9632029300153923`*^9}, 3.96320429061327*^9, {
   3.963204986884127*^9, 3.963204987833815*^9}, {3.963207509361517*^9, 
   3.9632075127710223`*^9}, {3.963207543044176*^9, 3.9632075909293113`*^9}, {
   3.963209377129411*^9, 3.9632093806712217`*^9}, {3.96320942217752*^9, 
   3.9632094438438425`*^9}, 3.963209873817487*^9, 3.96321025935752*^9, {
   3.9632113996271677`*^9, 3.963211405085676*^9}, {3.963211511892869*^9, 
   3.9632115127243166`*^9}, {3.963245613885053*^9, 3.9632456429729605`*^9}, {
   3.963245684540007*^9, 3.9632456877733936`*^9}, {3.9632457551434965`*^9, 
   3.9632457660136495`*^9}, {3.9632526692624636`*^9, 3.963252684030573*^9}, {
   3.963252917496564*^9, 3.9632529196292887`*^9}, {3.9639767816155033`*^9, 
   3.963976782312557*^9}, {3.96397685865862*^9, 3.9639768620420356`*^9}, {
   3.9639769183623066`*^9, 3.9639769530512547`*^9}, {3.963983907322878*^9, 
   3.9639839087743206`*^9}, 3.9640650908428288`*^9, {3.9640707396824036`*^9, 
   3.964070776635747*^9}, {3.9640749698358655`*^9, 3.964074970625373*^9}, {
   3.96407505825533*^9, 3.9640750614869432`*^9}, 3.964081506709243*^9, {
   3.964081799457876*^9, 3.964081800752855*^9}, {3.964081947501276*^9, 
   3.9640819487335596`*^9}, {3.964081992068754*^9, 3.9640820549748397`*^9}, {
   3.964082087424867*^9, 3.964082108227163*^9}, 3.9640822766856017`*^9, {
   3.9640823154265327`*^9, 3.964082330321411*^9}, {3.964084024534919*^9, 
   3.9640840375865984`*^9}, {3.9640840756874404`*^9, 
   3.9640840843889427`*^9}, {3.96408561307658*^9, 3.9640856159642677`*^9}, {
   3.9640860090830097`*^9, 3.9640860180340233`*^9}, {3.9640982889952974`*^9, 
   3.9640982900488815`*^9}, {3.964098375881729*^9, 3.9640983763092594`*^9}, {
   3.9640998371704626`*^9, 3.964099842503361*^9}, 3.9641590241385603`*^9, {
   3.9641590678344164`*^9, 3.9641590915804825`*^9}, 3.9641591456203685`*^9, 
   3.9641591837991047`*^9, {3.9641594434816484`*^9, 3.964159473308338*^9}, {
   3.9641595783349133`*^9, 3.9641595922663717`*^9}, {3.9641596647114697`*^9, 
   3.964159678128563*^9}, {3.9641597343974075`*^9, 3.9641597452050505`*^9}, 
   3.964159781321475*^9, {3.964159865087544*^9, 3.964159906107563*^9}, {
   3.964159947538104*^9, 3.9641599677011485`*^9}, {3.964160251226309*^9, 
   3.964160262765776*^9}, {3.9641624342956095`*^9, 3.9641624714435935`*^9}, {
   3.964162510121546*^9, 3.9641625196354303`*^9}, {3.964162591522951*^9, 
   3.9641625922198353`*^9}, {3.9642704748889503`*^9, 
   3.9642705018299956`*^9}, {3.9642705319228625`*^9, 
   3.9642707361289377`*^9}, {3.9642707669499464`*^9, 
   3.9642708196622972`*^9}, {3.9642708797017155`*^9, 3.964270898688506*^9}, {
   3.964270932611574*^9, 3.9642710012104745`*^9}, {3.9642711613203683`*^9, 
   3.964271198505082*^9}, {3.9643077253178115`*^9, 3.964307748859022*^9}, {
   3.9643078923298545`*^9, 3.964307951726128*^9}, {3.9643081250486546`*^9, 
   3.9643081346456857`*^9}, {3.964308396450678*^9, 3.964308404789897*^9}, {
   3.964308456312801*^9, 3.9643084569916353`*^9}, {3.9643086848696337`*^9, 
   3.9643087341969457`*^9}, {3.9643088294087505`*^9, 3.9643088713631926`*^9}, 
   3.964309389032727*^9, {3.9645013904312563`*^9, 3.9645013906070504`*^9}, 
   3.964509288469149*^9, {3.964662324522463*^9, 3.964662345805157*^9}, {
   3.9646800495252857`*^9, 3.964680050216132*^9}, {3.964695126788616*^9, 
   3.9646951282338705`*^9}, {3.9646957202120566`*^9, 3.964695732092479*^9}, {
   3.9646957703478203`*^9, 3.964695776456315*^9}, 3.964705480277034*^9, {
   3.9647069481521316`*^9, 3.9647069575788784`*^9}, {3.9647070481243553`*^9, 
   3.96470705632207*^9}, 3.965449949910245*^9, 3.965449991784193*^9, {
   3.9654504603107653`*^9, 3.9654504650806932`*^9}, {3.965450536042237*^9, 
   3.9654505365079*^9}, {3.965450569243484*^9, 3.965450604704205*^9}, 
   3.96545090717113*^9, {3.965452945692235*^9, 3.9654529594931245`*^9}, 
   3.9654530068626957`*^9, {3.965453063772749*^9, 3.9654530879676228`*^9}, {
   3.96545607799697*^9, 3.965456088574584*^9}, {3.9654561674645214`*^9, 
   3.965456168125746*^9}, {3.965456518534769*^9, 3.965456520527862*^9}, 
   3.965456621045799*^9, 3.9654697306705866`*^9, {3.965469829867806*^9, 
   3.9654698836237307`*^9}, {3.9654707746055*^9, 3.965470777489106*^9}, {
   3.9654715333315163`*^9, 3.9654716397995996`*^9}, {3.9654723524143114`*^9, 
   3.965472358174728*^9}, {3.9654725620274463`*^9, 3.9654725677449408`*^9}, {
   3.965472714075496*^9, 3.965472714941763*^9}, {3.9654728480597982`*^9, 
   3.9654728716248074`*^9}, {3.9654729028360677`*^9, 
   3.9654729063215466`*^9}, {3.9654749601921535`*^9, 3.965474960958957*^9}, {
   3.965481576337268*^9, 3.965481632613905*^9}, {3.9654816640027094`*^9, 
   3.965481676612955*^9}, 3.965481730964573*^9, {3.9654824879435186`*^9, 
   3.965482492025914*^9}, 3.9654880053232374`*^9, {3.965488038724822*^9, 
   3.9654880388908124`*^9}, 3.965488118029108*^9, {3.965611626993947*^9, 
   3.9656116463884835`*^9}, 3.9656117079552617`*^9, {3.9656125712348*^9, 
   3.96561259443229*^9}, {3.9656130783790884`*^9, 3.965613082313505*^9}, {
   3.9656871315539784`*^9, 3.9656871409369955`*^9}, {3.965688269586364*^9, 
   3.9656882702362056`*^9}, {3.96568939230066*^9, 3.9656894305860014`*^9}, {
   3.965689466655596*^9, 3.96568946918889*^9}, {3.9656897748353453`*^9, 
   3.965689790696245*^9}, {3.9656898312005367`*^9, 3.9656898318344965`*^9}, {
   3.96569372526594*^9, 3.965693752631014*^9}, {3.9656985661152325`*^9, 
   3.96569856686486*^9}, {3.9656986663543534`*^9, 3.9656986724890647`*^9}, {
   3.9656987582442236`*^9, 3.9656987708769197`*^9}, 3.965698926752309*^9, {
   3.965700654294944*^9, 3.965700679524372*^9}, 3.9657016270257416`*^9, {
   3.9657017645335517`*^9, 3.9657017797509794`*^9}, 3.9657018947240067`*^9, {
   3.965809149826235*^9, 3.9658091662189474`*^9}, {3.965809203797599*^9, 
   3.9658092337489004`*^9}, {3.9658094109521575`*^9, 3.965809455198993*^9}, 
   3.9658097681637087`*^9, {3.9659431055660734`*^9, 3.9659431546041756`*^9}, {
   3.9659436267940655`*^9, 3.965943634827593*^9}, {3.96613121659566*^9, 
   3.9661313355368595`*^9}, {3.9661314400758195`*^9, 3.966131590584298*^9}, 
   3.9670823348464503`*^9, {3.9670828262078433`*^9, 3.967082826790867*^9}, {
   3.967082874326375*^9, 3.9670829252297273`*^9}, {3.9670831926359177`*^9, 
   3.967083225937711*^9}, {3.9670832814003744`*^9, 3.967083305901334*^9}, {
   3.9670834926792955`*^9, 3.967083500895709*^9}, {3.9670914370432653`*^9, 
   3.9670914769455767`*^9}, {3.9675175489328365`*^9, 3.967517549648712*^9}, {
   3.967546034393625*^9, 3.9675460359768767`*^9}, {3.9675460711663203`*^9, 
   3.9675460849130597`*^9}, {3.9675461348990784`*^9, 3.967546153150484*^9}, {
   3.967599082469078*^9, 3.967599083002796*^9}, {3.9675993035483365`*^9, 
   3.9675993589846945`*^9}, {3.9676003819931545`*^9, 
   3.9676003949104104`*^9}, {3.967600503283679*^9, 3.967600503784994*^9}, {
   3.9676117954704084`*^9, 3.9676117959442406`*^9}, {3.9676922329875116`*^9, 
   3.9676922388212557`*^9}, {3.9676923670460405`*^9, 3.9676924262493534`*^9}, 
   3.967692512103286*^9, {3.967718162580919*^9, 3.967718163081414*^9}, 
   3.9677191356021357`*^9, {3.967719234008833*^9, 3.9677192740612197`*^9}, {
   3.9677219854099817`*^9, 3.967721993465953*^9}, 3.9677220883879786`*^9, 
   3.9677221996283793`*^9, {3.9677225575475707`*^9, 3.967722560917474*^9}, {
   3.9677227117743073`*^9, 3.9677227479425154`*^9}, {3.967722788299403*^9, 
   3.9677227889440565`*^9}, {3.967723349160455*^9, 3.967723381562479*^9}, {
   3.9677234406821346`*^9, 3.9677234582324886`*^9}, {3.9677235712886457`*^9, 
   3.9677235962903123`*^9}, {3.967723630859296*^9, 3.9677236371097136`*^9}, {
   3.967725760080874*^9, 3.967725765847455*^9}, {3.967726263459236*^9, 
   3.967726272893594*^9}, {3.967727218380493*^9, 3.9677272189636707`*^9}, {
   3.967776700095064*^9, 3.9677767783340883`*^9}, {3.967776835003586*^9, 
   3.9677768443380246`*^9}, {3.9677795984367895`*^9, 
   3.9677796165210147`*^9}, {3.9677796704728265`*^9, 3.967779685611964*^9}, {
   3.967779790531252*^9, 3.967779805099414*^9}, {3.967781047201597*^9, 
   3.9677810720041523`*^9}, {3.967781188459882*^9, 3.9677812257460675`*^9}, {
   3.967781968754798*^9, 3.9677819797715387`*^9}, {3.9678573759205823`*^9, 
   3.967857393682833*^9}, {3.9678591710787745`*^9, 3.9678592435406075`*^9}, {
   3.9679481593402243`*^9, 3.967948194310707*^9}, {3.9679482711807985`*^9, 
   3.967948311866982*^9}, {3.9679484163061275`*^9, 3.9679484481250763`*^9}, {
   3.967948487126528*^9, 3.9679484878924327`*^9}, 3.9679485210114527`*^9, {
   3.967948739774125*^9, 3.9679487495249615`*^9}, {3.967948877534971*^9, 
   3.9679488918490496`*^9}, 3.967949290254668*^9, 3.9679493477582664`*^9, {
   3.967949391139821*^9, 3.967949456898764*^9}, {3.9679496300281672`*^9, 
   3.967949711231583*^9}, {3.9679498925448637`*^9, 3.967949975304005*^9}, {
   3.967950033370882*^9, 3.9679500955317397`*^9}, {3.9679501599914446`*^9, 
   3.9679501860889463`*^9}, {3.967950229103647*^9, 3.9679503069140153`*^9}, {
   3.9679518739075985`*^9, 3.967951982496482*^9}, {3.9679520143391895`*^9, 
   3.967952030246213*^9}, {3.9679520801053195`*^9, 3.967952080667884*^9}, {
   3.9679522033729763`*^9, 3.9679522157720723`*^9}, {3.967952308603771*^9, 
   3.9679523223475437`*^9}, 3.9681178268504457`*^9, {3.9681178995555015`*^9, 
   3.9681179001750154`*^9}, {3.968125833842613*^9, 3.9681258896125507`*^9}, {
   3.96814225267541*^9, 3.968142253049199*^9}, {3.968147544456551*^9, 
   3.9681475851903543`*^9}, {3.968147639480085*^9, 3.968147650163777*^9}, {
   3.9681476921658463`*^9, 3.9681477045101404`*^9}, {3.968147748825308*^9, 
   3.9681477488349495`*^9}, {3.968147796941317*^9, 3.9681477969473267`*^9}, {
   3.9681481411238422`*^9, 3.968148141140586*^9}, {3.9681482172268147`*^9, 
   3.968148255552*^9}, {3.9681488762341766`*^9, 3.968148885817621*^9}, {
   3.968148959221032*^9, 3.96814896205482*^9}, {3.96814901085693*^9, 
   3.9681490108727093`*^9}, {3.9681490430312967`*^9, 
   3.9681490455600977`*^9}, {3.968149295810017*^9, 3.968149334610261*^9}, {
   3.968203061117049*^9, 3.9682030825609183`*^9}, {3.968203545185994*^9, 
   3.9682035541267333`*^9}, 3.9682044383469563`*^9, 3.9682048600598207`*^9, {
   3.968284159432726*^9, 3.968284191657939*^9}, {3.9682946838605433`*^9, 
   3.968294878605791*^9}, {3.968294919549362*^9, 3.968294937623464*^9}, {
   3.968313661546775*^9, 3.968313679397318*^9}, 3.9683137685516825`*^9, {
   3.968316840360952*^9, 3.9683168571618633`*^9}, {3.968322302440524*^9, 
   3.9683223193919797`*^9}, {3.9683240591891727`*^9, 3.9683240661125145`*^9}, 
   3.968551216284711*^9, {3.9685513056431704`*^9, 3.968551389677243*^9}, {
   3.9689176277745695`*^9, 3.968917636738474*^9}, {3.9694349952283597`*^9, 
   3.969434999829948*^9}, 3.969504503460374*^9, {3.9695045683515644`*^9, 
   3.9695045686174755`*^9}, {3.969506284849454*^9, 3.9695063748056135`*^9}, {
   3.9695064203533907`*^9, 3.9695064472919188`*^9}, {3.969506511179413*^9, 
   3.969506573751681*^9}, {3.969506906001582*^9, 3.9695069451019106`*^9}, {
   3.969507027142408*^9, 3.9695071060338497`*^9}, {3.969508353825076*^9, 
   3.9695083666761255`*^9}, {3.969508703871109*^9, 3.969508718451007*^9}, {
   3.9695391966096115`*^9, 3.969539216147646*^9}, {3.969539277631138*^9, 
   3.9695392783474464`*^9}, {3.9695396116997795`*^9, 3.969539668419936*^9}, {
   3.969772412985292*^9, 3.969772413657751*^9}, 3.969772695972939*^9, 
   3.9697727619612007`*^9, 3.9697731339234324`*^9, 3.9697758968447537`*^9, {
   3.969775963372448*^9, 3.9697759677423105`*^9}, {3.9699368465551853`*^9, 
   3.969936960053794*^9}, {3.9699376636032715`*^9, 3.969937664168358*^9}, {
   3.969938901567731*^9, 3.969938979737027*^9}, {3.9699390584759607`*^9, 
   3.969939081927608*^9}, {3.9699397412081575`*^9, 3.9699397511994267`*^9}, 
   3.969940139654403*^9, {3.969940178743132*^9, 3.9699401806155634`*^9}, {
   3.969941765534483*^9, 3.9699419512636733`*^9}, 3.9699525227701273`*^9, 
   3.9699525856579995`*^9, {3.969953522794306*^9, 3.9699535234064817`*^9}, {
   3.9699539582767124`*^9, 3.969953988722038*^9}, {3.969954035542448*^9, 
   3.969954038907902*^9}, {3.9699565669610205`*^9, 3.9699565898505974`*^9}, 
   3.9699568104799557`*^9, 3.9699580398120327`*^9, {3.9699583671114855`*^9, 
   3.9699583676451116`*^9}, {3.9699584977420883`*^9, 
   3.9699585268860316`*^9}, {3.969959220273677*^9, 3.9699593069124637`*^9}, {
   3.9699596180609555`*^9, 3.969959618490291*^9}, {3.9699620062790456`*^9, 
   3.9699620069344563`*^9}, {3.9699623944078918`*^9, 3.969962450466742*^9}, 
   3.970081031074698*^9, {3.9700810760775166`*^9, 3.9700811443484545`*^9}, {
   3.970081235520895*^9, 3.970081260988146*^9}, {3.9700812912398405`*^9, 
   3.970081338993414*^9}, {3.97008137132808*^9, 3.9700815076070023`*^9}, 
   3.9700817191814833`*^9, {3.970081761816889*^9, 3.9700817726633325`*^9}, {
   3.9700820444668756`*^9, 3.9700820504838643`*^9}, 3.9700822079428787`*^9, {
   3.9700822884302588`*^9, 3.970082344940529*^9}, {3.970082378602498*^9, 
   3.9700823832359705`*^9}, {3.970082468390644*^9, 3.9700824838577185`*^9}, {
   3.97008257041299*^9, 3.970082595731495*^9}, {3.970082630683201*^9, 
   3.970082764640292*^9}, {3.9700827974597793`*^9, 3.970082804797801*^9}, 
   3.970082850561767*^9, 3.970086807919688*^9, {3.970086962595559*^9, 
   3.9700869851797853`*^9}, {3.9700870437557707`*^9, 3.970087061768664*^9}, {
   3.970087095836941*^9, 3.970087108724434*^9}, 3.970087959385127*^9, {
   3.970089303811756*^9, 3.970089330331341*^9}, {3.970090468723367*^9, 
   3.9700905510841355`*^9}, {3.970090662090702*^9, 3.970090705040492*^9}, {
   3.970090738193801*^9, 3.9700907457606993`*^9}, {3.9700911223153567`*^9, 
   3.9700911232822495`*^9}, {3.970091195770067*^9, 3.970091207336751*^9}, {
   3.9700912943919535`*^9, 3.9700913095753345`*^9}, 3.9700916858144855`*^9, 
   3.9700922126110315`*^9, 3.97009268805564*^9, {3.9701084655130477`*^9, 
   3.9701085174171157`*^9}, {3.970109782906253*^9, 3.9701098135911846`*^9}, {
   3.9701098689612365`*^9, 3.9701098763784833`*^9}, 3.970109951381453*^9, {
   3.97011009612389*^9, 3.9701101185418587`*^9}, 3.9701110205588045`*^9, 
   3.9701121047554235`*^9, 3.970141277793187*^9, {3.9701413115119543`*^9, 
   3.970141313827194*^9}, {3.97014143318565*^9, 3.970141472654504*^9}, {
   3.9701415051055727`*^9, 3.9701415257908087`*^9}, {3.9701415749664993`*^9, 
   3.9701415791253448`*^9}, 3.970142397655197*^9, {3.9701425900005836`*^9, 
   3.970142594884495*^9}, {3.970143476234872*^9, 3.9701435007353125`*^9}, 
   3.9701456372007227`*^9},
 CellLabel->
  "In[287]:=",ExpressionUUID->"3604622a-b672-418b-a705-97f5a454d22c"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"reactions and transitions: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{"\<\"A\"\>", "+", "\<\"B\"\>"}], "\[Rule]", "\<\"C\"\>"}], 
        RowBox[{"a", " ", "b", " ", "k1"}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"2", " ", "\<\"A\"\>"}], "+", "\<\"B\"\>"}], 
         "\[Rule]", "\<\"D\"\>"}], 
        RowBox[{
         SuperscriptBox["a", "2"], " ", "b", " ", "k2"}]},
       {
        RowBox[{"\<\"C\"\>", "\[Rule]", "0"}], 
        RowBox[{"c", " ", "k3"}]},
       {
        RowBox[{"\<\"D\"\>", "\[Rule]", "0"}], 
        RowBox[{"d", " ", "k4"}]},
       {
        RowBox[{"0", "\[Rule]", "\<\"A\"\>"}], "fA"},
       {
        RowBox[{"0", "\[Rule]", "\<\"B\"\>"}], "fB"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["reactions and transitions: ", 
   MatrixForm[{{
     "A" + "B" -> "C", $CellContext`a $CellContext`b $CellContext`k1}, {
     2 "A" + "B" -> "D", $CellContext`a^2 $CellContext`b $CellContext`k2}, {
     "C" -> 0, $CellContext`c $CellContext`k3}, {
     "D" -> 0, $CellContext`d $CellContext`k4}, {0 -> "A", $CellContext`fA}, {
     0 -> "B", $CellContext`fB}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9701423852324915`*^9, 3.9701424008845406`*^9}, {
   3.970142571782089*^9, 3.9701425962831793`*^9}, {3.970143479416937*^9, 
   3.9701435029349623`*^9}, 3.970145675168906*^9},
 CellLabel->
  "During evaluation of \
In[287]:=",ExpressionUUID->"62f1aa89-5c46-4393-bf8a-063ccec89a81"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"spe=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"A\"\>", ",", "\<\"B\"\>", ",", "\<\"C\"\>", 
     ",", "\<\"D\"\>"}], "}"}], "\[InvisibleSpace]", "\<\"def=\"\>", 
   "\[InvisibleSpace]", "\<\"\[Delta] = 7 - 1 - 0 = 6\"\>", 
   "\[InvisibleSpace]", "\<\"gam=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "spe=", {"A", "B", "C", "D"}, "def=", "\[Delta] = 7 - 1 - 0 = 6", "gam=", 
   MatrixForm[{{0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0,
     0, 0, 0, 0, 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9701423852324915`*^9, 3.9701424008845406`*^9}, {
   3.970142571782089*^9, 3.9701425962831793`*^9}, {3.970143479416937*^9, 
   3.9701435029349623`*^9}, 3.97014567523514*^9},
 CellLabel->
  "During evaluation of \
In[287]:=",ExpressionUUID->"0ebf2102-db68-469a-8d8f-a61c775d8eff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"minimal siph=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "\<\"A\"\>", "}"}], ",", 
     RowBox[{"{", "\<\"B\"\>", "}"}], ",", 
     RowBox[{"{", "\<\"C\"\>", "}"}], ",", 
     RowBox[{"{", "\<\"D\"\>", "}"}]}], "}"}]}],
  SequenceForm["minimal siph=", {{"A"}, {"B"}, {"C"}, {"D"}}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9701423852324915`*^9, 3.9701424008845406`*^9}, {
   3.970142571782089*^9, 3.9701425962831793`*^9}, {3.970143479416937*^9, 
   3.9701435029349623`*^9}, 3.9701456753172717`*^9},
 CellLabel->
  "During evaluation of \
In[287]:=",ExpressionUUID->"99e53a77-6dfe-4294-ab61-a88b392ea2cc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"autocat. sets=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}],
  SequenceForm["autocat. sets=", {{}, {}}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9701423852324915`*^9, 3.9701424008845406`*^9}, {
   3.970142571782089*^9, 3.9701425962831793`*^9}, {3.970143479416937*^9, 
   3.9701435029349623`*^9}, 3.9701456753854723`*^9},
 CellLabel->
  "During evaluation of \
In[287]:=",ExpressionUUID->"3cb3382e-3fba-4e80-92c1-5bdd33f77439"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"resA", "=", 
    RowBox[{"findCoreV", "[", 
     RowBox[{"RN", ",", "4"}], "]"}]}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "search", " ", "cores", " ", "up", " ", "to", " ", "size", " ", "4"}], 
    ";", 
    RowBox[{
     RowBox[{"there", " ", "are", " ", "only", " ", "4", " ", "non"}], "-", 
     RowBox[{"inflow", " ", "reactions", " ", "anyway"}]}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<UPAM cores (Vassena\[Dash]Stadler autocatalytic cores):\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"resA", "[", "\"\<UPAMCores\>\"", "]"}], "//", "Dataset"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<Unstable-positive but non-Metzler CS blocks (not autocatalytic):\>\"",
    "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"resA", "[", "\"\<UnstablePositive\>\"", "]"}], "//", "Dataset"}], 
  "\n", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Optional", ":", 
    RowBox[{
     RowBox[{"peek", " ", "at", " ", "all", " ", "Child"}], "-", 
     RowBox[{"Selection", " ", 
      RowBox[{"S", "[", "\[Kappa]\[Kappa]\[Kappa]", "]"}], " ", "blocks", " ",
       "examined"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"short", "=", 
   RowBox[{
    RowBox[{"resA", "[", "\"\<AllCS\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Species\>\"", ",", "\"\<Reactions\>\"", ",", "\"\<Ssel\>\"", ",", 
        "\"\<Unstable\>\"", ",", "\"\<Metzler\>\"", ",", 
        "\"\<MinimalUnstableCore\>\""}], "}"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"short", "//", "Dataset"}]}], "Input",
 CellChangeTimes->{
  3.9627027020233946`*^9, {3.9627027557755327`*^9, 3.9627027627794952`*^9}, {
   3.962703591339924*^9, 3.9627036425539064`*^9}, {3.962703715845883*^9, 
   3.962703760615386*^9}, 3.962715107211918*^9, 3.9627173423040695`*^9, {
   3.9627184348469563`*^9, 3.9627184481518297`*^9}, {3.9628231457512503`*^9, 
   3.9628231613733854`*^9}, 3.962823213737838*^9, 3.962823277675476*^9, {
   3.962823440284357*^9, 3.962823459918148*^9}, 3.9628236708809013`*^9, 
   3.962844904116783*^9, 3.9628449690733423`*^9, {3.9628450611267757`*^9, 
   3.9628450891963515`*^9}, {3.962845192648903*^9, 3.962845193289407*^9}, 
   3.962845352955842*^9, {3.962849681306136*^9, 3.96284968170887*^9}, 
   3.9628547022942286`*^9, {3.962854896806715*^9, 3.962854914391412*^9}, 
   3.9628555663944707`*^9, {3.9628557765563574`*^9, 3.9628557790343523`*^9}, 
   3.9628571714227705`*^9, {3.9628572496393967`*^9, 3.9628572503403177`*^9}, 
   3.9628572926113796`*^9, {3.962865403354826*^9, 3.962865408387747*^9}, 
   3.962865451038108*^9, 3.9628681799286137`*^9, 3.9628682229643345`*^9, 
   3.962889513902331*^9, 3.9628898039582586`*^9, {3.9628916615796394`*^9, 
   3.962891680128615*^9}, 3.962892822834195*^9, {3.9628929486434927`*^9, 
   3.962892962032708*^9}, 3.9628937877227025`*^9, {3.962893831585886*^9, 
   3.9628938478272943`*^9}, {3.9628938917064734`*^9, 
   3.9628938984966125`*^9}, {3.962894791472889*^9, 3.962894840070718*^9}, {
   3.9628948749400396`*^9, 3.9628948885724745`*^9}, {3.962942043943723*^9, 
   3.9629420454283867`*^9}, 3.962942100797423*^9, {3.962942948662923*^9, 
   3.9629429583635645`*^9}, {3.9629429917011538`*^9, 3.962943021267565*^9}, {
   3.9629432539798436`*^9, 3.9629432539798436`*^9}, {3.962945955334607*^9, 
   3.962945974185751*^9}, {3.9629462326172*^9, 3.962946262902196*^9}, {
   3.962946457780168*^9, 3.962946481647089*^9}, {3.9629472264570055`*^9, 
   3.962947227024354*^9}, 3.9629756715062466`*^9, 3.963021216043664*^9, {
   3.96302188008191*^9, 3.963021881048892*^9}, 3.963022231434904*^9, {
   3.963023951416649*^9, 3.9630239560150995`*^9}, 3.9630250427280493`*^9, 
   3.9630250931817365`*^9, 3.9630251974531574`*^9, {3.9630254434008784`*^9, 
   3.9630254499184823`*^9}, {3.9630280238647566`*^9, 3.9630280630334806`*^9}, 
   3.96303408827763*^9, {3.963034770227908*^9, 3.963034794836006*^9}, {
   3.9631185152362356`*^9, 3.963118559097946*^9}, {3.9631189275029297`*^9, 
   3.96311892824749*^9}, {3.9631191005744867`*^9, 3.9631191012759347`*^9}, 
   3.9631193036760006`*^9, {3.9631199133129606`*^9, 3.963119927472849*^9}, {
   3.9631212988217325`*^9, 3.9631212995571465`*^9}, 3.9631233005357027`*^9, {
   3.963124292827777*^9, 3.963124295937396*^9}, {3.9631243273526726`*^9, 
   3.9631243414127955`*^9}, 3.963124818242712*^9, {3.963125181255661*^9, 
   3.963125186123685*^9}, {3.963125262949148*^9, 3.963125283743681*^9}, {
   3.96312535416223*^9, 3.9631253941226063`*^9}, {3.9631258107834363`*^9, 
   3.9631258336126285`*^9}, 3.9631258691279883`*^9, {3.9631262021309986`*^9, 
   3.9631262028136463`*^9}, 3.963126377039057*^9, 3.9631264536128426`*^9, {
   3.963126599572325*^9, 3.9631266356900945`*^9}, {3.9631329323526707`*^9, 
   3.963132934348055*^9}, 3.9631341013361845`*^9, 3.9631348221838202`*^9, {
   3.9631372843805866`*^9, 3.9631372935318437`*^9}, {3.9631391220854635`*^9, 
   3.963139132943958*^9}, {3.9631408599017677`*^9, 3.963140860521123*^9}, 
   3.9631428580968833`*^9, 3.9631470240463333`*^9, {3.9631471972845497`*^9, 
   3.963147206469802*^9}, {3.9631473799114065`*^9, 3.9631474196970015`*^9}, {
   3.9631476380944357`*^9, 3.9631476549280653`*^9}, {3.9631496135381637`*^9, 
   3.9631496423901196`*^9}, {3.9631506157462015`*^9, 
   3.9631506173797836`*^9}, {3.963152791534934*^9, 3.9631528049536705`*^9}, {
   3.963153213079587*^9, 3.9631532151094294`*^9}, 3.963154200448008*^9, 
   3.9631542621012774`*^9, {3.96315632734126*^9, 3.963156327958044*^9}, {
   3.9631572222871246`*^9, 3.9631572396377854`*^9}, 3.963157502369219*^9, {
   3.9631575329721527`*^9, 3.96315753877153*^9}, 3.963158373475125*^9, 
   3.963158741123674*^9, 3.963159008772193*^9, {3.963159133412665*^9, 
   3.9631591343462043`*^9}, 3.96315919714952*^9, {3.963159439346257*^9, 
   3.9631594441954765`*^9}, {3.9631594850825047`*^9, 
   3.9631594998672028`*^9}, {3.9631595689711*^9, 3.9631595726045294`*^9}, {
   3.9631597929037046`*^9, 3.963159793311163*^9}, {3.963159920792288*^9, 
   3.96315994629218*^9}, {3.9631910526435356`*^9, 3.963191057611758*^9}, {
   3.9631913201049623`*^9, 3.9631913381566277`*^9}, {3.963191990075638*^9, 
   3.9631920193775206`*^9}, 3.963192248556553*^9, {3.9631922821424923`*^9, 
   3.9631922826758413`*^9}, {3.963192319094876*^9, 3.963192370280943*^9}, 
   3.9631925216729083`*^9, {3.9631926925494413`*^9, 3.9631926930516415`*^9}, {
   3.963192957343544*^9, 3.96319299953347*^9}, {3.9631945419304056`*^9, 
   3.96319454251571*^9}, {3.963195395303524*^9, 3.963195410537408*^9}, 
   3.9631964328962154`*^9, {3.963201013308385*^9, 3.9632010216416397`*^9}, 
   3.9632016546101847`*^9, {3.9632028551958914`*^9, 3.963202857579071*^9}, {
   3.9632029191665955`*^9, 3.9632029300153923`*^9}, 3.96320429061327*^9, {
   3.963204986884127*^9, 3.963204987833815*^9}, {3.963207509361517*^9, 
   3.9632075127710223`*^9}, {3.963207543044176*^9, 3.9632075909293113`*^9}, {
   3.963209377129411*^9, 3.9632093806712217`*^9}, {3.96320942217752*^9, 
   3.9632094438438425`*^9}, 3.963209873817487*^9, 3.96321025935752*^9, {
   3.9632113996271677`*^9, 3.963211405085676*^9}, {3.963211511892869*^9, 
   3.9632115127243166`*^9}, {3.963245613885053*^9, 3.9632456429729605`*^9}, {
   3.963245684540007*^9, 3.9632456877733936`*^9}, {3.9632457551434965`*^9, 
   3.9632457660136495`*^9}, {3.9632526692624636`*^9, 3.963252684030573*^9}, {
   3.963252917496564*^9, 3.9632529196292887`*^9}, {3.9639767816155033`*^9, 
   3.963976782312557*^9}, {3.96397685865862*^9, 3.9639768620420356`*^9}, {
   3.9639769183623066`*^9, 3.9639769530512547`*^9}, {3.963983907322878*^9, 
   3.9639839087743206`*^9}, 3.9640650908428288`*^9, {3.9640707396824036`*^9, 
   3.964070776635747*^9}, {3.9640749698358655`*^9, 3.964074970625373*^9}, {
   3.96407505825533*^9, 3.9640750614869432`*^9}, 3.964081506709243*^9, {
   3.964081799457876*^9, 3.964081800752855*^9}, {3.964081947501276*^9, 
   3.9640819487335596`*^9}, {3.964081992068754*^9, 3.9640820549748397`*^9}, {
   3.964082087424867*^9, 3.964082108227163*^9}, 3.9640822766856017`*^9, {
   3.9640823154265327`*^9, 3.964082330321411*^9}, {3.964084024534919*^9, 
   3.9640840375865984`*^9}, {3.9640840756874404`*^9, 
   3.9640840843889427`*^9}, {3.96408561307658*^9, 3.9640856159642677`*^9}, {
   3.9640860090830097`*^9, 3.9640860180340233`*^9}, {3.9640982889952974`*^9, 
   3.9640982900488815`*^9}, {3.964098375881729*^9, 3.9640983763092594`*^9}, {
   3.9640998371704626`*^9, 3.964099842503361*^9}, 3.9641590241385603`*^9, {
   3.9641590678344164`*^9, 3.9641590915804825`*^9}, 3.9641591456203685`*^9, 
   3.9641591837991047`*^9, {3.9641594434816484`*^9, 3.964159473308338*^9}, {
   3.9641595783349133`*^9, 3.9641595922663717`*^9}, {3.9641596647114697`*^9, 
   3.964159678128563*^9}, {3.9641597343974075`*^9, 3.9641597452050505`*^9}, 
   3.964159781321475*^9, {3.964159865087544*^9, 3.964159906107563*^9}, {
   3.964159947538104*^9, 3.9641599677011485`*^9}, {3.964160251226309*^9, 
   3.964160262765776*^9}, {3.9641624342956095`*^9, 3.9641624714435935`*^9}, {
   3.964162510121546*^9, 3.9641625196354303`*^9}, {3.964162591522951*^9, 
   3.9641625922198353`*^9}, {3.9642704748889503`*^9, 
   3.9642705018299956`*^9}, {3.9642705319228625`*^9, 
   3.9642707361289377`*^9}, {3.9642707669499464`*^9, 
   3.9642708196622972`*^9}, {3.9642708797017155`*^9, 3.964270898688506*^9}, {
   3.964270932611574*^9, 3.9642710012104745`*^9}, {3.9642711613203683`*^9, 
   3.964271198505082*^9}, {3.9643077253178115`*^9, 3.964307748859022*^9}, {
   3.9643078923298545`*^9, 3.964307951726128*^9}, {3.9643081250486546`*^9, 
   3.9643081346456857`*^9}, {3.964308396450678*^9, 3.964308404789897*^9}, {
   3.964308456312801*^9, 3.9643084569916353`*^9}, {3.9643086848696337`*^9, 
   3.9643087341969457`*^9}, {3.9643088294087505`*^9, 3.9643088713631926`*^9}, 
   3.964309389032727*^9, {3.9645013904312563`*^9, 3.9645013906070504`*^9}, 
   3.964509288469149*^9, {3.964662324522463*^9, 3.964662345805157*^9}, {
   3.9646800495252857`*^9, 3.964680050216132*^9}, {3.964695126788616*^9, 
   3.9646951282338705`*^9}, {3.9646957202120566`*^9, 3.964695732092479*^9}, {
   3.9646957703478203`*^9, 3.964695776456315*^9}, 3.964705480277034*^9, {
   3.9647069481521316`*^9, 3.9647069575788784`*^9}, {3.9647070481243553`*^9, 
   3.96470705632207*^9}, 3.965449949910245*^9, 3.965449991784193*^9, {
   3.9654504603107653`*^9, 3.9654504650806932`*^9}, {3.965450536042237*^9, 
   3.9654505365079*^9}, {3.965450569243484*^9, 3.965450604704205*^9}, 
   3.96545090717113*^9, {3.965452945692235*^9, 3.9654529594931245`*^9}, 
   3.9654530068626957`*^9, {3.965453063772749*^9, 3.9654530879676228`*^9}, {
   3.96545607799697*^9, 3.965456088574584*^9}, {3.9654561674645214`*^9, 
   3.965456168125746*^9}, {3.965456518534769*^9, 3.965456520527862*^9}, 
   3.965456621045799*^9, 3.9654697306705866`*^9, {3.965469829867806*^9, 
   3.9654698836237307`*^9}, {3.9654707746055*^9, 3.965470777489106*^9}, {
   3.9654715333315163`*^9, 3.9654716397995996`*^9}, {3.9654723524143114`*^9, 
   3.965472358174728*^9}, {3.9654725620274463`*^9, 3.9654725677449408`*^9}, {
   3.965472714075496*^9, 3.965472714941763*^9}, {3.9654728480597982`*^9, 
   3.9654728716248074`*^9}, {3.9654729028360677`*^9, 
   3.9654729063215466`*^9}, {3.9654749601921535`*^9, 3.965474960958957*^9}, {
   3.965481576337268*^9, 3.965481632613905*^9}, {3.9654816640027094`*^9, 
   3.965481676612955*^9}, 3.965481730964573*^9, {3.9654824879435186`*^9, 
   3.965482492025914*^9}, 3.9654880053232374`*^9, {3.965488038724822*^9, 
   3.9654880388908124`*^9}, 3.965488118029108*^9, {3.965611626993947*^9, 
   3.9656116463884835`*^9}, 3.9656117079552617`*^9, {3.9656125712348*^9, 
   3.96561259443229*^9}, {3.9656130783790884`*^9, 3.965613082313505*^9}, {
   3.9656871315539784`*^9, 3.9656871409369955`*^9}, {3.965688269586364*^9, 
   3.9656882702362056`*^9}, {3.96568939230066*^9, 3.9656894305860014`*^9}, {
   3.965689466655596*^9, 3.96568946918889*^9}, {3.9656897748353453`*^9, 
   3.965689790696245*^9}, {3.9656898312005367`*^9, 3.9656898318344965`*^9}, {
   3.96569372526594*^9, 3.965693752631014*^9}, {3.9656985661152325`*^9, 
   3.96569856686486*^9}, {3.9656986663543534`*^9, 3.9656986724890647`*^9}, {
   3.9656987582442236`*^9, 3.9656987708769197`*^9}, 3.965698926752309*^9, {
   3.965700654294944*^9, 3.965700679524372*^9}, 3.9657016270257416`*^9, {
   3.9657017645335517`*^9, 3.9657017797509794`*^9}, 3.9657018947240067`*^9, {
   3.965809149826235*^9, 3.9658091662189474`*^9}, {3.965809203797599*^9, 
   3.9658092337489004`*^9}, {3.9658094109521575`*^9, 3.965809455198993*^9}, 
   3.9658097681637087`*^9, {3.9659431055660734`*^9, 3.9659431546041756`*^9}, {
   3.9659436267940655`*^9, 3.965943634827593*^9}, {3.96613121659566*^9, 
   3.9661313355368595`*^9}, {3.9661314400758195`*^9, 3.966131590584298*^9}, 
   3.9670823348464503`*^9, {3.9670828262078433`*^9, 3.967082826790867*^9}, {
   3.967082874326375*^9, 3.9670829252297273`*^9}, {3.9670831926359177`*^9, 
   3.967083225937711*^9}, {3.9670832814003744`*^9, 3.967083305901334*^9}, {
   3.9670834926792955`*^9, 3.967083500895709*^9}, {3.9670914370432653`*^9, 
   3.9670914769455767`*^9}, {3.9675175489328365`*^9, 3.967517549648712*^9}, {
   3.967546034393625*^9, 3.9675460359768767`*^9}, {3.9675460711663203`*^9, 
   3.9675460849130597`*^9}, {3.9675461348990784`*^9, 3.967546153150484*^9}, {
   3.967599082469078*^9, 3.967599083002796*^9}, {3.9675993035483365`*^9, 
   3.9675993589846945`*^9}, {3.9676003819931545`*^9, 
   3.9676003949104104`*^9}, {3.967600503283679*^9, 3.967600503784994*^9}, {
   3.9676117954704084`*^9, 3.9676117959442406`*^9}, {3.9676922329875116`*^9, 
   3.9676922388212557`*^9}, {3.9676923670460405`*^9, 3.9676924262493534`*^9}, 
   3.967692512103286*^9, {3.967718162580919*^9, 3.967718163081414*^9}, 
   3.9677191356021357`*^9, {3.967719234008833*^9, 3.9677192740612197`*^9}, {
   3.9677219854099817`*^9, 3.967721993465953*^9}, 3.9677220883879786`*^9, 
   3.9677221996283793`*^9, {3.9677225575475707`*^9, 3.967722560917474*^9}, {
   3.9677227117743073`*^9, 3.9677227479425154`*^9}, {3.967722788299403*^9, 
   3.9677227889440565`*^9}, {3.967723349160455*^9, 3.967723381562479*^9}, {
   3.9677234406821346`*^9, 3.9677234582324886`*^9}, {3.9677235712886457`*^9, 
   3.9677235962903123`*^9}, {3.967723630859296*^9, 3.9677236371097136`*^9}, {
   3.967725760080874*^9, 3.967725765847455*^9}, {3.967726263459236*^9, 
   3.967726272893594*^9}, {3.967727218380493*^9, 3.9677272189636707`*^9}, {
   3.967776700095064*^9, 3.9677767783340883`*^9}, {3.967776835003586*^9, 
   3.9677768443380246`*^9}, {3.9677795984367895`*^9, 
   3.9677796165210147`*^9}, {3.9677796704728265`*^9, 3.967779685611964*^9}, {
   3.967779790531252*^9, 3.967779805099414*^9}, {3.967781047201597*^9, 
   3.9677810720041523`*^9}, {3.967781188459882*^9, 3.9677812257460675`*^9}, {
   3.967781968754798*^9, 3.9677819797715387`*^9}, {3.9678573759205823`*^9, 
   3.967857393682833*^9}, {3.9678591710787745`*^9, 3.9678592435406075`*^9}, {
   3.9679481593402243`*^9, 3.967948194310707*^9}, {3.9679482711807985`*^9, 
   3.967948311866982*^9}, {3.9679484163061275`*^9, 3.9679484481250763`*^9}, {
   3.967948487126528*^9, 3.9679484878924327`*^9}, 3.9679485210114527`*^9, {
   3.967948739774125*^9, 3.9679487495249615`*^9}, {3.967948877534971*^9, 
   3.9679488918490496`*^9}, 3.967949290254668*^9, 3.9679493477582664`*^9, {
   3.967949391139821*^9, 3.967949456898764*^9}, {3.9679496300281672`*^9, 
   3.967949711231583*^9}, {3.9679498925448637`*^9, 3.967949975304005*^9}, {
   3.967950033370882*^9, 3.9679500955317397`*^9}, {3.9679501599914446`*^9, 
   3.9679501860889463`*^9}, {3.967950229103647*^9, 3.9679503069140153`*^9}, {
   3.9679518739075985`*^9, 3.967951982496482*^9}, {3.9679520143391895`*^9, 
   3.967952030246213*^9}, {3.9679520801053195`*^9, 3.967952080667884*^9}, {
   3.9679522033729763`*^9, 3.9679522157720723`*^9}, {3.967952308603771*^9, 
   3.9679523223475437`*^9}, 3.9681178268504457`*^9, {3.9681178995555015`*^9, 
   3.9681179001750154`*^9}, {3.968125833842613*^9, 3.9681258896125507`*^9}, {
   3.96814225267541*^9, 3.968142253049199*^9}, {3.968147544456551*^9, 
   3.9681475851903543`*^9}, {3.968147639480085*^9, 3.968147650163777*^9}, {
   3.9681476921658463`*^9, 3.9681477045101404`*^9}, {3.968147748825308*^9, 
   3.9681477488349495`*^9}, {3.968147796941317*^9, 3.9681477969473267`*^9}, {
   3.9681481411238422`*^9, 3.968148141140586*^9}, {3.9681482172268147`*^9, 
   3.968148255552*^9}, {3.9681488762341766`*^9, 3.968148885817621*^9}, {
   3.968148959221032*^9, 3.96814896205482*^9}, {3.96814901085693*^9, 
   3.9681490108727093`*^9}, {3.9681490430312967`*^9, 
   3.9681490455600977`*^9}, {3.968149295810017*^9, 3.968149334610261*^9}, {
   3.968203061117049*^9, 3.9682030825609183`*^9}, {3.968203545185994*^9, 
   3.9682035541267333`*^9}, 3.9682044383469563`*^9, 3.9682048600598207`*^9, {
   3.968284159432726*^9, 3.968284191657939*^9}, {3.9682946838605433`*^9, 
   3.968294878605791*^9}, {3.968294919549362*^9, 3.968294937623464*^9}, {
   3.968313661546775*^9, 3.968313679397318*^9}, 3.9683137685516825`*^9, {
   3.968316840360952*^9, 3.9683168571618633`*^9}, {3.968322302440524*^9, 
   3.9683223193919797`*^9}, {3.9683240591891727`*^9, 3.9683240661125145`*^9}, 
   3.968551216284711*^9, {3.9685513056431704`*^9, 3.968551389677243*^9}, {
   3.9689176277745695`*^9, 3.968917636738474*^9}, {3.9694349952283597`*^9, 
   3.969434999829948*^9}, 3.969504503460374*^9, {3.9695045683515644`*^9, 
   3.9695045686174755`*^9}, {3.969506284849454*^9, 3.9695063748056135`*^9}, {
   3.9695064203533907`*^9, 3.9695064472919188`*^9}, {3.969506511179413*^9, 
   3.969506573751681*^9}, {3.969506906001582*^9, 3.9695069451019106`*^9}, {
   3.969507027142408*^9, 3.9695071060338497`*^9}, {3.969508353825076*^9, 
   3.9695083666761255`*^9}, {3.969508703871109*^9, 3.969508718451007*^9}, {
   3.9695391966096115`*^9, 3.969539216147646*^9}, {3.969539277631138*^9, 
   3.9695392783474464`*^9}, {3.9695396116997795`*^9, 3.969539668419936*^9}, {
   3.969772412985292*^9, 3.969772413657751*^9}, 3.969772695972939*^9, 
   3.9697727619612007`*^9, 3.9697731339234324`*^9, 3.9697758968447537`*^9, {
   3.969775963372448*^9, 3.9697759677423105`*^9}, {3.9699368465551853`*^9, 
   3.969936960053794*^9}, {3.9699376636032715`*^9, 3.969937664168358*^9}, {
   3.969938901567731*^9, 3.969938979737027*^9}, {3.9699390584759607`*^9, 
   3.969939081927608*^9}, {3.9699397412081575`*^9, 3.9699397511994267`*^9}, 
   3.969940139654403*^9, {3.969940178743132*^9, 3.9699401806155634`*^9}, {
   3.969941765534483*^9, 3.9699419512636733`*^9}, 3.9699525227701273`*^9, 
   3.9699525856579995`*^9, {3.969953522794306*^9, 3.9699535234064817`*^9}, {
   3.9699539582767124`*^9, 3.969953988722038*^9}, {3.969954035542448*^9, 
   3.969954038907902*^9}, {3.9699565669610205`*^9, 3.9699565898505974`*^9}, 
   3.9699568104799557`*^9, 3.9699580398120327`*^9, {3.9699583671114855`*^9, 
   3.9699583676451116`*^9}, {3.9699584977420883`*^9, 
   3.9699585268860316`*^9}, {3.969959220273677*^9, 3.9699593069124637`*^9}, {
   3.9699596180609555`*^9, 3.969959618490291*^9}, {3.9699620062790456`*^9, 
   3.9699620069344563`*^9}, {3.9699623944078918`*^9, 3.969962450466742*^9}, 
   3.970081031074698*^9, {3.9700810760775166`*^9, 3.9700811443484545`*^9}, {
   3.970081235520895*^9, 3.970081260988146*^9}, {3.9700812912398405`*^9, 
   3.970081338993414*^9}, {3.97008137132808*^9, 3.9700815076070023`*^9}, 
   3.9700817191814833`*^9, {3.970081761816889*^9, 3.9700817726633325`*^9}, {
   3.9700820444668756`*^9, 3.9700820504838643`*^9}, 3.9700822079428787`*^9, {
   3.9700822884302588`*^9, 3.970082344940529*^9}, {3.970082378602498*^9, 
   3.9700823832359705`*^9}, {3.970082468390644*^9, 3.9700824838577185`*^9}, {
   3.97008257041299*^9, 3.970082595731495*^9}, {3.970082630683201*^9, 
   3.970082764640292*^9}, {3.9700827974597793`*^9, 3.970082804797801*^9}, 
   3.970082850561767*^9, 3.970086807919688*^9, {3.970086962595559*^9, 
   3.9700869851797853`*^9}, {3.9700870437557707`*^9, 3.970087061768664*^9}, {
   3.970087095836941*^9, 3.970087108724434*^9}, 3.970087959385127*^9, {
   3.970089303811756*^9, 3.970089330331341*^9}, {3.970090468723367*^9, 
   3.9700905510841355`*^9}, {3.970090662090702*^9, 3.970090705040492*^9}, {
   3.970090738193801*^9, 3.9700907457606993`*^9}, {3.9700911223153567`*^9, 
   3.9700911232822495`*^9}, {3.970091195770067*^9, 3.970091207336751*^9}, {
   3.9700912943919535`*^9, 3.9700913095753345`*^9}, 3.9700916858144855`*^9, 
   3.9700922126110315`*^9, 3.97009268805564*^9, {3.9701084655130477`*^9, 
   3.9701085174171157`*^9}, {3.970109782906253*^9, 3.9701098135911846`*^9}, {
   3.9701098689612365`*^9, 3.9701098763784833`*^9}, 3.970109951381453*^9, {
   3.97011009612389*^9, 3.9701101185418587`*^9}, 3.9701110205588045`*^9, 
   3.9701121047554235`*^9, 3.970141277793187*^9, {3.9701413115119543`*^9, 
   3.970141313827194*^9}, {3.97014143318565*^9, 3.970141472654504*^9}, {
   3.9701415051055727`*^9, 3.9701415257908087`*^9}, {3.9701415749664993`*^9, 
   3.9701415791253448`*^9}, 3.970142382238016*^9, {3.970143469416176*^9, 
   3.970143492635556*^9}, {3.9701456836525326`*^9, 3.9701456859698057`*^9}},
 CellLabel->
  "In[299]:=",ExpressionUUID->"bd6f8e48-7dcb-40e7-9f5e-639613fe1d25"],

Cell[BoxData["\<\"UPAM cores (Vassena\[Dash]Stadler autocatalytic \
cores):\"\>"], "Print",
 CellChangeTimes->{3.970145688986293*^9},
 CellLabel->
  "During evaluation of \
In[299]:=",ExpressionUUID->"cce8648d-0990-40ce-9b6b-35b2724d484f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> $CellContext`findCoreV[{
       "A" + "B" -> "C", 2 "A" + "B" -> "D", "C" -> 0, "D" -> 0, 0 -> "A", 0 -> 
        "B"}, 4]["UPAMCores"], "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`AtomShape[10], "InitialType" -> 
     TypeSystem`AnyType, "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`AtomShape[10], "Type" -> 
     TypeSystem`AnyType, "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 1, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   RowBox[{"findCoreV", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\"A\"", "+", "\"B\""}], "\[Rule]", "\"C\""}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "\"A\""}], "+", "\"B\""}], "\[Rule]", 
                    "\"D\""}], ",", 
                    RowBox[{"\"C\"", "\[Rule]", "0"}], ",", 
                    RowBox[{"\"D\"", "\[Rule]", "0"}], ",", 
                    RowBox[{"0", "\[Rule]", "\"A\""}], ",", 
                    RowBox[{"0", "\[Rule]", "\"B\""}]}], "}"}], ",", "4"}], 
                    "]"}], "[", "\"UPAMCores\"", "]"}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{}, "Item",
                 False], "Mouse"], ImageSize -> {{10, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       680.2857142857142, {19.134033143054694`, 24.865966856945306`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      680.2857142857142, {19.134033143054694`, 24.865966856945306`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9701456891362696`*^9},
 CellLabel->
  "Out[301]=",ExpressionUUID->"5a6ac50e-00f7-401f-a51c-ca602414caa8"],

Cell[BoxData["\<\"Unstable-positive but non-Metzler CS blocks (not \
autocatalytic):\"\>"], "Print",
 CellChangeTimes->{3.970145689586299*^9},
 CellLabel->
  "During evaluation of \
In[299]:=",ExpressionUUID->"5aabfd03-beb5-4bb3-afd3-3e70230f3d43"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> $CellContext`findCoreV[{
       "A" + "B" -> "C", 2 "A" + "B" -> "D", "C" -> 0, "D" -> 0, 0 -> "A", 0 -> 
        "B"}, 4]["UnstablePositive"], "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`AtomShape[10], "InitialType" -> 
     TypeSystem`AnyType, "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`AtomShape[10], "Type" -> 
     TypeSystem`AnyType, "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 1, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   RowBox[{"findCoreV", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\"A\"", "+", "\"B\""}], "\[Rule]", "\"C\""}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "\"A\""}], "+", "\"B\""}], "\[Rule]", 
                    "\"D\""}], ",", 
                    RowBox[{"\"C\"", "\[Rule]", "0"}], ",", 
                    RowBox[{"\"D\"", "\[Rule]", "0"}], ",", 
                    RowBox[{"0", "\[Rule]", "\"A\""}], ",", 
                    RowBox[{"0", "\[Rule]", "\"B\""}]}], "}"}], ",", "4"}], 
                    "]"}], "[", "\"UnstablePositive\"", "]"}], FontFamily -> 
                 Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{}, "Item",
                 False], "Mouse"], ImageSize -> {{10, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       680.2857142857142, {19.134033143054694`, 24.865966856945306`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      680.2857142857142, {19.134033143054694`, 24.865966856945306`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9701456896826973`*^9},
 CellLabel->
  "Out[303]=",ExpressionUUID->"859887b0-b908-4e36-8c79-c3baa0073edf"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pspec1", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"Species\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Reactions\\\\\
\\\"\\\", \\\",\\\", \\\"\\\\\\\"Ssel\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Unstable\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Metzler\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"MinimalUnstableCore\\\\\\\"\\\"}], \\\"}\\\"}]\\) is \
not applicable.\"", 2, 304, 31, 24864870893262826942, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.970145689847546*^9},
 CellLabel->
  "During evaluation of \
In[299]:=",ExpressionUUID->"1211ab6d-908d-4172-827b-99b13e6a39cd"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> Part[
       $CellContext`findCoreV[{
        "A" + "B" -> "C", 2 "A" + "B" -> "D", "C" -> 0, "D" -> 0, 0 -> "A", 0 -> 
         "B"}, 4]["AllCS"], All, {
       "Species", "Reactions", "Ssel", "Unstable", "Metzler", 
        "MinimalUnstableCore"}], "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`AtomShape[10], "InitialType" -> 
     TypeSystem`AnyType, "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`AtomShape[10], "Type" -> 
     TypeSystem`AnyType, "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 3, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   RowBox[{
                    RowBox[{"findCoreV", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\"A\"", "+", "\"B\""}], "\[Rule]", "\"C\""}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "\"A\""}], "+", "\"B\""}], "\[Rule]", 
                    "\"D\""}], ",", 
                    RowBox[{"\"C\"", "\[Rule]", "0"}], ",", 
                    RowBox[{"\"D\"", "\[Rule]", "0"}], ",", 
                    RowBox[{"0", "\[Rule]", "\"A\""}], ",", 
                    RowBox[{"0", "\[Rule]", "\"B\""}]}], "}"}], ",", "4"}], 
                    "]"}], "[", "\"AllCS\"", "]"}], "\[LeftDoubleBracket]", 
                   RowBox[{"All", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Species\"", ",", "\"Reactions\"", ",", "\"Ssel\"", ",",
                     "\"Unstable\"", ",", "\"Metzler\"", ",", 
                    "\"MinimalUnstableCore\""}], "}"}]}], 
                   "\[RightDoubleBracket]"}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{}, "Item",
                 False], "Mouse"], ImageSize -> {{10, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       680.2857142857142, {19.134033143054694`, 24.865966856945306`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      680.2857142857142, {19.134033143054694`, 24.865966856945306`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.970145689957514*^9},
 CellLabel->
  "Out[305]=",ExpressionUUID->"d7b36bdf-38db-47c4-b6d6-1a8a200626d8"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "RHS", ",", " ", "var", ",", " ", "par", ",", " ", "cp", ",", " ", "mSi", 
     ",", " ", "Jx", ",", " ", "Jy", ",", " ", "E0", ",", " ", "K", ",", " ", 
     "R0A", ",", " ", "infVars", ",", "alp", ",", "bet", ",", "gam", ",", 
     "ng"}], "}"}], "=", " ", 
   RowBox[{"bdAn", "[", 
    RowBox[{"RN", ",", "rts"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<RHS=\>\"", ",", "RHS", ",", "\"\<gam=\>\"", ",", 
     RowBox[{"gam", "//", "MatrixForm"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.9627027020233946`*^9, {3.9627027557755327`*^9, 3.9627027627794952`*^9}, {
   3.962703591339924*^9, 3.9627036425539064`*^9}, {3.962703715845883*^9, 
   3.962703760615386*^9}, 3.962715107211918*^9, 3.9627173423040695`*^9, {
   3.9627184348469563`*^9, 3.9627184481518297`*^9}, {3.9628231457512503`*^9, 
   3.9628231613733854`*^9}, 3.962823213737838*^9, 3.962823277675476*^9, {
   3.962823440284357*^9, 3.962823459918148*^9}, 3.9628236708809013`*^9, 
   3.962844904116783*^9, 3.9628449690733423`*^9, {3.9628450611267757`*^9, 
   3.9628450891963515`*^9}, {3.962845192648903*^9, 3.962845193289407*^9}, 
   3.962845352955842*^9, {3.962849681306136*^9, 3.96284968170887*^9}, 
   3.9628547022942286`*^9, {3.962854896806715*^9, 3.962854914391412*^9}, 
   3.9628555663944707`*^9, {3.9628557765563574`*^9, 3.9628557790343523`*^9}, 
   3.9628571714227705`*^9, {3.9628572496393967`*^9, 3.9628572503403177`*^9}, 
   3.9628572926113796`*^9, {3.962865403354826*^9, 3.962865408387747*^9}, 
   3.962865451038108*^9, 3.9628681799286137`*^9, 3.9628682229643345`*^9, 
   3.962889513902331*^9, 3.9628898039582586`*^9, {3.9628916615796394`*^9, 
   3.962891680128615*^9}, 3.962892822834195*^9, {3.9628929486434927`*^9, 
   3.962892962032708*^9}, 3.9628937877227025`*^9, {3.962893831585886*^9, 
   3.9628938478272943`*^9}, {3.9628938917064734`*^9, 
   3.9628938984966125`*^9}, {3.962894791472889*^9, 3.962894840070718*^9}, {
   3.9628948749400396`*^9, 3.9628948885724745`*^9}, {3.962942043943723*^9, 
   3.9629420454283867`*^9}, 3.962942100797423*^9, {3.962942948662923*^9, 
   3.9629429583635645`*^9}, {3.9629429917011538`*^9, 3.962943021267565*^9}, {
   3.9629432539798436`*^9, 3.9629432539798436`*^9}, {3.962945955334607*^9, 
   3.962945974185751*^9}, {3.9629462326172*^9, 3.962946262902196*^9}, {
   3.962946457780168*^9, 3.962946481647089*^9}, {3.9629472264570055`*^9, 
   3.962947227024354*^9}, 3.9629756715062466`*^9, 3.963021216043664*^9, {
   3.96302188008191*^9, 3.963021881048892*^9}, 3.963022231434904*^9, {
   3.963023951416649*^9, 3.9630239560150995`*^9}, 3.9630250427280493`*^9, 
   3.9630250931817365`*^9, 3.9630251974531574`*^9, {3.9630254434008784`*^9, 
   3.9630254499184823`*^9}, {3.9630280238647566`*^9, 3.9630280630334806`*^9}, 
   3.96303408827763*^9, {3.963034770227908*^9, 3.963034794836006*^9}, {
   3.9631185152362356`*^9, 3.963118559097946*^9}, {3.9631189275029297`*^9, 
   3.96311892824749*^9}, {3.9631191005744867`*^9, 3.9631191012759347`*^9}, 
   3.9631193036760006`*^9, {3.9631199133129606`*^9, 3.963119927472849*^9}, {
   3.9631212988217325`*^9, 3.9631212995571465`*^9}, 3.9631233005357027`*^9, {
   3.963124292827777*^9, 3.963124295937396*^9}, {3.9631243273526726`*^9, 
   3.9631243414127955`*^9}, 3.963124818242712*^9, {3.963125181255661*^9, 
   3.963125186123685*^9}, {3.963125262949148*^9, 3.963125283743681*^9}, {
   3.96312535416223*^9, 3.9631253941226063`*^9}, {3.9631258107834363`*^9, 
   3.9631258336126285`*^9}, 3.9631258691279883`*^9, {3.9631262021309986`*^9, 
   3.9631262028136463`*^9}, 3.963126377039057*^9, 3.9631264536128426`*^9, {
   3.963126599572325*^9, 3.9631266356900945`*^9}, {3.9631329323526707`*^9, 
   3.963132934348055*^9}, 3.9631341013361845`*^9, 3.9631348221838202`*^9, {
   3.9631372843805866`*^9, 3.9631372935318437`*^9}, {3.9631391220854635`*^9, 
   3.963139132943958*^9}, {3.9631408599017677`*^9, 3.963140860521123*^9}, 
   3.9631428580968833`*^9, 3.9631470240463333`*^9, {3.9631471972845497`*^9, 
   3.963147206469802*^9}, {3.9631473799114065`*^9, 3.9631474196970015`*^9}, {
   3.9631476380944357`*^9, 3.9631476549280653`*^9}, {3.9631496135381637`*^9, 
   3.9631496423901196`*^9}, {3.9631506157462015`*^9, 
   3.9631506173797836`*^9}, {3.963152791534934*^9, 3.9631528049536705`*^9}, {
   3.963153213079587*^9, 3.9631532151094294`*^9}, 3.963154200448008*^9, 
   3.9631542621012774`*^9, {3.96315632734126*^9, 3.963156327958044*^9}, {
   3.9631572222871246`*^9, 3.9631572396377854`*^9}, 3.963157502369219*^9, {
   3.9631575329721527`*^9, 3.96315753877153*^9}, 3.963158373475125*^9, 
   3.963158741123674*^9, 3.963159008772193*^9, {3.963159133412665*^9, 
   3.9631591343462043`*^9}, 3.96315919714952*^9, {3.963159439346257*^9, 
   3.9631594441954765`*^9}, {3.9631594850825047`*^9, 
   3.9631594998672028`*^9}, {3.9631595689711*^9, 3.9631595726045294`*^9}, {
   3.9631597929037046`*^9, 3.963159793311163*^9}, {3.963159920792288*^9, 
   3.96315994629218*^9}, {3.9631910526435356`*^9, 3.963191057611758*^9}, {
   3.9631913201049623`*^9, 3.9631913381566277`*^9}, {3.963191990075638*^9, 
   3.9631920193775206`*^9}, 3.963192248556553*^9, {3.9631922821424923`*^9, 
   3.9631922826758413`*^9}, {3.963192319094876*^9, 3.963192370280943*^9}, 
   3.9631925216729083`*^9, {3.9631926925494413`*^9, 3.9631926930516415`*^9}, {
   3.963192957343544*^9, 3.96319299953347*^9}, {3.9631945419304056`*^9, 
   3.96319454251571*^9}, {3.963195395303524*^9, 3.963195410537408*^9}, 
   3.9631964328962154`*^9, {3.963201013308385*^9, 3.9632010216416397`*^9}, 
   3.9632016546101847`*^9, {3.9632028551958914`*^9, 3.963202857579071*^9}, {
   3.9632029191665955`*^9, 3.9632029300153923`*^9}, 3.96320429061327*^9, {
   3.963204986884127*^9, 3.963204987833815*^9}, {3.963207509361517*^9, 
   3.9632075127710223`*^9}, {3.963207543044176*^9, 3.9632075909293113`*^9}, {
   3.963209377129411*^9, 3.9632093806712217`*^9}, {3.96320942217752*^9, 
   3.9632094438438425`*^9}, 3.963209873817487*^9, 3.96321025935752*^9, {
   3.9632113996271677`*^9, 3.963211405085676*^9}, {3.963211511892869*^9, 
   3.9632115127243166`*^9}, {3.963245613885053*^9, 3.9632456429729605`*^9}, {
   3.963245684540007*^9, 3.9632456877733936`*^9}, {3.9632457551434965`*^9, 
   3.9632457660136495`*^9}, {3.9632526692624636`*^9, 3.963252684030573*^9}, {
   3.963252917496564*^9, 3.9632529196292887`*^9}, {3.9639767816155033`*^9, 
   3.963976782312557*^9}, {3.96397685865862*^9, 3.9639768620420356`*^9}, {
   3.9639769183623066`*^9, 3.9639769530512547`*^9}, {3.963983907322878*^9, 
   3.9639839087743206`*^9}, 3.9640650908428288`*^9, {3.9640707396824036`*^9, 
   3.964070776635747*^9}, {3.9640749698358655`*^9, 3.964074970625373*^9}, {
   3.96407505825533*^9, 3.9640750614869432`*^9}, 3.964081506709243*^9, {
   3.964081799457876*^9, 3.964081800752855*^9}, {3.964081947501276*^9, 
   3.9640819487335596`*^9}, {3.964081992068754*^9, 3.9640820549748397`*^9}, {
   3.964082087424867*^9, 3.964082108227163*^9}, 3.9640822766856017`*^9, {
   3.9640823154265327`*^9, 3.964082330321411*^9}, {3.964084024534919*^9, 
   3.9640840375865984`*^9}, {3.9640840756874404`*^9, 
   3.9640840843889427`*^9}, {3.96408561307658*^9, 3.9640856159642677`*^9}, {
   3.9640860090830097`*^9, 3.9640860180340233`*^9}, {3.9640982889952974`*^9, 
   3.9640982900488815`*^9}, {3.964098375881729*^9, 3.9640983763092594`*^9}, {
   3.9640998371704626`*^9, 3.964099842503361*^9}, 3.9641590241385603`*^9, {
   3.9641590678344164`*^9, 3.9641590915804825`*^9}, 3.9641591456203685`*^9, 
   3.9641591837991047`*^9, {3.9641594434816484`*^9, 3.964159473308338*^9}, {
   3.9641595783349133`*^9, 3.9641595922663717`*^9}, {3.9641596647114697`*^9, 
   3.964159678128563*^9}, {3.9641597343974075`*^9, 3.9641597452050505`*^9}, 
   3.964159781321475*^9, {3.964159865087544*^9, 3.964159906107563*^9}, {
   3.964159947538104*^9, 3.9641599677011485`*^9}, {3.964160251226309*^9, 
   3.964160262765776*^9}, {3.9641624342956095`*^9, 3.9641624714435935`*^9}, {
   3.964162510121546*^9, 3.9641625196354303`*^9}, {3.964162591522951*^9, 
   3.9641625922198353`*^9}, {3.9642704748889503`*^9, 
   3.9642705018299956`*^9}, {3.9642705319228625`*^9, 
   3.9642707361289377`*^9}, {3.9642707669499464`*^9, 
   3.9642708196622972`*^9}, {3.9642708797017155`*^9, 3.964270898688506*^9}, {
   3.964270932611574*^9, 3.9642710012104745`*^9}, {3.9642711613203683`*^9, 
   3.964271198505082*^9}, {3.9643077253178115`*^9, 3.964307748859022*^9}, {
   3.9643078923298545`*^9, 3.964307951726128*^9}, {3.9643081250486546`*^9, 
   3.9643081346456857`*^9}, {3.964308396450678*^9, 3.964308404789897*^9}, {
   3.964308456312801*^9, 3.9643084569916353`*^9}, {3.9643086848696337`*^9, 
   3.9643087341969457`*^9}, {3.9643088294087505`*^9, 3.9643088713631926`*^9}, 
   3.964309389032727*^9, {3.9645013904312563`*^9, 3.9645013906070504`*^9}, 
   3.964509288469149*^9, {3.964662324522463*^9, 3.964662345805157*^9}, {
   3.9646800495252857`*^9, 3.964680050216132*^9}, {3.964695126788616*^9, 
   3.9646951282338705`*^9}, {3.9646957202120566`*^9, 3.964695732092479*^9}, {
   3.9646957703478203`*^9, 3.964695776456315*^9}, 3.964705480277034*^9, {
   3.9647069481521316`*^9, 3.9647069575788784`*^9}, {3.9647070481243553`*^9, 
   3.96470705632207*^9}, 3.965449949910245*^9, 3.965449991784193*^9, {
   3.9654504603107653`*^9, 3.9654504650806932`*^9}, {3.965450536042237*^9, 
   3.9654505365079*^9}, {3.965450569243484*^9, 3.965450604704205*^9}, 
   3.96545090717113*^9, {3.965452945692235*^9, 3.9654529594931245`*^9}, 
   3.9654530068626957`*^9, {3.965453063772749*^9, 3.9654530879676228`*^9}, {
   3.96545607799697*^9, 3.965456088574584*^9}, {3.9654561674645214`*^9, 
   3.965456168125746*^9}, {3.965456518534769*^9, 3.965456520527862*^9}, 
   3.965456621045799*^9, 3.9654697306705866`*^9, {3.965469829867806*^9, 
   3.9654698836237307`*^9}, {3.9654707746055*^9, 3.965470777489106*^9}, {
   3.9654715333315163`*^9, 3.9654716397995996`*^9}, {3.9654723524143114`*^9, 
   3.965472358174728*^9}, {3.9654725620274463`*^9, 3.9654725677449408`*^9}, {
   3.965472714075496*^9, 3.965472714941763*^9}, {3.9654728480597982`*^9, 
   3.9654728716248074`*^9}, {3.9654729028360677`*^9, 
   3.9654729063215466`*^9}, {3.9654749601921535`*^9, 3.965474960958957*^9}, {
   3.965481576337268*^9, 3.965481632613905*^9}, {3.9654816640027094`*^9, 
   3.965481676612955*^9}, 3.965481730964573*^9, {3.9654824879435186`*^9, 
   3.965482492025914*^9}, 3.9654880053232374`*^9, {3.965488038724822*^9, 
   3.9654880388908124`*^9}, 3.965488118029108*^9, {3.965611626993947*^9, 
   3.9656116463884835`*^9}, 3.9656117079552617`*^9, {3.9656125712348*^9, 
   3.96561259443229*^9}, {3.9656130783790884`*^9, 3.965613082313505*^9}, {
   3.9656871315539784`*^9, 3.9656871409369955`*^9}, {3.965688269586364*^9, 
   3.9656882702362056`*^9}, {3.96568939230066*^9, 3.9656894305860014`*^9}, {
   3.965689466655596*^9, 3.96568946918889*^9}, {3.9656897748353453`*^9, 
   3.965689790696245*^9}, {3.9656898312005367`*^9, 3.9656898318344965`*^9}, {
   3.96569372526594*^9, 3.965693752631014*^9}, {3.9656985661152325`*^9, 
   3.96569856686486*^9}, {3.9656986663543534`*^9, 3.9656986724890647`*^9}, {
   3.9656987582442236`*^9, 3.9656987708769197`*^9}, 3.965698926752309*^9, {
   3.965700654294944*^9, 3.965700679524372*^9}, 3.9657016270257416`*^9, {
   3.9657017645335517`*^9, 3.9657017797509794`*^9}, 3.9657018947240067`*^9, {
   3.965809149826235*^9, 3.9658091662189474`*^9}, {3.965809203797599*^9, 
   3.9658092337489004`*^9}, {3.9658094109521575`*^9, 3.965809455198993*^9}, 
   3.9658097681637087`*^9, {3.9659431055660734`*^9, 3.9659431546041756`*^9}, {
   3.9659436267940655`*^9, 3.965943634827593*^9}, {3.96613121659566*^9, 
   3.9661313355368595`*^9}, {3.9661314400758195`*^9, 3.966131590584298*^9}, 
   3.9670823348464503`*^9, {3.9670828262078433`*^9, 3.967082826790867*^9}, {
   3.967082874326375*^9, 3.9670829252297273`*^9}, {3.9670831926359177`*^9, 
   3.967083225937711*^9}, {3.9670832814003744`*^9, 3.967083305901334*^9}, {
   3.9670834926792955`*^9, 3.967083500895709*^9}, {3.9670914370432653`*^9, 
   3.9670914769455767`*^9}, {3.9675175489328365`*^9, 3.967517549648712*^9}, {
   3.967546034393625*^9, 3.9675460359768767`*^9}, {3.9675460711663203`*^9, 
   3.9675460849130597`*^9}, {3.9675461348990784`*^9, 3.967546153150484*^9}, {
   3.967599082469078*^9, 3.967599083002796*^9}, {3.9675993035483365`*^9, 
   3.9675993589846945`*^9}, {3.9676003819931545`*^9, 
   3.9676003949104104`*^9}, {3.967600503283679*^9, 3.967600503784994*^9}, {
   3.9676117954704084`*^9, 3.9676117959442406`*^9}, {3.9676922329875116`*^9, 
   3.9676922388212557`*^9}, {3.9676923670460405`*^9, 3.9676924262493534`*^9}, 
   3.967692512103286*^9, {3.967718162580919*^9, 3.967718163081414*^9}, 
   3.9677191356021357`*^9, {3.967719234008833*^9, 3.9677192740612197`*^9}, {
   3.9677219854099817`*^9, 3.967721993465953*^9}, 3.9677220883879786`*^9, 
   3.9677221996283793`*^9, {3.9677225575475707`*^9, 3.967722560917474*^9}, {
   3.9677227117743073`*^9, 3.9677227479425154`*^9}, {3.967722788299403*^9, 
   3.9677227889440565`*^9}, {3.967723349160455*^9, 3.967723381562479*^9}, {
   3.9677234406821346`*^9, 3.9677234582324886`*^9}, {3.9677235712886457`*^9, 
   3.9677235962903123`*^9}, {3.967723630859296*^9, 3.9677236371097136`*^9}, {
   3.967725760080874*^9, 3.967725765847455*^9}, {3.967726263459236*^9, 
   3.967726272893594*^9}, {3.967727218380493*^9, 3.9677272189636707`*^9}, {
   3.967776700095064*^9, 3.9677767783340883`*^9}, {3.967776835003586*^9, 
   3.9677768443380246`*^9}, {3.9677795984367895`*^9, 
   3.9677796165210147`*^9}, {3.9677796704728265`*^9, 3.967779685611964*^9}, {
   3.967779790531252*^9, 3.967779805099414*^9}, {3.967781047201597*^9, 
   3.9677810720041523`*^9}, {3.967781188459882*^9, 3.9677812257460675`*^9}, {
   3.967781968754798*^9, 3.9677819797715387`*^9}, {3.9678573759205823`*^9, 
   3.967857393682833*^9}, {3.9678591710787745`*^9, 3.9678592435406075`*^9}, {
   3.9679481593402243`*^9, 3.967948194310707*^9}, {3.9679482711807985`*^9, 
   3.967948311866982*^9}, {3.9679484163061275`*^9, 3.9679484481250763`*^9}, {
   3.967948487126528*^9, 3.9679484878924327`*^9}, 3.9679485210114527`*^9, {
   3.967948739774125*^9, 3.9679487495249615`*^9}, {3.967948877534971*^9, 
   3.9679488918490496`*^9}, 3.967949290254668*^9, 3.9679493477582664`*^9, {
   3.967949391139821*^9, 3.967949456898764*^9}, {3.9679496300281672`*^9, 
   3.967949711231583*^9}, {3.9679498925448637`*^9, 3.967949975304005*^9}, {
   3.967950033370882*^9, 3.9679500955317397`*^9}, {3.9679501599914446`*^9, 
   3.9679501860889463`*^9}, {3.967950229103647*^9, 3.9679503069140153`*^9}, {
   3.9679518739075985`*^9, 3.967951982496482*^9}, {3.9679520143391895`*^9, 
   3.967952030246213*^9}, {3.9679520801053195`*^9, 3.967952080667884*^9}, {
   3.9679522033729763`*^9, 3.9679522157720723`*^9}, {3.967952308603771*^9, 
   3.9679523223475437`*^9}, 3.9681178268504457`*^9, {3.9681178995555015`*^9, 
   3.9681179001750154`*^9}, {3.968125833842613*^9, 3.9681258896125507`*^9}, {
   3.96814225267541*^9, 3.968142253049199*^9}, {3.968147544456551*^9, 
   3.9681475851903543`*^9}, {3.968147639480085*^9, 3.968147650163777*^9}, {
   3.9681476921658463`*^9, 3.9681477045101404`*^9}, {3.968147748825308*^9, 
   3.9681477488349495`*^9}, {3.968147796941317*^9, 3.9681477969473267`*^9}, {
   3.9681481411238422`*^9, 3.968148141140586*^9}, {3.9681482172268147`*^9, 
   3.968148255552*^9}, {3.9681488762341766`*^9, 3.968148885817621*^9}, {
   3.968148959221032*^9, 3.96814896205482*^9}, {3.96814901085693*^9, 
   3.9681490108727093`*^9}, {3.9681490430312967`*^9, 
   3.9681490455600977`*^9}, {3.968149295810017*^9, 3.968149334610261*^9}, {
   3.968203061117049*^9, 3.9682030825609183`*^9}, {3.968203545185994*^9, 
   3.9682035541267333`*^9}, 3.9682044383469563`*^9, 3.9682048600598207`*^9, {
   3.968284159432726*^9, 3.968284191657939*^9}, {3.9682946838605433`*^9, 
   3.968294878605791*^9}, {3.968294919549362*^9, 3.968294937623464*^9}, {
   3.968313661546775*^9, 3.968313679397318*^9}, 3.9683137685516825`*^9, {
   3.968316840360952*^9, 3.9683168571618633`*^9}, {3.968322302440524*^9, 
   3.9683223193919797`*^9}, {3.9683240591891727`*^9, 3.9683240661125145`*^9}, 
   3.968551216284711*^9, {3.9685513056431704`*^9, 3.968551389677243*^9}, {
   3.9689176277745695`*^9, 3.968917636738474*^9}, {3.9694349952283597`*^9, 
   3.969434999829948*^9}, 3.969504503460374*^9, {3.9695045683515644`*^9, 
   3.9695045686174755`*^9}, {3.969506284849454*^9, 3.9695063748056135`*^9}, {
   3.9695064203533907`*^9, 3.9695064472919188`*^9}, {3.969506511179413*^9, 
   3.969506573751681*^9}, {3.969506906001582*^9, 3.9695069451019106`*^9}, {
   3.969507027142408*^9, 3.9695071060338497`*^9}, {3.969508353825076*^9, 
   3.9695083666761255`*^9}, {3.969508703871109*^9, 3.969508718451007*^9}, {
   3.9695391966096115`*^9, 3.969539216147646*^9}, {3.969539277631138*^9, 
   3.9695392783474464`*^9}, {3.9695396116997795`*^9, 3.969539668419936*^9}, {
   3.969772412985292*^9, 3.969772413657751*^9}, 3.969772695972939*^9, 
   3.9697727619612007`*^9, 3.9697731339234324`*^9, 3.9697758968447537`*^9, {
   3.969775963372448*^9, 3.9697759677423105`*^9}, {3.9699368465551853`*^9, 
   3.969936960053794*^9}, {3.9699376636032715`*^9, 3.969937664168358*^9}, {
   3.969938901567731*^9, 3.969938979737027*^9}, {3.9699390584759607`*^9, 
   3.969939081927608*^9}, {3.9699397412081575`*^9, 3.9699397511994267`*^9}, 
   3.969940139654403*^9, {3.969940178743132*^9, 3.9699401806155634`*^9}, {
   3.969941765534483*^9, 3.9699419512636733`*^9}, 3.9699525227701273`*^9, 
   3.9699525856579995`*^9, {3.969953522794306*^9, 3.9699535234064817`*^9}, {
   3.9699539582767124`*^9, 3.969953988722038*^9}, {3.969954035542448*^9, 
   3.969954038907902*^9}, {3.9699565669610205`*^9, 3.9699565898505974`*^9}, 
   3.9699568104799557`*^9, 3.9699580398120327`*^9, {3.9699583671114855`*^9, 
   3.9699583676451116`*^9}, {3.9699584977420883`*^9, 
   3.9699585268860316`*^9}, {3.969959220273677*^9, 3.9699593069124637`*^9}, {
   3.9699596180609555`*^9, 3.969959618490291*^9}, {3.9699620062790456`*^9, 
   3.9699620069344563`*^9}, {3.9699623944078918`*^9, 3.969962450466742*^9}, 
   3.970081031074698*^9, {3.9700810760775166`*^9, 3.9700811443484545`*^9}, {
   3.970081235520895*^9, 3.970081260988146*^9}, {3.9700812912398405`*^9, 
   3.970081338993414*^9}, {3.97008137132808*^9, 3.9700815076070023`*^9}, 
   3.9700817191814833`*^9, {3.970081761816889*^9, 3.9700817726633325`*^9}, {
   3.9700820444668756`*^9, 3.9700820504838643`*^9}, 3.9700822079428787`*^9, {
   3.9700822884302588`*^9, 3.970082344940529*^9}, {3.970082378602498*^9, 
   3.9700823832359705`*^9}, {3.970082468390644*^9, 3.9700824838577185`*^9}, {
   3.97008257041299*^9, 3.970082595731495*^9}, {3.970082630683201*^9, 
   3.970082764640292*^9}, {3.9700827974597793`*^9, 3.970082804797801*^9}, 
   3.970082850561767*^9, 3.970086807919688*^9, {3.970086962595559*^9, 
   3.9700869851797853`*^9}, {3.9700870437557707`*^9, 3.970087061768664*^9}, {
   3.970087095836941*^9, 3.970087108724434*^9}, 3.970087959385127*^9, {
   3.970089303811756*^9, 3.970089330331341*^9}, {3.970090468723367*^9, 
   3.9700905510841355`*^9}, {3.970090662090702*^9, 3.970090705040492*^9}, {
   3.970090738193801*^9, 3.9700907457606993`*^9}, {3.9700911223153567`*^9, 
   3.9700911232822495`*^9}, {3.970091195770067*^9, 3.970091207336751*^9}, {
   3.9700912943919535`*^9, 3.9700913095753345`*^9}, 3.9700916858144855`*^9, 
   3.9700922126110315`*^9, 3.97009268805564*^9, {3.9701084655130477`*^9, 
   3.9701085174171157`*^9}, {3.970109782906253*^9, 3.9701098135911846`*^9}, {
   3.9701098689612365`*^9, 3.9701098763784833`*^9}, 3.970109951381453*^9, {
   3.97011009612389*^9, 3.9701101185418587`*^9}, 3.9701110205588045`*^9, 
   3.9701121047554235`*^9, 3.970141277793187*^9, {3.9701413115119543`*^9, 
   3.970141313827194*^9}, {3.97014143318565*^9, 3.970141472654504*^9}, {
   3.9701415051055727`*^9, 3.9701415257908087`*^9}, {3.9701415749664993`*^9, 
   3.9701415791253448`*^9}, 3.970142382238016*^9, {3.970143469416176*^9, 
   3.970143492635556*^9}, 
   3.9701456836525326`*^9},ExpressionUUID->"62d63871-01e9-4ff1-ac25-\
d448c6b9be7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"560", "*", 
   RowBox[{"5", "/", "7"}]}]}]], "Input",
 CellChangeTimes->{
  3.9627027020233946`*^9, {3.9627027557755327`*^9, 3.9627027627794952`*^9}, {
   3.962703591339924*^9, 3.9627036425539064`*^9}, {3.962703715845883*^9, 
   3.962703760615386*^9}, 3.962715107211918*^9, 3.9627173423040695`*^9, {
   3.9627184348469563`*^9, 3.9627184481518297`*^9}, {3.9628231457512503`*^9, 
   3.9628231613733854`*^9}, 3.962823213737838*^9, 3.962823277675476*^9, {
   3.962823440284357*^9, 3.962823459918148*^9}, 3.9628236708809013`*^9, 
   3.962844904116783*^9, 3.9628449690733423`*^9, {3.9628450611267757`*^9, 
   3.9628450891963515`*^9}, {3.962845192648903*^9, 3.962845193289407*^9}, 
   3.962845352955842*^9, {3.962849681306136*^9, 3.96284968170887*^9}, 
   3.9628547022942286`*^9, {3.962854896806715*^9, 3.962854914391412*^9}, 
   3.9628555663944707`*^9, {3.9628557765563574`*^9, 3.9628557790343523`*^9}, 
   3.9628571714227705`*^9, {3.9628572496393967`*^9, 3.9628572503403177`*^9}, 
   3.9628572926113796`*^9, {3.962865403354826*^9, 3.962865408387747*^9}, 
   3.962865451038108*^9, 3.9628681799286137`*^9, 3.9628682229643345`*^9, 
   3.962889513902331*^9, 3.9628898039582586`*^9, {3.9628916615796394`*^9, 
   3.962891680128615*^9}, 3.962892822834195*^9, {3.9628929486434927`*^9, 
   3.962892962032708*^9}, 3.9628937877227025`*^9, {3.962893831585886*^9, 
   3.9628938478272943`*^9}, {3.9628938917064734`*^9, 
   3.9628938984966125`*^9}, {3.962894791472889*^9, 3.962894840070718*^9}, {
   3.9628948749400396`*^9, 3.9628948885724745`*^9}, {3.962942043943723*^9, 
   3.9629420454283867`*^9}, 3.962942100797423*^9, {3.962942948662923*^9, 
   3.9629429583635645`*^9}, {3.9629429917011538`*^9, 3.962943021267565*^9}, {
   3.9629432539798436`*^9, 3.9629432539798436`*^9}, {3.962945955334607*^9, 
   3.962945974185751*^9}, {3.9629462326172*^9, 3.962946262902196*^9}, {
   3.962946457780168*^9, 3.962946481647089*^9}, {3.9629472264570055`*^9, 
   3.962947227024354*^9}, 3.9629756715062466`*^9, 3.963021216043664*^9, {
   3.96302188008191*^9, 3.963021881048892*^9}, 3.963022231434904*^9, {
   3.963023951416649*^9, 3.9630239560150995`*^9}, 3.9630250427280493`*^9, 
   3.9630250931817365`*^9, 3.9630251974531574`*^9, {3.9630254434008784`*^9, 
   3.9630254499184823`*^9}, {3.9630280238647566`*^9, 3.9630280630334806`*^9}, 
   3.96303408827763*^9, {3.963034770227908*^9, 3.963034794836006*^9}, {
   3.9631185152362356`*^9, 3.963118559097946*^9}, {3.9631189275029297`*^9, 
   3.96311892824749*^9}, {3.9631191005744867`*^9, 3.9631191012759347`*^9}, 
   3.9631193036760006`*^9, {3.9631199133129606`*^9, 3.963119927472849*^9}, {
   3.9631212988217325`*^9, 3.9631212995571465`*^9}, 3.9631233005357027`*^9, {
   3.963124292827777*^9, 3.963124295937396*^9}, {3.9631243273526726`*^9, 
   3.9631243414127955`*^9}, 3.963124818242712*^9, {3.963125181255661*^9, 
   3.963125186123685*^9}, {3.963125262949148*^9, 3.963125283743681*^9}, {
   3.96312535416223*^9, 3.9631253941226063`*^9}, {3.9631258107834363`*^9, 
   3.9631258336126285`*^9}, 3.9631258691279883`*^9, {3.9631262021309986`*^9, 
   3.9631262028136463`*^9}, 3.963126377039057*^9, 3.9631264536128426`*^9, {
   3.963126599572325*^9, 3.9631266356900945`*^9}, {3.9631329323526707`*^9, 
   3.963132934348055*^9}, 3.9631341013361845`*^9, 3.9631348221838202`*^9, {
   3.9631372843805866`*^9, 3.9631372935318437`*^9}, {3.9631391220854635`*^9, 
   3.963139132943958*^9}, {3.9631408599017677`*^9, 3.963140860521123*^9}, 
   3.9631428580968833`*^9, 3.9631470240463333`*^9, {3.9631471972845497`*^9, 
   3.963147206469802*^9}, {3.9631473799114065`*^9, 3.9631474196970015`*^9}, {
   3.9631476380944357`*^9, 3.9631476549280653`*^9}, {3.9631496135381637`*^9, 
   3.9631496423901196`*^9}, {3.9631506157462015`*^9, 
   3.9631506173797836`*^9}, {3.963152791534934*^9, 3.9631528049536705`*^9}, {
   3.963153213079587*^9, 3.9631532151094294`*^9}, 3.963154200448008*^9, 
   3.9631542621012774`*^9, {3.96315632734126*^9, 3.963156327958044*^9}, {
   3.9631572222871246`*^9, 3.9631572396377854`*^9}, 3.963157502369219*^9, {
   3.9631575329721527`*^9, 3.96315753877153*^9}, 3.963158373475125*^9, 
   3.963158741123674*^9, 3.963159008772193*^9, {3.963159133412665*^9, 
   3.9631591343462043`*^9}, 3.96315919714952*^9, {3.963159439346257*^9, 
   3.9631594441954765`*^9}, {3.9631594850825047`*^9, 
   3.9631594998672028`*^9}, {3.9631595689711*^9, 3.9631595726045294`*^9}, {
   3.9631597929037046`*^9, 3.963159793311163*^9}, {3.963159920792288*^9, 
   3.96315994629218*^9}, {3.9631910526435356`*^9, 3.963191057611758*^9}, {
   3.9631913201049623`*^9, 3.9631913381566277`*^9}, {3.963191990075638*^9, 
   3.9631920193775206`*^9}, 3.963192248556553*^9, {3.9631922821424923`*^9, 
   3.9631922826758413`*^9}, {3.963192319094876*^9, 3.963192370280943*^9}, 
   3.9631925216729083`*^9, {3.9631926925494413`*^9, 3.9631926930516415`*^9}, {
   3.963192957343544*^9, 3.96319299953347*^9}, {3.9631945419304056`*^9, 
   3.96319454251571*^9}, {3.963195395303524*^9, 3.963195410537408*^9}, 
   3.9631964328962154`*^9, {3.963201013308385*^9, 3.9632010216416397`*^9}, 
   3.9632016546101847`*^9, {3.9632028551958914`*^9, 3.963202857579071*^9}, {
   3.9632029191665955`*^9, 3.9632029300153923`*^9}, 3.96320429061327*^9, {
   3.963204986884127*^9, 3.963204987833815*^9}, {3.963207509361517*^9, 
   3.9632075127710223`*^9}, {3.963207543044176*^9, 3.9632075909293113`*^9}, {
   3.963209377129411*^9, 3.9632093806712217`*^9}, {3.96320942217752*^9, 
   3.9632094438438425`*^9}, 3.963209873817487*^9, 3.96321025935752*^9, {
   3.9632113996271677`*^9, 3.963211405085676*^9}, {3.963211511892869*^9, 
   3.9632115127243166`*^9}, {3.963245613885053*^9, 3.9632456429729605`*^9}, {
   3.963245684540007*^9, 3.9632456877733936`*^9}, {3.9632457551434965`*^9, 
   3.9632457660136495`*^9}, {3.9632526692624636`*^9, 3.963252684030573*^9}, {
   3.963252917496564*^9, 3.9632529196292887`*^9}, {3.9639767816155033`*^9, 
   3.963976782312557*^9}, {3.96397685865862*^9, 3.9639768620420356`*^9}, {
   3.9639769183623066`*^9, 3.9639769530512547`*^9}, {3.963983907322878*^9, 
   3.9639839087743206`*^9}, 3.9640650908428288`*^9, {3.9640707396824036`*^9, 
   3.964070776635747*^9}, {3.9640749698358655`*^9, 3.964074970625373*^9}, {
   3.96407505825533*^9, 3.9640750614869432`*^9}, 3.964081506709243*^9, {
   3.964081799457876*^9, 3.964081800752855*^9}, {3.964081947501276*^9, 
   3.9640819487335596`*^9}, {3.964081992068754*^9, 3.9640820549748397`*^9}, {
   3.964082087424867*^9, 3.964082108227163*^9}, 3.9640822766856017`*^9, {
   3.9640823154265327`*^9, 3.964082330321411*^9}, {3.964084024534919*^9, 
   3.9640840375865984`*^9}, {3.9640840756874404`*^9, 
   3.9640840843889427`*^9}, {3.96408561307658*^9, 3.9640856159642677`*^9}, {
   3.9640860090830097`*^9, 3.9640860180340233`*^9}, {3.9640982889952974`*^9, 
   3.9640982900488815`*^9}, {3.964098375881729*^9, 3.9640983763092594`*^9}, {
   3.9640998371704626`*^9, 3.964099842503361*^9}, 3.9641590241385603`*^9, {
   3.9641590678344164`*^9, 3.9641590915804825`*^9}, 3.9641591456203685`*^9, 
   3.9641591837991047`*^9, {3.9641594434816484`*^9, 3.964159473308338*^9}, {
   3.9641595783349133`*^9, 3.9641595922663717`*^9}, {3.9641596647114697`*^9, 
   3.964159678128563*^9}, {3.9641597343974075`*^9, 3.9641597452050505`*^9}, 
   3.964159781321475*^9, {3.964159865087544*^9, 3.964159906107563*^9}, {
   3.964159947538104*^9, 3.9641599677011485`*^9}, {3.964160251226309*^9, 
   3.964160262765776*^9}, {3.9641624342956095`*^9, 3.9641624714435935`*^9}, {
   3.964162510121546*^9, 3.9641625196354303`*^9}, {3.964162591522951*^9, 
   3.9641625922198353`*^9}, {3.9642704748889503`*^9, 
   3.9642705018299956`*^9}, {3.9642705319228625`*^9, 
   3.9642707361289377`*^9}, {3.9642707669499464`*^9, 
   3.9642708196622972`*^9}, {3.9642708797017155`*^9, 3.964270898688506*^9}, {
   3.964270932611574*^9, 3.9642710012104745`*^9}, {3.9642711613203683`*^9, 
   3.964271198505082*^9}, {3.9643077253178115`*^9, 3.964307748859022*^9}, {
   3.9643078923298545`*^9, 3.964307951726128*^9}, {3.9643081250486546`*^9, 
   3.9643081346456857`*^9}, {3.964308396450678*^9, 3.964308404789897*^9}, {
   3.964308456312801*^9, 3.9643084569916353`*^9}, {3.9643086848696337`*^9, 
   3.9643087341969457`*^9}, {3.9643088294087505`*^9, 3.9643088713631926`*^9}, 
   3.964309389032727*^9, {3.9645013904312563`*^9, 3.9645013906070504`*^9}, 
   3.964509288469149*^9, {3.964662324522463*^9, 3.964662345805157*^9}, {
   3.9646800495252857`*^9, 3.964680050216132*^9}, {3.964695126788616*^9, 
   3.9646951282338705`*^9}, {3.9646957202120566`*^9, 3.964695732092479*^9}, {
   3.9646957703478203`*^9, 3.964695776456315*^9}, 3.964705480277034*^9, {
   3.9647069481521316`*^9, 3.9647069575788784`*^9}, {3.9647070481243553`*^9, 
   3.96470705632207*^9}, 3.965449949910245*^9, 3.965449991784193*^9, {
   3.9654504603107653`*^9, 3.9654504650806932`*^9}, {3.965450536042237*^9, 
   3.9654505365079*^9}, {3.965450569243484*^9, 3.965450604704205*^9}, 
   3.96545090717113*^9, {3.965452945692235*^9, 3.9654529594931245`*^9}, 
   3.9654530068626957`*^9, {3.965453063772749*^9, 3.9654530879676228`*^9}, {
   3.96545607799697*^9, 3.965456088574584*^9}, {3.9654561674645214`*^9, 
   3.965456168125746*^9}, {3.965456518534769*^9, 3.965456520527862*^9}, 
   3.965456621045799*^9, 3.9654697306705866`*^9, {3.965469829867806*^9, 
   3.9654698836237307`*^9}, {3.9654707746055*^9, 3.965470777489106*^9}, {
   3.9654715333315163`*^9, 3.9654716397995996`*^9}, {3.9654723524143114`*^9, 
   3.965472358174728*^9}, {3.9654725620274463`*^9, 3.9654725677449408`*^9}, {
   3.965472714075496*^9, 3.965472714941763*^9}, {3.9654728480597982`*^9, 
   3.9654728716248074`*^9}, {3.9654729028360677`*^9, 
   3.9654729063215466`*^9}, {3.9654749601921535`*^9, 3.965474960958957*^9}, {
   3.965481576337268*^9, 3.965481632613905*^9}, {3.9654816640027094`*^9, 
   3.965481676612955*^9}, 3.965481730964573*^9, {3.9654824879435186`*^9, 
   3.965482492025914*^9}, 3.9654880053232374`*^9, {3.965488038724822*^9, 
   3.9654880388908124`*^9}, 3.965488118029108*^9, {3.965611626993947*^9, 
   3.9656116463884835`*^9}, 3.9656117079552617`*^9, {3.9656125712348*^9, 
   3.96561259443229*^9}, {3.9656130783790884`*^9, 3.965613082313505*^9}, {
   3.9656871315539784`*^9, 3.9656871409369955`*^9}, {3.965688269586364*^9, 
   3.9656882702362056`*^9}, {3.96568939230066*^9, 3.9656894305860014`*^9}, {
   3.965689466655596*^9, 3.96568946918889*^9}, {3.9656897748353453`*^9, 
   3.965689790696245*^9}, {3.9656898312005367`*^9, 3.9656898318344965`*^9}, {
   3.96569372526594*^9, 3.965693752631014*^9}, {3.9656985661152325`*^9, 
   3.96569856686486*^9}, {3.9656986663543534`*^9, 3.9656986724890647`*^9}, {
   3.9656987582442236`*^9, 3.9656987708769197`*^9}, 3.965698926752309*^9, {
   3.965700654294944*^9, 3.965700679524372*^9}, 3.9657016270257416`*^9, {
   3.9657017645335517`*^9, 3.9657017797509794`*^9}, 3.9657018947240067`*^9, {
   3.965809149826235*^9, 3.9658091662189474`*^9}, {3.965809203797599*^9, 
   3.9658092337489004`*^9}, {3.9658094109521575`*^9, 3.965809455198993*^9}, 
   3.9658097681637087`*^9, {3.9659431055660734`*^9, 3.9659431546041756`*^9}, {
   3.9659436267940655`*^9, 3.965943634827593*^9}, {3.96613121659566*^9, 
   3.9661313355368595`*^9}, {3.9661314400758195`*^9, 3.966131590584298*^9}, 
   3.9670823348464503`*^9, {3.9670828262078433`*^9, 3.967082826790867*^9}, {
   3.967082874326375*^9, 3.9670829252297273`*^9}, {3.9670831926359177`*^9, 
   3.967083225937711*^9}, {3.9670832814003744`*^9, 3.967083305901334*^9}, {
   3.9670834926792955`*^9, 3.967083500895709*^9}, {3.9670914370432653`*^9, 
   3.9670914769455767`*^9}, {3.9675175489328365`*^9, 3.967517549648712*^9}, {
   3.967546034393625*^9, 3.9675460359768767`*^9}, {3.9675460711663203`*^9, 
   3.9675460849130597`*^9}, {3.9675461348990784`*^9, 3.967546153150484*^9}, {
   3.967599082469078*^9, 3.967599083002796*^9}, {3.9675993035483365`*^9, 
   3.9675993589846945`*^9}, {3.9676003819931545`*^9, 
   3.9676003949104104`*^9}, {3.967600503283679*^9, 3.967600503784994*^9}, {
   3.9676117954704084`*^9, 3.9676117959442406`*^9}, {3.9676922329875116`*^9, 
   3.9676922388212557`*^9}, {3.9676923670460405`*^9, 3.9676924262493534`*^9}, 
   3.967692512103286*^9, {3.967718162580919*^9, 3.967718163081414*^9}, 
   3.9677191356021357`*^9, {3.967719234008833*^9, 3.9677192740612197`*^9}, {
   3.9677219854099817`*^9, 3.967721993465953*^9}, 3.9677220883879786`*^9, 
   3.9677221996283793`*^9, {3.9677225575475707`*^9, 3.967722560917474*^9}, {
   3.9677227117743073`*^9, 3.9677227479425154`*^9}, {3.967722788299403*^9, 
   3.9677227889440565`*^9}, {3.967723349160455*^9, 3.967723381562479*^9}, {
   3.9677234406821346`*^9, 3.9677234582324886`*^9}, {3.9677235712886457`*^9, 
   3.9677235962903123`*^9}, {3.967723630859296*^9, 3.9677236371097136`*^9}, {
   3.967725760080874*^9, 3.967725765847455*^9}, {3.967726263459236*^9, 
   3.967726272893594*^9}, {3.967727218380493*^9, 3.9677272189636707`*^9}, {
   3.967776700095064*^9, 3.9677767783340883`*^9}, {3.967776835003586*^9, 
   3.9677768443380246`*^9}, {3.9677795984367895`*^9, 
   3.9677796165210147`*^9}, {3.9677796704728265`*^9, 3.967779685611964*^9}, {
   3.967779790531252*^9, 3.967779805099414*^9}, {3.967781047201597*^9, 
   3.9677810720041523`*^9}, {3.967781188459882*^9, 3.9677812257460675`*^9}, {
   3.967781968754798*^9, 3.9677819797715387`*^9}, {3.9678573759205823`*^9, 
   3.967857393682833*^9}, {3.9678591710787745`*^9, 3.9678592435406075`*^9}, {
   3.9679481593402243`*^9, 3.967948194310707*^9}, {3.9679482711807985`*^9, 
   3.967948311866982*^9}, {3.9679484163061275`*^9, 3.9679484481250763`*^9}, {
   3.967948487126528*^9, 3.9679484878924327`*^9}, 3.9679485210114527`*^9, {
   3.967948739774125*^9, 3.9679487495249615`*^9}, {3.967948877534971*^9, 
   3.9679488918490496`*^9}, 3.967949290254668*^9, 3.9679493477582664`*^9, {
   3.967949391139821*^9, 3.967949456898764*^9}, {3.9679496300281672`*^9, 
   3.967949711231583*^9}, {3.9679498925448637`*^9, 3.967949975304005*^9}, {
   3.967950033370882*^9, 3.9679500955317397`*^9}, {3.9679501599914446`*^9, 
   3.9679501860889463`*^9}, {3.967950229103647*^9, 3.9679503069140153`*^9}, {
   3.9679518739075985`*^9, 3.967951982496482*^9}, {3.9679520143391895`*^9, 
   3.967952030246213*^9}, {3.9679520801053195`*^9, 3.967952080667884*^9}, {
   3.9679522033729763`*^9, 3.9679522157720723`*^9}, {3.967952308603771*^9, 
   3.9679523223475437`*^9}, 3.9681178268504457`*^9, {3.9681178995555015`*^9, 
   3.9681179001750154`*^9}, {3.968125833842613*^9, 3.9681258896125507`*^9}, {
   3.96814225267541*^9, 3.968142253049199*^9}, {3.968147544456551*^9, 
   3.9681475851903543`*^9}, {3.968147639480085*^9, 3.968147650163777*^9}, {
   3.9681476921658463`*^9, 3.9681477045101404`*^9}, {3.968147748825308*^9, 
   3.9681477488349495`*^9}, {3.968147796941317*^9, 3.9681477969473267`*^9}, {
   3.9681481411238422`*^9, 3.968148141140586*^9}, {3.9681482172268147`*^9, 
   3.968148255552*^9}, {3.9681488762341766`*^9, 3.968148885817621*^9}, {
   3.968148959221032*^9, 3.96814896205482*^9}, {3.96814901085693*^9, 
   3.9681490108727093`*^9}, {3.9681490430312967`*^9, 
   3.9681490455600977`*^9}, {3.968149295810017*^9, 3.968149334610261*^9}, {
   3.968203061117049*^9, 3.9682030825609183`*^9}, {3.968203545185994*^9, 
   3.9682035541267333`*^9}, 3.9682044383469563`*^9, 3.9682048600598207`*^9, {
   3.968284159432726*^9, 3.968284191657939*^9}, {3.9682946838605433`*^9, 
   3.968294878605791*^9}, {3.968294919549362*^9, 3.968294937623464*^9}, {
   3.968313661546775*^9, 3.968313679397318*^9}, 3.9683137685516825`*^9, {
   3.968316840360952*^9, 3.9683168571618633`*^9}, {3.968322302440524*^9, 
   3.9683223193919797`*^9}, {3.9683240591891727`*^9, 3.9683240661125145`*^9}, 
   3.968551216284711*^9, {3.9685513056431704`*^9, 3.968551389677243*^9}, {
   3.9689176277745695`*^9, 3.968917636738474*^9}, {3.9694349952283597`*^9, 
   3.969434999829948*^9}, 3.969504503460374*^9, {3.9695045683515644`*^9, 
   3.9695045686174755`*^9}, {3.969506284849454*^9, 3.9695063748056135`*^9}, {
   3.9695064203533907`*^9, 3.9695064472919188`*^9}, {3.969506511179413*^9, 
   3.969506573751681*^9}, {3.969506906001582*^9, 3.9695069451019106`*^9}, {
   3.969507027142408*^9, 3.9695071060338497`*^9}, {3.969508353825076*^9, 
   3.9695083666761255`*^9}, {3.969508703871109*^9, 3.969508718451007*^9}, {
   3.9695391966096115`*^9, 3.969539216147646*^9}, {3.969539277631138*^9, 
   3.9695392783474464`*^9}, {3.9695396116997795`*^9, 3.969539668419936*^9}, {
   3.969772412985292*^9, 3.969772413657751*^9}, 3.969772695972939*^9, 
   3.9697727619612007`*^9, 3.9697731339234324`*^9, 3.9697758968447537`*^9, {
   3.969775963372448*^9, 3.9697759677423105`*^9}, {3.9699368465551853`*^9, 
   3.969936960053794*^9}, {3.9699376636032715`*^9, 3.969937664168358*^9}, {
   3.969938901567731*^9, 3.969938979737027*^9}, {3.9699390584759607`*^9, 
   3.969939081927608*^9}, {3.9699397412081575`*^9, 3.9699397511994267`*^9}, 
   3.969940139654403*^9, {3.969940178743132*^9, 3.9699401806155634`*^9}, {
   3.969941765534483*^9, 3.9699419512636733`*^9}, 3.9699525227701273`*^9, 
   3.9699525856579995`*^9, {3.969953522794306*^9, 3.9699535234064817`*^9}, {
   3.9699539582767124`*^9, 3.969953988722038*^9}, {3.969954035542448*^9, 
   3.969954038907902*^9}, {3.9699565669610205`*^9, 3.9699565898505974`*^9}, 
   3.9699568104799557`*^9, 3.9699580398120327`*^9, {3.9699583671114855`*^9, 
   3.9699583676451116`*^9}, {3.9699584977420883`*^9, 
   3.9699585268860316`*^9}, {3.969959220273677*^9, 3.9699593069124637`*^9}, {
   3.9699596180609555`*^9, 3.969959618490291*^9}, {3.9699620062790456`*^9, 
   3.9699620069344563`*^9}, {3.9699623944078918`*^9, 3.969962450466742*^9}, 
   3.970081031074698*^9, {3.9700810760775166`*^9, 3.9700811443484545`*^9}, {
   3.970081235520895*^9, 3.970081260988146*^9}, {3.9700812912398405`*^9, 
   3.970081338993414*^9}, {3.97008137132808*^9, 3.9700815076070023`*^9}, 
   3.9700817191814833`*^9, {3.970081761816889*^9, 3.9700817726633325`*^9}, {
   3.9700820444668756`*^9, 3.9700820504838643`*^9}, 3.9700822079428787`*^9, {
   3.9700822884302588`*^9, 3.970082344940529*^9}, {3.970082378602498*^9, 
   3.9700823832359705`*^9}, {3.970082468390644*^9, 3.9700824838577185`*^9}, {
   3.97008257041299*^9, 3.970082595731495*^9}, {3.970082630683201*^9, 
   3.970082764640292*^9}, {3.9700827974597793`*^9, 3.970082804797801*^9}, 
   3.970082850561767*^9, 3.970086807919688*^9, {3.970086962595559*^9, 
   3.9700869851797853`*^9}, {3.9700870437557707`*^9, 3.970087061768664*^9}, {
   3.970087095836941*^9, 3.970087108724434*^9}, 3.970087959385127*^9, {
   3.970089303811756*^9, 3.970089330331341*^9}, {3.970090468723367*^9, 
   3.9700905510841355`*^9}, {3.970090662090702*^9, 3.970090705040492*^9}, {
   3.970090738193801*^9, 3.9700907457606993`*^9}, {3.9700911223153567`*^9, 
   3.9700911232822495`*^9}, {3.970091195770067*^9, 3.970091207336751*^9}, {
   3.9700912943919535`*^9, 3.9700913095753345`*^9}, 3.9700916858144855`*^9, 
   3.9700922126110315`*^9, 3.97009268805564*^9, {3.9701084655130477`*^9, 
   3.9701085174171157`*^9}, {3.970109782906253*^9, 3.9701098135911846`*^9}, 
   3.9701098689612365`*^9, 3.9701100202878323`*^9, {3.9701102254316826`*^9, 
   3.9701102623328247`*^9}, 3.9701103218785496`*^9, 3.97011104641064*^9, {
   3.9701115657569427`*^9, 3.970111568823382*^9}, {3.970111614525892*^9, 
   3.970111665295541*^9}, 3.970111746665923*^9, {3.970112584365863*^9, 
   3.970112587849077*^9}, 3.9701414085165*^9, {3.970193299801217*^9, 
   3.9701933081872864`*^9}},
 CellLabel->
  "In[306]:=",ExpressionUUID->"66835f36-1efe-4a14-88b4-2b6dcefa596b"],

Cell[BoxData["400"], "Output",
 CellChangeTimes->{
  3.970110230080195*^9, 3.970110264198887*^9, 3.970110607870412*^9, {
   3.9701110282433243`*^9, 3.970111048493932*^9}, {3.9701115538392153`*^9, 
   3.9701115709239454`*^9}, 3.970111666413703*^9, 3.9701117482839823`*^9, 
   3.9701119190541945`*^9, 3.9701122139437475`*^9, 3.9701124352893887`*^9, 
   3.9701125110434885`*^9, 3.970112591631735*^9, 3.970193309497046*^9},
 CellLabel->
  "Out[306]=",ExpressionUUID->"221cfd73-45e5-4179-b7ea-110f5253bb47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EpidCRN`*"}]], "Input",
 CellChangeTimes->{{3.970082958800458*^9, 3.970082962034547*^9}, {
  3.970083015425243*^9, 3.9700830196889143`*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"51e5518f-ad47-4d1f-a9ef-ce1709aeaab5"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["EpidCRN`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["EpidCRN`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["ACM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "ACM", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["getInfectionIndices", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "getInfectionIndices", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NewtPol", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "NewtPol", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["albe", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "albe", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetVec", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "GetVec", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NGM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "NGM", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["arrow2pairReac", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "arrow2pairReac", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Grobpol", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "Grobpol", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["onePR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "onePR", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["asoRea", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "asoRea", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["H4", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "H4", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["onlyP", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "onlyP", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["autocatalysisReport", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "autocatalysisReport", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["H6", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "H6", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["optHopf", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "optHopf", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["bd1", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "bd1", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Hirono", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "Hirono", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Par", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "Par", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["bd2", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "bd2", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["hopfD", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "hopfD", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["perC", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "perC", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["bdAn", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "bdAn", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Hur2", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "Hur2", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["perR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "perR", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["bdCo", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "bdCo", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Hur3M", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "Hur3M", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["persistenceAnalysis", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "persistenceAnalysis", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["bdFp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "bdFp", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Hur4M", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "Hur4M", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["persistenceReport", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "persistenceReport", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["Bifp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "Bifp", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Hur5M", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "Hur5M", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["pertIC", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "pertIC", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["canActRea", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "canActRea", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["IaFHJ", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "IaFHJ", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["phasePl2", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "phasePl2", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["catalysisAnalysis", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "catalysisAnalysis", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["IGMS", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "IGMS", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["posL", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "posL", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["checkPersistence", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "checkPersistence", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["IkFHJ", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "IkFHJ", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["posM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "posM", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["chRN", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "chRN", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["intEq", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "intEq", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["reaToRHS", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "reaToRHS", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CofP", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "CofP", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["invFace", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "invFace", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["reCL", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "reCL", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CofRH", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "CofRH", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["invN", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "invN", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["remZ", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "remZ", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["compToAsso", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "compToAsso", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["invN2", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "invN2", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Res1F", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "Res1F", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["cons", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "cons", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isAutoC", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "isAutoC", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RHS2RN", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "RHS2RN", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["cont", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "cont", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isCritical", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "isCritical", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rtS", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "rtS", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["convertReactionFormat", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "convertReactionFormat", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isDrainable", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "isDrainable", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RUR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "RUR", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["convNum", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "convNum", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isEndotactic", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "isEndotactic", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["scan", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "scan", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["countMS", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "countMS", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isInvariantFacet", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "isInvariantFacet", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["scanPar", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "scanPar", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CreateMassActionRate", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "CreateMassActionRate", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isMAS", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "isMAS", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["selZR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "selZR", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["Deg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "Deg", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isSelfReplicable", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "isSelfReplicable", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["seZF", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "seZF", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DerEq", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "DerEq", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isSiph", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "isSiph", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["simpleOptHopf", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "simpleOptHopf", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DerL", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "DerL", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isStronglyEndotactic", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "isStronglyEndotactic", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["siphonAnalysis", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "siphonAnalysis", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DFE", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "DFE", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["JR0", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "JR0", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SpeComInc", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "SpeComInc", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["edgIGMS", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "edgIGMS", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["JTD", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "JTD", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["sta", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "sta", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["endo", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "endo", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["JTDP", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "JTDP", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Sta", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "Sta", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["EucFHJ", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "EucFHJ", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["L13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "L13", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Stab", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "Stab", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["expM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "expM", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["L1Planar", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "L1Planar", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Stodola", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "Stodola", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["expon", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "expon", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["L23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "L23", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["stoichiometricMatrices", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "stoichiometricMatrices", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["extHD", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "extHD", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["l2L", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "l2L", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["str2Sym", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "str2Sym", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["extMat", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "extMat", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["lapK", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "lapK", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["strEdg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "strEdg", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["extSpe", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "extSpe", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ListFunctionsByPackage", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "ListFunctionsByPackage", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["strToSymb", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "strToSymb", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["FHJ", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "FHJ", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["m2toM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "m2toM", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["sym2Str", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "sym2Str", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["findCatalyticSets", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "findCatalyticSets", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["makeLPM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "makeLPM", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["symbToStr", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "symbToStr", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["findCores", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "findCores", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MAS", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "MAS", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["testMAS", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "testMAS", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["findInternalReactions", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "findInternalReactions", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["mat2Matl", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "mat2Matl", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["toProd", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "toProd", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["findMinimalCriticalSiphons", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "findMinimalCriticalSiphons", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["matl2Mat", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "matl2Mat", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["toSum", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "toSum", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["fpHopf", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "fpHopf", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["matlr2Mat", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "matlr2Mat", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TS", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "TS", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["FposEx", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "FposEx", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["minSiph", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "minSiph", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["whenP", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "whenP", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["GBH", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "GBH", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["mRts", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "mRts", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["WhereIs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "WhereIs", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["getComE", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "getComE", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["mSim", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-1c41a8cf-2fc3-46c7-8ada-e9b386c15eda", {
                   "mSim", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.31666666666666665`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.970083021204891*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"5590a196-7e14-4b42-b7ce-9fbeca28d734"]
}, Open  ]]
},
WindowSize->{791.1428571428571, 371.57142857142856`},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 3, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2b405b4e-69ab-4b69-8224-ad8de1402c2a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[578, 20, 23360, 369, 352, "Input",ExpressionUUID->"3604622a-b672-418b-a705-97f5a454d22c"],
Cell[CellGroupData[{
Cell[23963, 393, 1945, 50, 100, "Print",ExpressionUUID->"62f1aa89-5c46-4393-bf8a-063ccec89a81"],
Cell[25911, 445, 1488, 35, 67, "Print",ExpressionUUID->"0ebf2102-db68-469a-8d8f-a61c775d8eff"],
Cell[27402, 482, 698, 16, 22, "Print",ExpressionUUID->"99e53a77-6dfe-4294-ab61-a88b392ea2cc"],
Cell[28103, 500, 566, 14, 22, "Print",ExpressionUUID->"3cb3382e-3fba-4e80-92c1-5bdd33f77439"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28718, 520, 21293, 315, 276, "Input",ExpressionUUID->"bd6f8e48-7dcb-40e7-9f5e-639613fe1d25"],
Cell[50014, 837, 239, 5, 22, "Print",ExpressionUUID->"cce8648d-0990-40ce-9b6b-35b2724d484f"],
Cell[50256, 844, 20752, 362, 63, "Output",ExpressionUUID->"5a6ac50e-00f7-401f-a51c-ca602414caa8"],
Cell[71011, 1208, 248, 5, 22, "Print",ExpressionUUID->"5aabfd03-beb5-4bb3-afd3-3e70230f3d43"],
Cell[71262, 1215, 20784, 363, 63, "Output",ExpressionUUID->"859887b0-b908-4e36-8c79-c3baa0073edf"],
Cell[92049, 1580, 658, 13, 28, "Message",ExpressionUUID->"1211ab6d-908d-4172-827b-99b13e6a39cd"],
Cell[92710, 1595, 21285, 374, 63, "Output",ExpressionUUID->"d7b36bdf-38db-47c4-b6d6-1a8a200626d8"]
}, Open  ]],
Cell[114010, 1972, 20187, 281, 105, "Input",ExpressionUUID->"62d63871-01e9-4ff1-ac25-d448c6b9be7f"],
Cell[CellGroupData[{
Cell[134222, 2257, 19512, 266, 48, "Input",ExpressionUUID->"66835f36-1efe-4a14-88b4-2b6dcefa596b"],
Cell[153737, 2525, 502, 8, 32, "Output",ExpressionUUID->"221cfd73-45e5-4179-b7ea-110f5253bb47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154276, 2538, 252, 5, 28, "Input",ExpressionUUID->"51e5518f-ad47-4d1f-a9ef-ce1709aeaab5"],
Cell[154531, 2545, 59726, 1443, 1060, "Output",ExpressionUUID->"5590a196-7e14-4b42-b7ce-9fbeca28d734"]
}, Open  ]]
}
]
*)

