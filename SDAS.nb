(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       156,          5]
NotebookDataLength[    200964,       4628]
NotebookOptionsPosition[    194547,       4536]
NotebookOutlinePosition[    195246,       4558]
CellTagsIndexPosition[    195140,       4553]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";", 
  RowBox[{"SetOptions", "[", 
   RowBox[{"$FrontEndSession", ",", 
    RowBox[{"NotebookAutoSave", "->", "True"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"NotebookSave", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$Path", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
      "$HomeDirectory", ",", "\"\<Dropbox\>\"", ",", 
       "\"\<EpidCRNmodels\>\""}], "}"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"<<", "EpidCRN`"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Format", "[", "mu", "]"}], ":=", "\[Mu]"}], ";", 
    RowBox[{
     RowBox[{"Format", "[", "xi", "]"}], ":=", "\[Xi]"}], ";", "\n", 
    RowBox[{
     RowBox[{"Format", "[", "ga", "]"}], ":=", "ga"}], ";", 
    RowBox[{
     RowBox[{"Format", "[", "ga1", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Gamma]", ",", "1"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"Format", "[", "ga2", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Gamma]", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Format", "[", "be1", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Beta]", ",", "1"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"Format", "[", "be2", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Beta]", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Format", "[", "mu1", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Mu]", ",", "1"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"Format", "[", "mu2", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Mu]", ",", "2"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"Format", "[", "mu3", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Mu]", ",", "3"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"Format", "[", "mu0", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Mu]", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Format", "[", "R1", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"R", ",", "1"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"Format", "[", "R2", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"R", ",", "2"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"Format", "[", "R3", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"R", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Format", "[", "et1", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Eta]", ",", "1"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"Format", "[", "et2", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Eta]", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Format", "[", "ga1", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Gamma]", ",", "1"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"Format", "[", "ro12", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Rho]", ",", "12"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"Format", "[", "ro23", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Rho]", ",", "23"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"Format", "[", "ga2", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"\[Gamma]", ",", "2"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"Format", "[", "s0", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"s", ",", "0"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"Format", "[", "th", "]"}], ":=", "\[Theta]"}], ";", "\n", 
    RowBox[{
     RowBox[{"Format", "[", "La", "]"}], ":=", "\[CapitalLambda]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Format", "[", "i1", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"i", ",", "1"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"Format", "[", "i2", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"i", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Format", "[", "i3", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"i", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Format", "[", "i12", "]"}], ":=", 
     RowBox[{"Subscript", "[", 
      RowBox[{"i", ",", "12"}], "]"}]}], ";"}], "*)"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cLog", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"be1", "->", "0"}], ",", 
     RowBox[{"be2", "->", "0"}], ",", 
     RowBox[{"ga1", "->", "0"}], ",", 
     RowBox[{"ga2", "->", "0"}], ",", 
     RowBox[{"b", "->", 
      RowBox[{"r", "*", "s", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"s", "/", "s0"}]}], ")"}]}]}], ",", 
     RowBox[{"mu0", "->", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cbg", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"be1", "->", "0"}], ",", 
     RowBox[{"be2", "->", "0"}], ",", 
     RowBox[{"ga1", "->", "0"}], ",", 
     RowBox[{"ga2", "->", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cbe", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"be1", "->", "0"}], ",", 
     RowBox[{"be2", "->", "0"}]}], "}"}]}], ";", 
  RowBox[{"cb", "=", 
   RowBox[{"b", "->", 
    RowBox[{"s0", " ", "mu0"}]}]}], ";", 
  RowBox[{"cga", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ga1", "->", "0"}], ",", 
     RowBox[{"ga2", "->", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cet", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"et1", "->", 
      RowBox[{"s13", " ", "mu1", " ", "mu3", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R1", "-", "R3"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"s0", "-", "s13"}], ")"}], "mu0", " ", "s0"}], ")"}]}]}]}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"et2", "->", 
      RowBox[{"s23", " ", "mu2", " ", "mu3", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R2", "-", "R3"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"s0", "-", "s23"}], ")"}], "mu0", " ", "s0"}], 
         ")"}]}]}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cmu", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"mu2", " ", "->", "mu"}], ",", 
     RowBox[{"mu3", "->", "mu"}], ",", 
     RowBox[{"mu1", " ", "->", "mu"}], ",", 
     RowBox[{"mu0", "->", "mu"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c3", "=", 
   RowBox[{"{", 
    RowBox[{"i12", "->", "0"}], "}"}]}], ";", 
  RowBox[{"c2", "=", 
   RowBox[{"{", 
    RowBox[{"i2", "->", "0"}], "}"}]}], ";", 
  RowBox[{"c1", "=", 
   RowBox[{"{", 
    RowBox[{"i1", "->", "0"}], "}"}]}], ";", 
  RowBox[{"cb", "=", 
   RowBox[{"b", "->", 
    RowBox[{"r", "*", "s", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"s", "/", "s0"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RN", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "->", "\"\<S\>\""}], ",", 
     RowBox[{"\"\<S\>\"", "->", "0"}], ",", 
     RowBox[{
      RowBox[{"\"\<S\>\"", "+", "\"\<I1\>\""}], "->", 
      RowBox[{"2", "*", "\"\<I1\>\""}]}], ",", 
     RowBox[{"\"\<I1\>\"", "->", "0"}], ",", 
     RowBox[{
      RowBox[{"\"\<I1\>\"", "+", "\"\<I2\>\""}], "->", 
      RowBox[{"2", "*", "\"\<I2\>\""}]}], ",", 
     RowBox[{"\"\<I2\>\"", "->", "0"}], ",", 
     RowBox[{
      RowBox[{"\"\<I2\>\"", "+", "\"\<I3\>\""}], "->", 
      RowBox[{"2", "*", "\"\<I3\>\""}]}], ",", 
     RowBox[{"\"\<I3\>\"", "->", "0"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rts", "=", 
   RowBox[{"{", 
    RowBox[{"La", ",", 
     RowBox[{"mu0", "*", "s"}], ",", 
     RowBox[{"be1", "*", "s", "*", "i1"}], ",", 
     RowBox[{"mu1", "*", "i1"}], ",", 
     RowBox[{"ro12", "*", "i1", "*", "i2"}], ",", 
     RowBox[{"mu2", "*", "i2"}], ",", 
     RowBox[{"ro23", "*", "i2", "*", "i3"}], ",", 
     RowBox[{"mu3", "*", "i3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<reactions and transitions: \>\"", ",", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"RN", ",", "rts"}], "}"}], "]"}], "//", "MatrixForm"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "RHS", ",", " ", "var", ",", " ", "par", ",", " ", "cp", ",", " ", "mSi", 
     ",", " ", "Jx", ",", " ", "Jy", ",", " ", "E0", ",", " ", "K", ",", " ", 
     "R0A", ",", " ", "infVars", ",", "gam", ",", "ng"}], "}"}], "=", " ", 
   RowBox[{"bdAn", "[", 
    RowBox[{"RN", ",", "rts"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"edg", ",", "cyc", ",", "graph"}], "}"}], "=", 
   RowBox[{"IGMS", "[", 
    RowBox[{"RN", ",", " ", "mSi"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<siphons are\>\"", ",", "mSi", ",", "\"\< edges are\>\"", ",", "edg", 
    ",", "\"\<  DFE is\>\"", ",", "E0", ",", "\"\< repr. functions  \>\"", 
    ",", "R0A"}], "]"}], ";", 
  RowBox[{"F", "=", 
   RowBox[{"ng", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";", 
  RowBox[{"V", "=", 
   RowBox[{"ng", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<K=\>\"", ",", 
    RowBox[{"K", "//", "MatrixForm"}], ",", "\"\<F=\>\"", ",", 
    RowBox[{"F", "//", "MatrixForm"}], ",", "\"\<V=\>\"", ",", 
    RowBox[{"V", "//", "MatrixForm"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.9627027020233946`*^9, {3.9627027557755327`*^9, 3.9627027627794952`*^9}, {
   3.962703591339924*^9, 3.9627036425539064`*^9}, {3.962703715845883*^9, 
   3.962703760615386*^9}, 3.962715107211918*^9, 3.9627173423040695`*^9, {
   3.9627184348469563`*^9, 3.9627184481518297`*^9}, {3.9628231457512503`*^9, 
   3.9628231613733854`*^9}, 3.962823213737838*^9, 3.962823277675476*^9, {
   3.962823440284357*^9, 3.962823459918148*^9}, 3.9628236708809013`*^9, 
   3.962844904116783*^9, 3.9628449690733423`*^9, {3.9628450611267757`*^9, 
   3.9628450891963515`*^9}, {3.962845192648903*^9, 3.962845193289407*^9}, 
   3.962845352955842*^9, {3.962849681306136*^9, 3.96284968170887*^9}, 
   3.9628547022942286`*^9, {3.962854896806715*^9, 3.962854914391412*^9}, 
   3.9628555663944707`*^9, {3.9628557765563574`*^9, 3.9628557790343523`*^9}, 
   3.9628571714227705`*^9, {3.9628572496393967`*^9, 3.9628572503403177`*^9}, 
   3.9628572926113796`*^9, {3.962865403354826*^9, 3.962865408387747*^9}, 
   3.962865451038108*^9, 3.9628681799286137`*^9, 3.9628682229643345`*^9, 
   3.962889513902331*^9, 3.9628898039582586`*^9, {3.9628916615796394`*^9, 
   3.962891680128615*^9}, 3.962892822834195*^9, {3.9628929486434927`*^9, 
   3.962892962032708*^9}, 3.9628937877227025`*^9, {3.962893831585886*^9, 
   3.9628938478272943`*^9}, {3.9628938917064734`*^9, 
   3.9628938984966125`*^9}, {3.962894791472889*^9, 3.962894840070718*^9}, {
   3.9628948749400396`*^9, 3.9628948885724745`*^9}, {3.962942043943723*^9, 
   3.9629420454283867`*^9}, 3.962942100797423*^9, {3.962942948662923*^9, 
   3.9629429583635645`*^9}, {3.9629429917011538`*^9, 3.962943021267565*^9}, {
   3.9629432539798436`*^9, 3.9629432539798436`*^9}, {3.962945955334607*^9, 
   3.962945974185751*^9}, {3.9629462326172*^9, 3.962946262902196*^9}, {
   3.962946457780168*^9, 3.962946481647089*^9}, {3.9629472264570055`*^9, 
   3.962947227024354*^9}, 3.9629756715062466`*^9, 3.963021216043664*^9, {
   3.96302188008191*^9, 3.963021881048892*^9}, 3.963022231434904*^9, {
   3.963023951416649*^9, 3.9630239560150995`*^9}, 3.9630250427280493`*^9, 
   3.9630250931817365`*^9, 3.9630251974531574`*^9, {3.9630254434008784`*^9, 
   3.9630254499184823`*^9}, {3.9630280238647566`*^9, 3.9630280630334806`*^9}, 
   3.96303408827763*^9, {3.963034770227908*^9, 3.963034794836006*^9}, {
   3.9631185152362356`*^9, 3.963118559097946*^9}, {3.9631189275029297`*^9, 
   3.96311892824749*^9}, {3.9631191005744867`*^9, 3.9631191012759347`*^9}, 
   3.9631193036760006`*^9, {3.9631199133129606`*^9, 3.963119927472849*^9}, {
   3.9631212988217325`*^9, 3.9631212995571465`*^9}, 3.9631233005357027`*^9, {
   3.963124292827777*^9, 3.963124295937396*^9}, {3.9631243273526726`*^9, 
   3.9631243414127955`*^9}, 3.963124818242712*^9, {3.963125181255661*^9, 
   3.963125186123685*^9}, {3.963125262949148*^9, 3.963125283743681*^9}, {
   3.96312535416223*^9, 3.9631253941226063`*^9}, {3.9631258107834363`*^9, 
   3.9631258336126285`*^9}, 3.9631258691279883`*^9, {3.9631262021309986`*^9, 
   3.9631262028136463`*^9}, 3.963126377039057*^9, 3.9631264536128426`*^9, {
   3.963126599572325*^9, 3.9631266356900945`*^9}, {3.9631329323526707`*^9, 
   3.963132934348055*^9}, 3.9631341013361845`*^9, 3.9631348221838202`*^9, {
   3.9631372843805866`*^9, 3.9631372935318437`*^9}, {3.9631391220854635`*^9, 
   3.963139132943958*^9}, {3.9631408599017677`*^9, 3.963140860521123*^9}, 
   3.9631428580968833`*^9, 3.9631470240463333`*^9, {3.9631471972845497`*^9, 
   3.963147206469802*^9}, {3.9631473799114065`*^9, 3.9631474196970015`*^9}, {
   3.9631476380944357`*^9, 3.9631476549280653`*^9}, {3.9631496135381637`*^9, 
   3.9631496423901196`*^9}, {3.9631506157462015`*^9, 
   3.9631506173797836`*^9}, {3.963152791534934*^9, 3.9631528049536705`*^9}, {
   3.963153213079587*^9, 3.9631532151094294`*^9}, 3.963154200448008*^9, 
   3.9631542621012774`*^9, {3.96315632734126*^9, 3.963156327958044*^9}, {
   3.9631572222871246`*^9, 3.9631572396377854`*^9}, 3.963157502369219*^9, {
   3.9631575329721527`*^9, 3.96315753877153*^9}, 3.963158373475125*^9, 
   3.963158741123674*^9, 3.963159008772193*^9, {3.963159133412665*^9, 
   3.9631591343462043`*^9}, 3.96315919714952*^9, {3.963159439346257*^9, 
   3.9631594441954765`*^9}, {3.9631594850825047`*^9, 
   3.9631594998672028`*^9}, {3.9631595689711*^9, 3.9631595726045294`*^9}, {
   3.9631597929037046`*^9, 3.963159793311163*^9}, {3.963159920792288*^9, 
   3.96315994629218*^9}, {3.9631910526435356`*^9, 3.963191057611758*^9}, {
   3.9631913201049623`*^9, 3.9631913381566277`*^9}, {3.963191990075638*^9, 
   3.9631920193775206`*^9}, 3.963192248556553*^9, {3.9631922821424923`*^9, 
   3.9631922826758413`*^9}, {3.963192319094876*^9, 3.963192370280943*^9}, 
   3.9631925216729083`*^9, {3.9631926925494413`*^9, 3.9631926930516415`*^9}, {
   3.963192957343544*^9, 3.96319299953347*^9}, {3.9631945419304056`*^9, 
   3.96319454251571*^9}, {3.963195395303524*^9, 3.963195410537408*^9}, 
   3.9631964328962154`*^9, {3.963201013308385*^9, 3.9632010216416397`*^9}, 
   3.9632016546101847`*^9, {3.9632028551958914`*^9, 3.963202857579071*^9}, {
   3.9632029191665955`*^9, 3.9632029300153923`*^9}, 3.96320429061327*^9, {
   3.963204986884127*^9, 3.963204987833815*^9}, {3.963207509361517*^9, 
   3.9632075127710223`*^9}, {3.963207543044176*^9, 3.9632075909293113`*^9}, {
   3.963209377129411*^9, 3.9632093806712217`*^9}, {3.96320942217752*^9, 
   3.9632094438438425`*^9}, 3.963209873817487*^9, 3.96321025935752*^9, {
   3.9632113996271677`*^9, 3.963211405085676*^9}, {3.963211511892869*^9, 
   3.9632115127243166`*^9}, {3.963245613885053*^9, 3.9632456429729605`*^9}, {
   3.963245684540007*^9, 3.9632456877733936`*^9}, {3.9632457551434965`*^9, 
   3.9632457660136495`*^9}, {3.9632526692624636`*^9, 3.963252684030573*^9}, {
   3.963252917496564*^9, 3.9632529196292887`*^9}, {3.9639767816155033`*^9, 
   3.963976782312557*^9}, {3.96397685865862*^9, 3.9639768620420356`*^9}, {
   3.9639769183623066`*^9, 3.9639769530512547`*^9}, {3.963983907322878*^9, 
   3.9639839087743206`*^9}, 3.9640650908428288`*^9, {3.9640707396824036`*^9, 
   3.964070776635747*^9}, {3.9640749698358655`*^9, 3.964074970625373*^9}, {
   3.96407505825533*^9, 3.9640750614869432`*^9}, 3.964081506709243*^9, {
   3.964081799457876*^9, 3.964081800752855*^9}, {3.964081947501276*^9, 
   3.9640819487335596`*^9}, {3.964081992068754*^9, 3.9640820549748397`*^9}, {
   3.964082087424867*^9, 3.964082108227163*^9}, 3.9640822766856017`*^9, {
   3.9640823154265327`*^9, 3.964082330321411*^9}, {3.964084024534919*^9, 
   3.9640840375865984`*^9}, {3.9640840756874404`*^9, 
   3.9640840843889427`*^9}, {3.96408561307658*^9, 3.9640856159642677`*^9}, {
   3.9640860090830097`*^9, 3.9640860180340233`*^9}, {3.9640982889952974`*^9, 
   3.9640982900488815`*^9}, {3.964098375881729*^9, 3.9640983763092594`*^9}, {
   3.9640998371704626`*^9, 3.964099842503361*^9}, 3.9641590241385603`*^9, {
   3.9641590678344164`*^9, 3.9641590915804825`*^9}, 3.9641591456203685`*^9, 
   3.9641591837991047`*^9, {3.9641594434816484`*^9, 3.964159473308338*^9}, {
   3.9641595783349133`*^9, 3.9641595922663717`*^9}, {3.9641596647114697`*^9, 
   3.964159678128563*^9}, {3.9641597343974075`*^9, 3.9641597452050505`*^9}, 
   3.964159781321475*^9, {3.964159865087544*^9, 3.964159906107563*^9}, {
   3.964159947538104*^9, 3.9641599677011485`*^9}, {3.964160251226309*^9, 
   3.964160262765776*^9}, {3.9641624342956095`*^9, 3.9641624714435935`*^9}, {
   3.964162510121546*^9, 3.9641625196354303`*^9}, {3.964162591522951*^9, 
   3.9641625922198353`*^9}, {3.9642704748889503`*^9, 
   3.9642705018299956`*^9}, {3.9642705319228625`*^9, 
   3.9642707361289377`*^9}, {3.9642707669499464`*^9, 
   3.9642708196622972`*^9}, {3.9642708797017155`*^9, 3.964270898688506*^9}, {
   3.964270932611574*^9, 3.9642710012104745`*^9}, {3.9642711613203683`*^9, 
   3.964271198505082*^9}, {3.9643077253178115`*^9, 3.964307748859022*^9}, {
   3.9643078923298545`*^9, 3.964307951726128*^9}, {3.9643081250486546`*^9, 
   3.9643081346456857`*^9}, {3.964308396450678*^9, 3.964308404789897*^9}, {
   3.964308456312801*^9, 3.9643084569916353`*^9}, {3.9643086848696337`*^9, 
   3.9643087341969457`*^9}, {3.9643088294087505`*^9, 3.9643088713631926`*^9}, 
   3.964309389032727*^9, {3.9645013904312563`*^9, 3.9645013906070504`*^9}, 
   3.964509288469149*^9, {3.964662324522463*^9, 3.964662345805157*^9}, {
   3.9646800495252857`*^9, 3.964680050216132*^9}, {3.964695126788616*^9, 
   3.9646951282338705`*^9}, {3.9646957202120566`*^9, 3.964695732092479*^9}, {
   3.9646957703478203`*^9, 3.964695776456315*^9}, 3.964705480277034*^9, {
   3.9647069481521316`*^9, 3.9647069575788784`*^9}, {3.9647070481243553`*^9, 
   3.96470705632207*^9}, 3.965449949910245*^9, 3.965449991784193*^9, {
   3.9654504603107653`*^9, 3.9654504650806932`*^9}, {3.965450536042237*^9, 
   3.9654505365079*^9}, {3.965450569243484*^9, 3.965450604704205*^9}, 
   3.96545090717113*^9, {3.965452945692235*^9, 3.9654529594931245`*^9}, 
   3.9654530068626957`*^9, {3.965453063772749*^9, 3.9654530879676228`*^9}, {
   3.96545607799697*^9, 3.965456088574584*^9}, {3.9654561674645214`*^9, 
   3.965456168125746*^9}, {3.965456518534769*^9, 3.965456520527862*^9}, 
   3.965456621045799*^9, 3.9654697306705866`*^9, {3.965469829867806*^9, 
   3.9654698836237307`*^9}, {3.9654707746055*^9, 3.965470777489106*^9}, {
   3.9654715333315163`*^9, 3.9654716397995996`*^9}, {3.9654723524143114`*^9, 
   3.965472358174728*^9}, {3.9654725620274463`*^9, 3.9654725677449408`*^9}, {
   3.965472714075496*^9, 3.965472714941763*^9}, {3.9654728480597982`*^9, 
   3.9654728716248074`*^9}, {3.9654729028360677`*^9, 
   3.9654729063215466`*^9}, {3.9654749601921535`*^9, 3.965474960958957*^9}, {
   3.965481576337268*^9, 3.965481632613905*^9}, {3.9654816640027094`*^9, 
   3.965481676612955*^9}, 3.965481730964573*^9, {3.9654824879435186`*^9, 
   3.965482492025914*^9}, 3.9654880053232374`*^9, {3.965488038724822*^9, 
   3.9654880388908124`*^9}, 3.965488118029108*^9, {3.965611626993947*^9, 
   3.9656116463884835`*^9}, 3.9656117079552617`*^9, {3.9656125712348*^9, 
   3.96561259443229*^9}, {3.9656130783790884`*^9, 3.965613082313505*^9}, {
   3.9656871315539784`*^9, 3.9656871409369955`*^9}, {3.965688269586364*^9, 
   3.9656882702362056`*^9}, {3.96568939230066*^9, 3.9656894305860014`*^9}, {
   3.965689466655596*^9, 3.96568946918889*^9}, {3.9656897748353453`*^9, 
   3.965689790696245*^9}, {3.9656898312005367`*^9, 3.9656898318344965`*^9}, {
   3.96569372526594*^9, 3.965693752631014*^9}, {3.9656985661152325`*^9, 
   3.96569856686486*^9}, {3.9656986663543534`*^9, 3.9656986724890647`*^9}, {
   3.9656987582442236`*^9, 3.9656987708769197`*^9}, 3.965698926752309*^9, {
   3.965700654294944*^9, 3.965700679524372*^9}, 3.9657016270257416`*^9, {
   3.9657017645335517`*^9, 3.9657017797509794`*^9}, 3.9657018947240067`*^9, {
   3.965809149826235*^9, 3.9658091662189474`*^9}, {3.965809203797599*^9, 
   3.9658092337489004`*^9}, {3.9658094109521575`*^9, 3.965809455198993*^9}, 
   3.9658097681637087`*^9, {3.9659431055660734`*^9, 3.9659431546041756`*^9}, {
   3.9659436267940655`*^9, 3.965943634827593*^9}, {3.96613121659566*^9, 
   3.9661313355368595`*^9}, {3.9661314400758195`*^9, 3.966131590584298*^9}, 
   3.9670823348464503`*^9, {3.9670828262078433`*^9, 3.967082826790867*^9}, {
   3.967082874326375*^9, 3.9670829252297273`*^9}, {3.9670831926359177`*^9, 
   3.967083225937711*^9}, {3.9670832814003744`*^9, 3.967083305901334*^9}, {
   3.9670834926792955`*^9, 3.967083500895709*^9}, {3.9670914370432653`*^9, 
   3.9670914769455767`*^9}, {3.9675175489328365`*^9, 3.967517549648712*^9}, {
   3.967546034393625*^9, 3.9675460359768767`*^9}, {3.9675460711663203`*^9, 
   3.9675460849130597`*^9}, {3.9675461348990784`*^9, 3.967546153150484*^9}, {
   3.967599082469078*^9, 3.967599083002796*^9}, {3.9675993035483365`*^9, 
   3.9675993589846945`*^9}, {3.9676003819931545`*^9, 
   3.9676003949104104`*^9}, {3.967600503283679*^9, 3.967600503784994*^9}, {
   3.9676117954704084`*^9, 3.9676117959442406`*^9}, {3.9676922329875116`*^9, 
   3.9676922388212557`*^9}, {3.9676923670460405`*^9, 3.9676924262493534`*^9}, 
   3.967692512103286*^9, {3.967718162580919*^9, 3.967718163081414*^9}, 
   3.9677191356021357`*^9, {3.967719234008833*^9, 3.9677192740612197`*^9}, {
   3.9677219854099817`*^9, 3.967721993465953*^9}, 3.9677220883879786`*^9, 
   3.9677221996283793`*^9, {3.9677225575475707`*^9, 3.967722560917474*^9}, {
   3.9677227117743073`*^9, 3.9677227479425154`*^9}, {3.967722788299403*^9, 
   3.9677227889440565`*^9}, {3.967723349160455*^9, 3.967723381562479*^9}, {
   3.9677234406821346`*^9, 3.9677234582324886`*^9}, {3.9677235712886457`*^9, 
   3.9677235962903123`*^9}, {3.967723630859296*^9, 3.9677236371097136`*^9}, {
   3.967725760080874*^9, 3.967725765847455*^9}, {3.967726263459236*^9, 
   3.967726272893594*^9}, {3.967727218380493*^9, 3.9677272189636707`*^9}, {
   3.967776700095064*^9, 3.9677767783340883`*^9}, {3.967776835003586*^9, 
   3.9677768443380246`*^9}, {3.9677795984367895`*^9, 
   3.9677796165210147`*^9}, {3.9677796704728265`*^9, 3.967779685611964*^9}, {
   3.967779790531252*^9, 3.967779805099414*^9}, {3.967781047201597*^9, 
   3.9677810720041523`*^9}, {3.967781188459882*^9, 3.9677812257460675`*^9}, {
   3.967781968754798*^9, 3.9677819797715387`*^9}, {3.9678573759205823`*^9, 
   3.967857393682833*^9}, {3.9678591710787745`*^9, 3.9678592435406075`*^9}, {
   3.9679481593402243`*^9, 3.967948194310707*^9}, {3.9679482711807985`*^9, 
   3.967948311866982*^9}, {3.9679484163061275`*^9, 3.9679484481250763`*^9}, {
   3.967948487126528*^9, 3.9679484878924327`*^9}, 3.9679485210114527`*^9, {
   3.967948739774125*^9, 3.9679487495249615`*^9}, {3.967948877534971*^9, 
   3.9679488918490496`*^9}, 3.967949290254668*^9, 3.9679493477582664`*^9, {
   3.967949391139821*^9, 3.967949456898764*^9}, {3.9679496300281672`*^9, 
   3.967949711231583*^9}, {3.9679498925448637`*^9, 3.967949975304005*^9}, {
   3.967950033370882*^9, 3.9679500955317397`*^9}, {3.9679501599914446`*^9, 
   3.9679501860889463`*^9}, {3.967950229103647*^9, 3.9679503069140153`*^9}, {
   3.9679518739075985`*^9, 3.967951982496482*^9}, {3.9679520143391895`*^9, 
   3.967952030246213*^9}, {3.9679520801053195`*^9, 3.967952080667884*^9}, {
   3.9679522033729763`*^9, 3.9679522157720723`*^9}, {3.967952308603771*^9, 
   3.9679523223475437`*^9}, 3.9681178268504457`*^9, {3.9681178995555015`*^9, 
   3.9681179001750154`*^9}, {3.968125833842613*^9, 3.9681258896125507`*^9}, {
   3.96814225267541*^9, 3.968142253049199*^9}, {3.968147544456551*^9, 
   3.9681475851903543`*^9}, {3.968147639480085*^9, 3.968147650163777*^9}, {
   3.9681476921658463`*^9, 3.9681477045101404`*^9}, {3.968147748825308*^9, 
   3.9681477488349495`*^9}, {3.968147796941317*^9, 3.9681477969473267`*^9}, {
   3.9681481411238422`*^9, 3.968148141140586*^9}, {3.9681482172268147`*^9, 
   3.968148255552*^9}, {3.9681488762341766`*^9, 3.968148885817621*^9}, {
   3.968148959221032*^9, 3.96814896205482*^9}, {3.96814901085693*^9, 
   3.9681490108727093`*^9}, {3.9681490430312967`*^9, 
   3.9681490455600977`*^9}, {3.968149295810017*^9, 3.968149334610261*^9}, {
   3.968203061117049*^9, 3.9682030825609183`*^9}, {3.968203545185994*^9, 
   3.9682035541267333`*^9}, 3.9682044383469563`*^9, 3.9682048600598207`*^9, {
   3.968284159432726*^9, 3.968284191657939*^9}, {3.9682946838605433`*^9, 
   3.968294878605791*^9}, {3.968294919549362*^9, 3.968294937623464*^9}, {
   3.968313661546775*^9, 3.968313679397318*^9}, 3.9683137685516825`*^9, {
   3.968316840360952*^9, 3.9683168571618633`*^9}, {3.968322302440524*^9, 
   3.9683223193919797`*^9}, {3.9683240591891727`*^9, 3.9683240661125145`*^9}, 
   3.968551216284711*^9, {3.9685513056431704`*^9, 3.968551389677243*^9}, {
   3.9689176277745695`*^9, 3.968917636738474*^9}, {3.9694349952283597`*^9, 
   3.969434999829948*^9}, 3.969504503460374*^9, {3.9695045683515644`*^9, 
   3.9695045686174755`*^9}, {3.969506284849454*^9, 3.9695063748056135`*^9}, {
   3.9695064203533907`*^9, 3.9695064472919188`*^9}, {3.969506511179413*^9, 
   3.969506573751681*^9}, {3.969506906001582*^9, 3.9695069451019106`*^9}, {
   3.969507027142408*^9, 3.9695071060338497`*^9}, {3.969508353825076*^9, 
   3.9695083666761255`*^9}, {3.969508703871109*^9, 3.969508718451007*^9}, {
   3.9695391966096115`*^9, 3.969539216147646*^9}, {3.969539277631138*^9, 
   3.9695392783474464`*^9}, {3.9695396116997795`*^9, 3.969539668419936*^9}, {
   3.969772412985292*^9, 3.969772413657751*^9}, 3.969772695972939*^9, 
   3.9697727619612007`*^9, 3.9697731339234324`*^9, 3.9697758968447537`*^9, {
   3.969775963372448*^9, 3.9697759677423105`*^9}, 3.9698471605535517`*^9, {
   3.969847212881864*^9, 3.9698472177593117`*^9}, {3.969847282456361*^9, 
   3.969847355612578*^9}, {3.969847424332028*^9, 3.9698475297404656`*^9}, 
   3.9698482906367865`*^9, {3.969848763099208*^9, 3.9698488023564215`*^9}, {
   3.969848835990579*^9, 3.9698488762539215`*^9}, {3.9698489651831846`*^9, 
   3.969848965340386*^9}, {3.9698490606581955`*^9, 3.9698491393172646`*^9}, {
   3.969849296766221*^9, 3.9698493310091877`*^9}, {3.969851720318905*^9, 
   3.9698517471827784`*^9}, {3.9698526471092014`*^9, 3.969852658418741*^9}, 
   3.9698527808316154`*^9, {3.969853131862077*^9, 3.969853142107483*^9}, {
   3.9698556933994403`*^9, 3.9698556940281205`*^9}, 3.969855732313329*^9, {
   3.9698557708985233`*^9, 3.969855797983556*^9}, 3.969855842252305*^9, {
   3.9698624897063284`*^9, 3.9698624984881563`*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"3604622a-b672-418b-a705-97f5a454d22c"],

Cell[CellGroupData[{

Cell[BoxData["\<\"=== Test 1: Simple autocatalytic ===\"\>"], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862500220484*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"9a144e80-cf3c-4d06-a950-705b8d6c5f0d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Testing RN1: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"a\"\>", "\[Rule]", 
      RowBox[{"\<\"a\"\>", "+", "\<\"b\"\>"}]}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", 
      RowBox[{"\<\"a\"\>", "+", "\<\"b\"\>"}]}], ",", 
     RowBox[{"\<\"a\"\>", "\[Rule]", "0"}], ",", 
     RowBox[{"\<\"b\"\>", "\[Rule]", "0"}]}], "}"}]}],
  SequenceForm[
  "Testing RN1: ", {"a" -> "a" + "b", "b" -> "a" + "b", "a" -> 0, "b" -> 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862500253929*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"f3e290a5-9ad1-4610-809d-5dffbf977611"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Species from extSpe: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}]}],
  SequenceForm["Species from extSpe: ", {"a", "b"}],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625003156347`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"2cf63e2b-fb1b-4507-8059-b65883dcb27a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"\<\"a\"\>", "\[Rule]", 
    RowBox[{"\<\"a\"\>", "+", "\<\"b\"\>"}]}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"a\"\>", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "Rxn ", 1, ": ", "a" -> "a" + "b", " -> reactants=", {"a"}, ", T=", {
   "a", "b"}, ", internal=", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625003641014`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"514e02c0-c85f-41a3-8fbd-37f700f627bc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"\<\"b\"\>", "\[Rule]", 
    RowBox[{"\<\"a\"\>", "+", "\<\"b\"\>"}]}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"b\"\>", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "Rxn ", 2, ": ", "b" -> "a" + "b", " -> reactants=", {"b"}, ", T=", {
   "a", "b"}, ", internal=", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862500413588*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"c24d93cb-2296-4a26-b605-2d666cd2bb29"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"\<\"a\"\>", "\[Rule]", "0"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"a\"\>", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "Rxn ", 3, ": ", "a" -> 0, " -> reactants=", {"a"}, ", T=", {"a", "b"}, 
   ", internal=", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625004537745`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"20605a35-12a3-4588-a87e-871f119cfca6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "0"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"b\"\>", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "Rxn ", 4, ": ", "b" -> 0, " -> reactants=", {"b"}, ", T=", {"a", "b"}, 
   ", internal=", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862500503786*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"6200c585-4e18-48da-9b08-6bacba2b8596"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Cores found: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Cores found: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862500553774*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"431eca6c-b701-4476-9ebf-dba55b34aee7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"All results: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"T\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}]}], ",", 
      RowBox[{"\<\"isCore\"\>", "\[Rule]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Indeterminate", ">", 
           FractionBox["1", "1000000000000"]}], ",", 
          RowBox[{"Association", "[", 
           RowBox[{
            RowBox[{"\<\"isCore\"\>", "\[Rule]", "True"}], ",", 
            RowBox[{"\<\"t\"\>", "\[Rule]", "tsol$7615"}], ",", 
            RowBox[{"\<\"flux\"\>", "\[Rule]", 
             RowBox[{"AssociationThread", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "\[Rule]",
                "vsol$7615"}], "]"}]}], ",", 
            RowBox[{"\<\"gammaT\"\>", "\[Rule]", "gammaT$7615"}], ",", 
            RowBox[{"\<\"netProd\"\>", "\[Rule]", 
             RowBox[{"gammaT$7615", ".", "vsol$7615"}]}]}], "]"}], ",", 
          RowBox[{"Association", "[", 
           RowBox[{
            RowBox[{"\<\"isCore\"\>", "\[Rule]", "False"}], ",", 
            RowBox[{"\<\"reason\"\>", "\[Rule]", "\<\"max t <= 0\"\>"}], ",", 
            RowBox[{"\<\"t\"\>", "\[Rule]", "tsol$7615"}]}], "]"}]}], "]"}], 
        "[", "\<\"isCore\"\>", "]"}]}], ",", 
      RowBox[{"\<\"intReacIdx\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], ",", 
      RowBox[{"\<\"details\"\>", "\[Rule]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Indeterminate", ">", 
          FractionBox["1", "1000000000000"]}], ",", 
         RowBox[{"Association", "[", 
          RowBox[{
           RowBox[{"\<\"isCore\"\>", "\[Rule]", "True"}], ",", 
           RowBox[{"\<\"t\"\>", "\[Rule]", "tsol$7615"}], ",", 
           RowBox[{"\<\"flux\"\>", "\[Rule]", 
            RowBox[{"AssociationThread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "\[Rule]", 
              "vsol$7615"}], "]"}]}], ",", 
           RowBox[{"\<\"gammaT\"\>", "\[Rule]", "gammaT$7615"}], ",", 
           RowBox[{"\<\"netProd\"\>", "\[Rule]", 
            RowBox[{"gammaT$7615", ".", "vsol$7615"}]}]}], "]"}], ",", 
         RowBox[{"Association", "[", 
          RowBox[{
           RowBox[{"\<\"isCore\"\>", "\[Rule]", "False"}], ",", 
           RowBox[{"\<\"reason\"\>", "\[Rule]", "\<\"max t <= 0\"\>"}], ",", 
           RowBox[{"\<\"t\"\>", "\[Rule]", "tsol$7615"}]}], "]"}]}], 
        "]"}]}]}], "\[RightAssociation]"}], "}"}]}],
  SequenceForm[
  "All results: ", {<|
    "T" -> {"a", "b"}, "isCore" -> 
     If[Indeterminate > Rational[1, 1000000000000], <|
       "isCore" -> True, "t" -> EpidCRN`Private`tsol$7615, "flux" -> 
        AssociationThread[{1, 2, 3, 4} -> EpidCRN`Private`vsol$7615], 
        "gammaT" -> EpidCRN`Private`gammaT$7615, "netProd" -> 
        Dot[EpidCRN`Private`gammaT$7615, EpidCRN`Private`vsol$7615]|>, <|
       "isCore" -> False, "reason" -> "max t <= 0", "t" -> 
        EpidCRN`Private`tsol$7615|>]["isCore"], "intReacIdx" -> {1, 2, 3, 4}, 
     "details" -> 
     If[Indeterminate > Rational[1, 1000000000000], <|
       "isCore" -> True, "t" -> EpidCRN`Private`tsol$7615, "flux" -> 
        AssociationThread[{1, 2, 3, 4} -> EpidCRN`Private`vsol$7615], 
        "gammaT" -> EpidCRN`Private`gammaT$7615, "netProd" -> 
        Dot[EpidCRN`Private`gammaT$7615, EpidCRN`Private`vsol$7615]|>, <|
       "isCore" -> False, "reason" -> "max t <= 0", "t" -> 
        EpidCRN`Private`tsol$7615|>]|>}],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625006127095`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"3c03118b-bf14-4f4a-a9d2-24ec6ceb0799"],

Cell[BoxData["\<\"\\n=== Test 2: Three-strain chain ===\"\>"], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862500637686*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"12ca1a87-1261-4851-af95-42b3ae760770"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Minimal siphons: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "i1", "}"}], ",", 
     RowBox[{"{", "i2", "}"}], ",", 
     RowBox[{"{", "i3", "}"}]}], "}"}]}],
  SequenceForm[
  "Minimal siphons: ", {{EpidCRN`Private`i1}, {EpidCRN`Private`i2}, {
    EpidCRN`Private`i3}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625007037687`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"509a2f39-e884-4a66-8015-f9f50cabc489"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"0", "\[Rule]", "\<\"s\"\>"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i1\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "Rxn ", 1, ": ", 0 -> "s", " -> reactants=", {}, ", T=", {"i1"}, 
   ", internal=", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625007370596`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"07511854-4797-42fd-9f0f-6aaee1e66819"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"\<\"s\"\>", "\[Rule]", "0"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"s\"\>", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i1\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 2, ": ", "s" -> 0, " -> reactants=", {"s"}, ", T=", {"i1"}, 
   ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625007852144`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"4500f713-1ab9-4246-a8a7-8fe508227ebb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"\<\"i1\"\>", "+", "\<\"s\"\>"}], "\[Rule]", 
    RowBox[{"2", " ", "\<\"i1\"\>"}]}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"i1\"\>", ",", "\<\"s\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\", T=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i1\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 3, ": ", "i1" + "s" -> 2 "i1", " -> reactants=", {"i1", "s"}, 
   ", T=", {"i1"}, ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862500836838*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"e88647bc-6df1-4d70-8d7c-bf140d0ac162"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"\<\"i1\"\>", "\[Rule]", "0"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i1\"\>", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i1\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "Rxn ", 4, ": ", "i1" -> 0, " -> reactants=", {"i1"}, ", T=", {"i1"}, 
   ", internal=", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625008939953`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"a5d6bcc8-c9c1-4c78-a072-c4da8b73f4bd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"\<\"i1\"\>", "+", "\<\"i2\"\>"}], "\[Rule]", 
    RowBox[{"2", " ", "\<\"i2\"\>"}]}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"i1\"\>", ",", "\<\"i2\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\", T=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i1\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 5, ": ", "i1" + "i2" -> 2 "i2", " -> reactants=", {"i1", "i2"}, 
   ", T=", {"i1"}, ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862500957853*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"61df4506-eb26-489b-ba1a-fea74cb9629b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"\<\"i2\"\>", "\[Rule]", "0"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i2\"\>", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i1\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 6, ": ", "i2" -> 0, " -> reactants=", {"i2"}, ", T=", {"i1"}, 
   ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625010216475`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"2752a6cf-1014-4759-a570-9aefe711b235"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"\<\"i2\"\>", "+", "\<\"i3\"\>"}], "\[Rule]", 
    RowBox[{"2", " ", "\<\"i3\"\>"}]}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"i2\"\>", ",", "\<\"i3\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\", T=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i1\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 7, ": ", "i2" + "i3" -> 2 "i3", " -> reactants=", {"i2", "i3"}, 
   ", T=", {"i1"}, ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862501073208*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"b026803a-d7a4-4989-9e9e-299cd06805e6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "8", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"\<\"i3\"\>", "\[Rule]", "0"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i3\"\>", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i1\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 8, ": ", "i3" -> 0, " -> reactants=", {"i3"}, ", T=", {"i1"}, 
   ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862501146188*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"68449c43-d716-447e-997d-200e0ce6c27d"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "LinearProgramming", "argb", 
   "\"\\!\\(\\*RowBox[{\\\"LinearProgramming\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments; between \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) and \\!\\(\\*RowBox[{\\\"5\\\"}]\\) arguments \
are expected.\"", 2, 354, 5, 24863171801868452237, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9698625012038045`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"161a97be-5ad3-4f61-bffe-5a543f4eab4e"],

Cell[BoxData[
 TemplateBox[{
  "LinearProgramming", "argb", 
   "\"\\!\\(\\*RowBox[{\\\"LinearProgramming\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments; between \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) and \\!\\(\\*RowBox[{\\\"5\\\"}]\\) arguments \
are expected.\"", 2, 354, 6, 24863171801868452237, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9698625013547945`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"52756b6c-4fa6-40df-9c39-e399ef959b2b"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"0", "\[Rule]", "\<\"s\"\>"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i2\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "Rxn ", 1, ": ", 0 -> "s", " -> reactants=", {}, ", T=", {"i2"}, 
   ", internal=", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862501449411*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"1c7a2f2f-6b66-4fd4-8e28-3ba74225e60e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"\<\"s\"\>", "\[Rule]", "0"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"s\"\>", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i2\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 2, ": ", "s" -> 0, " -> reactants=", {"s"}, ", T=", {"i2"}, 
   ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862501508812*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"d9fcf075-8191-44ce-b933-99f9845a9d52"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"\<\"i1\"\>", "+", "\<\"s\"\>"}], "\[Rule]", 
    RowBox[{"2", " ", "\<\"i1\"\>"}]}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"i1\"\>", ",", "\<\"s\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\", T=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i2\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 3, ": ", "i1" + "s" -> 2 "i1", " -> reactants=", {"i1", "s"}, 
   ", T=", {"i2"}, ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625015808897`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"7718a700-6001-4d20-926a-2285cb044d5f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"\<\"i1\"\>", "\[Rule]", "0"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i1\"\>", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i2\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 4, ": ", "i1" -> 0, " -> reactants=", {"i1"}, ", T=", {"i2"}, 
   ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625016481295`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"2a50d183-3379-4b23-9ac0-274fecdbe4c3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"\<\"i1\"\>", "+", "\<\"i2\"\>"}], "\[Rule]", 
    RowBox[{"2", " ", "\<\"i2\"\>"}]}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"i1\"\>", ",", "\<\"i2\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\", T=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i2\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 5, ": ", "i1" + "i2" -> 2 "i2", " -> reactants=", {"i1", "i2"}, 
   ", T=", {"i2"}, ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625017122993`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"d6ddb976-c892-4ec9-9799-5b31381ee648"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"\<\"i2\"\>", "\[Rule]", "0"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i2\"\>", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i2\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "Rxn ", 6, ": ", "i2" -> 0, " -> reactants=", {"i2"}, ", T=", {"i2"}, 
   ", internal=", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862501777684*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"38dfab57-4d2e-4c50-842b-8e12c6da5466"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"\<\"i2\"\>", "+", "\<\"i3\"\>"}], "\[Rule]", 
    RowBox[{"2", " ", "\<\"i3\"\>"}]}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"i2\"\>", ",", "\<\"i3\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\", T=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i2\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 7, ": ", "i2" + "i3" -> 2 "i3", " -> reactants=", {"i2", "i3"}, 
   ", T=", {"i2"}, ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625018482666`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"755d7185-0fde-4b10-80ce-f3c85bfcdb66"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "8", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"\<\"i3\"\>", "\[Rule]", "0"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i3\"\>", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i2\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 8, ": ", "i3" -> 0, " -> reactants=", {"i3"}, ", T=", {"i2"}, 
   ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862501908868*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"8799c86f-af98-497d-9f4b-14aace7705e7"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "LinearProgramming", "argb", 
   "\"\\!\\(\\*RowBox[{\\\"LinearProgramming\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments; between \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) and \\!\\(\\*RowBox[{\\\"5\\\"}]\\) arguments \
are expected.\"", 2, 354, 7, 24863171801868452237, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9698625019804354`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"58645132-9b30-4b56-a239-d5fa92ec3804"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"LinearProgramming\\\", \
\\\"::\\\", \\\"argb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 354, 8, 24863171801868452237, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9698625021040134`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"0114e945-c749-45c8-9f12-ea0006349990"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"0", "\[Rule]", "\<\"s\"\>"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i3\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "Rxn ", 1, ": ", 0 -> "s", " -> reactants=", {}, ", T=", {"i3"}, 
   ", internal=", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625021906967`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"fb345505-ab7c-44de-88c2-357b12777670"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"\<\"s\"\>", "\[Rule]", "0"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"s\"\>", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i3\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 2, ": ", "s" -> 0, " -> reactants=", {"s"}, ", T=", {"i3"}, 
   ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625022438874`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"e400f626-59e1-40fa-8c32-43a5d9a8868d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"\<\"i1\"\>", "+", "\<\"s\"\>"}], "\[Rule]", 
    RowBox[{"2", " ", "\<\"i1\"\>"}]}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"i1\"\>", ",", "\<\"s\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\", T=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i3\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 3, ": ", "i1" + "s" -> 2 "i1", " -> reactants=", {"i1", "s"}, 
   ", T=", {"i3"}, ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862502354056*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"b22cba4b-50a8-4416-b48e-a32c816b1b56"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"\<\"i1\"\>", "\[Rule]", "0"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i1\"\>", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i3\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 4, ": ", "i1" -> 0, " -> reactants=", {"i1"}, ", T=", {"i3"}, 
   ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862502432972*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"5da5700b-2018-49aa-902a-5a213d256d12"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"\<\"i1\"\>", "+", "\<\"i2\"\>"}], "\[Rule]", 
    RowBox[{"2", " ", "\<\"i2\"\>"}]}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"i1\"\>", ",", "\<\"i2\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\", T=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i3\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 5, ": ", "i1" + "i2" -> 2 "i2", " -> reactants=", {"i1", "i2"}, 
   ", T=", {"i3"}, ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625025205297`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"562e7ad4-91ab-45d4-8adb-e011f67a3f3c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"\<\"i2\"\>", "\[Rule]", "0"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i2\"\>", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i3\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 6, ": ", "i2" -> 0, " -> reactants=", {"i2"}, ", T=", {"i3"}, 
   ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625026646333`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"17492327-a715-4e66-9615-b5691ed927e5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"\<\"i2\"\>", "+", "\<\"i3\"\>"}], "\[Rule]", 
    RowBox[{"2", " ", "\<\"i3\"\>"}]}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"i2\"\>", ",", "\<\"i3\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\", T=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i3\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "Rxn ", 7, ": ", "i2" + "i3" -> 2 "i3", " -> reactants=", {"i2", "i3"}, 
   ", T=", {"i3"}, ", internal=", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625027404523`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"6e90399d-bf5d-404e-bebd-3828a25e9423"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rxn \"\>", "\[InvisibleSpace]", "8", 
   "\[InvisibleSpace]", "\<\": \"\>", "\[InvisibleSpace]", 
   RowBox[{"\<\"i3\"\>", "\[Rule]", "0"}], 
   "\[InvisibleSpace]", "\<\" -> reactants=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i3\"\>", "}"}], "\[InvisibleSpace]", "\<\", T=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", "\<\"i3\"\>", "}"}], 
   "\[InvisibleSpace]", "\<\", internal=\"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "Rxn ", 8, ": ", "i3" -> 0, " -> reactants=", {"i3"}, ", T=", {"i3"}, 
   ", internal=", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625028174114`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"966a642e-6373-4cf8-b60a-a8075d45a873"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Cores found: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Cores found: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862502893381*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"473be840-4fdf-45af-b76b-6b122b040f11"],

Cell[BoxData["\<\"Load CRNT\"\>"], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625029622045`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"2b956dee-9869-45ed-9d9a-3ff539bee6dc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"reactions and transitions: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"0", "\[Rule]", "\<\"S\"\>"}], "La"},
       {
        RowBox[{"\<\"S\"\>", "\[Rule]", "0"}], 
        RowBox[{"mu0", " ", "s"}]},
       {
        RowBox[{
         RowBox[{"\<\"I1\"\>", "+", "\<\"S\"\>"}], "\[Rule]", 
         RowBox[{"2", " ", "\<\"I1\"\>"}]}], 
        RowBox[{"be1", " ", "i1", " ", "s"}]},
       {
        RowBox[{"\<\"I1\"\>", "\[Rule]", "0"}], 
        RowBox[{"i1", " ", "mu1"}]},
       {
        RowBox[{
         RowBox[{"\<\"I1\"\>", "+", "\<\"I2\"\>"}], "\[Rule]", 
         RowBox[{"2", " ", "\<\"I2\"\>"}]}], 
        RowBox[{"i1", " ", "i2", " ", "ro12"}]},
       {
        RowBox[{"\<\"I2\"\>", "\[Rule]", "0"}], 
        RowBox[{"i2", " ", "mu2"}]},
       {
        RowBox[{
         RowBox[{"\<\"I2\"\>", "+", "\<\"I3\"\>"}], "\[Rule]", 
         RowBox[{"2", " ", "\<\"I3\"\>"}]}], 
        RowBox[{"i2", " ", "i3", " ", "ro23"}]},
       {
        RowBox[{"\<\"I3\"\>", "\[Rule]", "0"}], 
        RowBox[{"i3", " ", "mu3"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["reactions and transitions: ", 
   MatrixForm[{{0 -> "S", $CellContext`La}, {
     "S" -> 0, $CellContext`mu0 $CellContext`s}, {
     "I1" + "S" -> 2 "I1", $CellContext`be1 $CellContext`i1 $CellContext`s}, {
     "I1" -> 0, $CellContext`i1 $CellContext`mu1}, {
     "I1" + "I2" -> 
      2 "I2", $CellContext`i1 $CellContext`i2 $CellContext`ro12}, {
     "I2" -> 0, $CellContext`i2 $CellContext`mu2}, {
     "I2" + "I3" -> 
      2 "I3", $CellContext`i2 $CellContext`i3 $CellContext`ro23}, {
     "I3" -> 0, $CellContext`i3 $CellContext`mu3}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625030540543`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"68e2e3bb-6c57-4d4a-997e-dce79e100e0a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Minimal siphons: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       SubscriptBox["\"T\"", "1"], "\"=\"", 
       RowBox[{"{", "i1", "}"}]},
      "RowDefault"], ",", 
     TemplateBox[{
       SubscriptBox["\"T\"", "2"], "\"=\"", 
       RowBox[{"{", "i2", "}"}]},
      "RowDefault"], ",", 
     TemplateBox[{
       SubscriptBox["\"T\"", "3"], "\"=\"", 
       RowBox[{"{", "i3", "}"}]},
      "RowDefault"]}], "}"}]}],
  SequenceForm["Minimal siphons: ", {
    Row[{
      Subscript["T", 1], "=", {$CellContext`i1}}], 
    Row[{
      Subscript["T", 2], "=", {$CellContext`i2}}], 
    Row[{
      Subscript["T", 3], "=", {$CellContext`i3}}]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625031267457`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"84ef3a2f-5149-4053-b9d9-b7e8744c27ed"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"IGMS edges: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "2"}], ",", 
     RowBox[{"2", "\[Rule]", "3"}]}], "}"}]}],
  SequenceForm["IGMS edges: ", {1 -> 2, 2 -> 3}],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862503208777*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"29495ee6-d0a6-4113-9b32-7f49eaa8fce7"],

Cell[BoxData["\<\"IGMS is acyclic (no cycles found)\"\>"], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625032727757`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"b34407d0-991b-42f6-b882-9b101c8010eb"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3}, {{{1, 2}, {2, 3}}, Null}, {EdgeStyle -> {
         Arrowheads[0.03]}, GraphLayout -> "SpringElectricalEmbedding", 
       ImageSize -> Medium, VertexLabels -> {2 -> Placed[
           Row[{
             Subscript["T", 2], "=", 
             Row[{$CellContext`i2}, ","]}], Center], 1 -> Placed[
           Row[{
             Subscript["T", 1], "=", 
             Row[{$CellContext`i1}, ","]}], Center], 3 -> Placed[
           Row[{
             Subscript["T", 3], "=", 
             Row[{$CellContext`i3}, ","]}], Center]}, VertexLabelStyle -> {
         Directive[FontSize -> 10]}, VertexSize -> {0.3}, VertexStyle -> {
         RGBColor[0.87, 0.94, 1]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.03], 
        ArrowBox[{{{0., 0.}, {1.0003055128773508`, 
         4.665773677819736*^-18}}, {{1.0003055128773508`, 
         4.665773677819736*^-18}, {1.9999999066333527`, 
         4.956174529136317*^-18}}}, 0.1499541590634003]}, 
       {RGBColor[0.87, 0.94, 1], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.1499541590634003], InsetBox[
          StyleBox[
           TemplateBox[{
             SubscriptBox["\"T\"", "1"], "\"=\"", 
             TemplateBox[{",", "\",\"", "i1"}, "RowWithSeparators"]},
            "RowDefault"],
           StripOnInput->False,
           FontSize->10], {0., 0.},
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0003055128773508`, 4.665773677819736*^-18}, 
          0.1499541590634003], InsetBox[
          StyleBox[
           TemplateBox[{
             SubscriptBox["\"T\"", "2"], "\"=\"", 
             TemplateBox[{",", "\",\"", "i2"}, "RowWithSeparators"]},
            "RowDefault"],
           StripOnInput->False,
           FontSize->10], {1.0003055128773508, 4.665773677819736*^-18},
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.9999999066333527`, 4.956174529136317*^-18}, 
          0.1499541590634003], InsetBox[
          StyleBox[
           TemplateBox[{
             SubscriptBox["\"T\"", "3"], "\"=\"", 
             TemplateBox[{",", "\",\"", "i3"}, "RowWithSeparators"]},
            "RowDefault"],
           StripOnInput->False,
           FontSize->10], {1.9999999066333527, 4.956174529136317*^-18},
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Medium]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.96986250341019*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"e56b3280-7ea0-45da-9335-fd9803b83725"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"siphons are\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "i1", "}"}], ",", 
     RowBox[{"{", "i2", "}"}], ",", 
     RowBox[{"{", "i3", "}"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\" edges are\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "2"}], ",", 
     RowBox[{"2", "\[Rule]", "3"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"  DFE is\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "\[Rule]", 
      FractionBox["La", "mu0"]}], ",", 
     RowBox[{"i1", "\[Rule]", "0"}], ",", 
     RowBox[{"i2", "\[Rule]", "0"}], ",", 
     RowBox[{"i3", "\[Rule]", "0"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\" repr. functions  \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    FractionBox[
     RowBox[{"be1", " ", "s"}], "mu1"], "}"}]}],
  SequenceForm[
  "siphons are", {{$CellContext`i1}, {$CellContext`i2}, {$CellContext`i3}}, 
   " edges are", {1 -> 2, 2 -> 3}, 
   "  DFE is", {$CellContext`s -> $CellContext`La/$CellContext`mu0, \
$CellContext`i1 -> 0, $CellContext`i2 -> 0, $CellContext`i3 -> 0}, 
   " repr. functions  ", {$CellContext`be1 $CellContext`mu1^(-1) \
$CellContext`s}],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.969862503496934*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"85324b88-37ac-4ee4-99ce-99c6853c1e00"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"K=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"be1", " ", "s"}], "mu1"], "0", "0"},
       {"0", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"F=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"be1", " ", "s"}], "0", "0"},
       {"0", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"V=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"mu1", "0", "0"},
       {"0", "mu2", "0"},
       {"0", "0", "mu3"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["K=", 
   MatrixForm[{{$CellContext`be1 $CellContext`mu1^(-1) $CellContext`s, 0, 
      0}, {0, 0, 0}, {0, 0, 0}}], "F=", 
   MatrixForm[{{$CellContext`be1 $CellContext`s, 0, 0}, {0, 0, 0}, {0, 0, 
     0}}], "V=", 
   MatrixForm[{{$CellContext`mu1, 0, 0}, {0, $CellContext`mu2, 0}, {
     0, 0, $CellContext`mu3}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.969852783698431*^9, 3.969853105696293*^9, 
  3.9698531703275127`*^9, 3.9698556956772118`*^9, 3.9698557344292665`*^9, 
  3.969855812149971*^9, 3.969855845701975*^9, 3.9698562604036493`*^9, 
  3.9698564834745965`*^9, 3.9698625035811577`*^9},
 CellLabel->
  "During evaluation of \
In[350]:=",ExpressionUUID->"eed1be90-5eeb-46c5-9f2a-97566f93fa2c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"findCores", "[", 
                    RowBox[{"RN", ",", "opts"}], 
                    "]"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}], ":", 
      RowBox[{
       RowBox[{"find", " ", "autocatalytic", " ", "cores", " ", 
        RowBox[{"(", 
         RowBox[{"minimal", " ", "autocatalytic", " ", "subnetworks"}], 
         ")"}]}], "-", 
       RowBox[{"Uses", " ", 
        RowBox[{"extMat", "[", "RN", "]"}], " ", "to", " ", "obtain", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<species\>\"", ",", "...", ",", "\"\<gamma\>\""}], "}"}],
         " ", "as", " ", "in", " ", "your", " ", "EpidCRN", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"species", "=", 
           RowBox[{"RND", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"gamma", "=", 
           RowBox[{"RND", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}]}], "-", 
       RowBox[{"Uses", " ", "parsing", " ", "of", " ", "RN", " ", 
        RowBox[{"LHS", "/", "RHS"}], " ", "to", " ", "identify", " ", 
        RowBox[{"reactant", "/", "product"}], " ", "sets", " ", 
        RowBox[{"(", 
         RowBox[{
         "robust", " ", "to", " ", "Symbols", " ", "or", " ", "Strings"}], 
         ")"}]}], "-", "CandidateSets"}]}], "->", 
     RowBox[{
      RowBox[{
       RowBox[{"list", " ", "of", " ", "candidate", " ", "species"}], "-", 
       RowBox[{"sets", " ", "to", " ", "test", " ", 
        RowBox[{"(", 
         RowBox[{"recommended", ":", 
          RowBox[{"minimal", " ", "siphons"}]}], ")"}]}], "-", 
       RowBox[{"If", " ", "CandidateSets"}]}], "->", "Automatic"}]}], ",", 
    RowBox[{
     RowBox[{
     "enumerates", " ", "all", " ", "nonempty", " ", "subsets", " ", "up", 
      " ", "to", " ", "MaxSize", " ", 
      RowBox[{"(", 
       RowBox[{"default", " ", "6"}], ")"}]}], "-", 
     RowBox[{
     "Returns", " ", "Association", " ", "with", " ", "\"\<Cores\>\"", " ", 
      "list", " ", "and", " ", "full", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"diagnostics", "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
               "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}],
        "--"}]}], "-"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{
     "parseComplexTerms", ",", "getReactProdSets", ",", 
      "findInternalReactionsByParsing", ",", "isAutocatalyticBlockLP", ",", 
      "findCores"}], "]"}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"parse", " ", "a", " ", "complex", " ", "expression", " ", 
     RowBox[{"(", 
      RowBox[{"0", " ", "or", " ", "sum", " ", "of", " ", "terms"}], ")"}], 
     " ", "into", " ", "list", " ", "of", " ", "species", " ", "names", " ", 
     RowBox[{"(", "strings", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"parseComplexTerms", "[", "0", "]"}], ":=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"parseComplexTerms", "[", "c_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"terms", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", "c", "]"}], "===", "Plus"}], ",", 
            RowBox[{"List", "@@", "c"}], ",", 
            RowBox[{"{", "c", "}"}]}], "]"}]}], ",", "atoms"}], "}"}], ",", 
       RowBox[{
        RowBox[{"atoms", "=", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Cases", "[", 
           RowBox[{"terms", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"m_", "?", "NumericQ"}], ")"}], "*", "s_Symbol"}], ":>", 
             RowBox[{
              RowBox[{"s", "|", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"m_", "?", "NumericQ"}], ")"}], "*", "s_String"}]}], 
              ":>", 
              RowBox[{
               RowBox[{"s", "|", "s_Symbol"}], ":>", 
               RowBox[{
                RowBox[{"s", "|", "s_String"}], ":>", "s"}]}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "Infinity"}], "}"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ToString", "/@", "atoms"}]}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Given", " ", "RN"}], ",", 
     RowBox[{
     "return", " ", "lists", " ", "reactantSets", " ", "and", " ", 
      "productSets", " ", 
      RowBox[{"(", 
       RowBox[{
       "each", " ", "element", " ", "is", " ", "list", " ", "of", " ", 
        "species", " ", "names", " ", "as", " ", "strings"}], ")"}]}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getReactProdSets", "[", "RN_List", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n", "=", 
          RowBox[{"Length", "[", "RN", "]"}]}], ",", "lhs", ",", "rhs"}], 
        "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"lhs", "=", 
           RowBox[{"RN", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "1"}], "]"}], "]"}]}], ";", 
          RowBox[{"rhs", "=", 
           RowBox[{"RN", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"parseComplexTerms", "[", "lhs", "]"}], ",", 
            RowBox[{"parseComplexTerms", "[", "rhs", "]"}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Find", " ", "internal", " ", "reactions", " ", "for", " ", "a", " ", 
     "given", " ", "candidate", " ", "T", " ", 
     RowBox[{"(", 
      RowBox[{"strings", " ", "or", " ", "symbols", " ", "ok"}], ")"}], " ", 
     "by", " ", "parsing", " ", "reactants"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"findInternalReactionsByParsing", "[", 
      RowBox[{"RN_List", ",", "T_List"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Tstr", "=", 
          RowBox[{"ToString", "/@", "T"}]}], ",", "rp", ",", "reactantsList", 
         ",", "out"}], "}"}], ",", 
       RowBox[{
        RowBox[{"rp", "=", 
         RowBox[{"getReactProdSets", "[", "RN", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"reactantsList", "=", 
         RowBox[{"rp", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "list", " ", "of", " ", "reactant", " ", "species", " ", "lists", 
          " ", 
          RowBox[{"(", "strings", ")"}]}], "*)"}], 
        RowBox[{"out", "=", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Position", "[", 
           RowBox[{"reactantsList", ",", 
            RowBox[{
             RowBox[{"r_", "/;", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"r", "=!=", 
                 RowBox[{"{", "}"}]}], "&&", 
                RowBox[{"SubsetQ", "[", 
                 RowBox[{"r", ",", "Tstr"}], "]"}]}], ")"}]}], "&"}]}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", "out"}]}], "]"}]}], ";"}], 
   "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"LP", "-", 
      RowBox[{"based", " ", 
       RowBox[{"test", ":", 
        RowBox[{"given", " ", "gamma", " ", 
         RowBox[{"(", 
          RowBox[{"full", " ", "stoichiometric", " ", "matrix"}], 
          ")"}]}]}]}]}], ",", 
     RowBox[{"speciesIndices", " ", "in", " ", "T"}], ",", 
     RowBox[{"internal", " ", "reaction", " ", "indices"}], ",", 
     RowBox[{
      RowBox[{"determine", " ", "if", " ", "exists", " ", "v"}], ">=", 
      RowBox[{"0", " ", "with", " ", "gamma_T", " ", "v"}], ">=", 
      RowBox[{
       RowBox[{
       "t", "*", "1", "_m", " ", "and", " ", "return", " ", "max", " ", "t", 
        " ", "and", " ", "example", " ", 
        RowBox[{"v", ".", "We"}], " ", "implement", " ", "as", " ", 
        "LinearProgramming", " ", "minimizing"}], "-", 
       RowBox[{"t", "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"isAutocatalyticBlockLP", "[", 
      RowBox[{"gamma_", ",", "speciesIdx_List", ",", "intReacIdx_List", ",", 
       RowBox[{"vmin_", ":", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "gammaT", ",", "m", ",", "n", ",", "A", ",", "b", ",", "c", ",", 
         "sol", ",", "tsol", ",", "vsol"}], "}"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"intReacIdx", "===", 
            RowBox[{"{", "}"}]}], "||", 
           RowBox[{"speciesIdx", "===", 
            RowBox[{"{", "}"}]}]}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<isCore\>\"", "->", "False"}], ",", 
             RowBox[{"\"\<reason\>\"", "->", "\"\<empty block\>\""}]}], 
            "|>"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"gammaT", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "speciesIdx", "]"}], "==", "1"}], ",", 
           RowBox[{"{", 
            RowBox[{"gamma", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"speciesIdx", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "intReacIdx"}], "]"}], 
             "]"}], "}"}], ",", 
           RowBox[{"gamma", "[", 
            RowBox[{"[", 
             RowBox[{"speciesIdx", ",", "intReacIdx"}], "]"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"m", "=", 
         RowBox[{"Length", "[", "speciesIdx", "]"}]}], ";", 
        RowBox[{"n", "=", 
         RowBox[{"Length", "[", "intReacIdx", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Form", " ", 
          RowBox[{"constraints", ":", 
           RowBox[{
            RowBox[{
             RowBox[{"gammaT", ".", "v"}], "-", "t"}], ">=", 
            RowBox[{"0", " ", 
             RowBox[{"(", 
              RowBox[{"m", " ", "inequalities"}], ")"}], " ", "v_j"}], ">=", 
            RowBox[{"vmin", " ", 
             RowBox[{"(", 
              RowBox[{"n", " ", "inequalities"}], ")"}], " ", "t"}], ">=", 
            "0"}]}]}], "*)"}], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"A", ".", "x"}], ">=", 
           RowBox[{"b", " ", "with", " ", "x"}]}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"v_", "1"}], ".."}], "v_n"}], ",", "t"}], "}"}], " ", 
            "length", " ", "n"}], "+", "1"}]}], "*)"}], 
        RowBox[{"A", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"-", "1"}], "}"}]}], "]"}], "&"}], ",", "gammaT"}], 
            "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"m", " ", "rows"}], "*)"}], 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"i", "==", "j"}], ",", "1", ",", "0"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", "0", "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "n"}], "}"}]}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"v_j", ">=", "vmin"}], "*)"}], 
           RowBox[{"{", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"0", ",", 
                RowBox[{"{", "n", "}"}]}], "]"}], ",", 
              RowBox[{"{", "1", "}"}]}], "]"}], "}"}]}], "  ", 
          RowBox[{"(*", 
           RowBox[{"t", ">=", "0"}], "*)"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"b", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", "m"}], "]"}], ",", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"vmin", ",", "n"}], "]"}], ",", 
           RowBox[{"{", "0", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", "n", "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"minimize", "-", "t"}], "->", 
          RowBox[{"maximize", " ", "t"}]}], "*)"}], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Solve", " ", "LP"}], ";", 
          RowBox[{
          "enforce", " ", "nonnegativity", " ", "bounds", " ", "for", " ", 
           "safety"}]}], "*)"}], 
        RowBox[{"sol", "=", 
         RowBox[{"Quiet", "@", 
          RowBox[{"LinearProgramming", "[", 
           RowBox[{
            RowBox[{"Rationalize", "[", "c", "]"}], ",", 
            RowBox[{"Rationalize", "[", "A", "]"}], ",", 
            RowBox[{"Rationalize", "[", "b", "]"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "Infinity"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", "+", "1"}], "}"}]}], "]"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"sol", "===", "$Failed"}], "||", 
           RowBox[{"sol", "===", 
            RowBox[{"{", "}"}]}]}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<isCore\>\"", "->", "False"}], ",", 
             RowBox[{
             "\"\<reason\>\"", "->", "\"\<LP failed or infeasible\>\""}]}], 
            "|>"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"tsol", "=", 
         RowBox[{"N", "[", 
          RowBox[{"sol", "[", 
           RowBox[{"[", 
            RowBox[{"n", "+", "1"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"vsol", "=", 
         RowBox[{"N", "[", 
          RowBox[{"Take", "[", 
           RowBox[{"sol", ",", "n"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"tsol", ">", 
           RowBox[{"10", "^", 
            RowBox[{"-", "12"}]}]}], ",", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<isCore\>\"", "->", "True"}], ",", 
            RowBox[{"\"\<t\>\"", "->", "tsol"}], ",", 
            RowBox[{"\"\<v\>\"", "->", 
             RowBox[{"AssociationThread", "[", 
              RowBox[{"intReacIdx", "->", "vsol"}], "]"}]}], ",", 
            RowBox[{"\"\<gammaT\>\"", "->", "gammaT"}]}], "|>"}], ",", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<isCore\>\"", "->", "False"}], ",", 
            RowBox[{"\"\<reason\>\"", "->", "\"\<max t <= 0\>\""}], ",", 
            RowBox[{"\"\<t\>\"", "->", "tsol"}], ",", 
            RowBox[{"\"\<gammaT\>\"", "->", "gammaT"}]}], "|>"}]}], "]"}]}]}],
       "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"main", " ", 
     RowBox[{"function", ":", "findCores"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "findCores", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<CandidateSets\>\"", "->", "Automatic"}], ",", 
       RowBox[{"\"\<MaxSize\>\"", "->", "6"}], ",", 
       RowBox[{"\"\<RequireColumnReactProdInT\>\"", "->", "True"}]}], "}"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"findCores", "[", 
      RowBox[{"RN_List", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "RND", ",", "species", ",", "gamma", ",", "nSpec", ",", "nReac", ",", 
         "rp", ",", "reactantSets", ",", "productSets", ",", "candidateSets", 
         ",", "cand", ",", "maxSize", ",", "requireColCond", ",", "results", 
         ",", 
         RowBox[{"tested", "=", "0"}], ",", "isCoreRes", ",", 
         "speciesIdxMap"}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"extMat", " ", 
         RowBox[{"extraction", ":", 
          RowBox[{
          "adapt", " ", "if", " ", "your", " ", "extMat", " ", "returns", " ",
            "different", " ", "ordering"}]}]}], "*)"}], 
       RowBox[{
        RowBox[{"RND", "=", 
         RowBox[{"extMat", "[", "RN", "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"expects", " ", 
           RowBox[{"RND", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "species"}], ",", 
          RowBox[{
           RowBox[{"RND", "[", 
            RowBox[{"[", "4", "]"}], "]"}], " ", "gamma"}]}], "*)"}], 
        RowBox[{"species", "=", 
         RowBox[{"RND", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"gamma", "=", 
         RowBox[{"RND", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nSpec", "=", 
         RowBox[{"Length", "[", "species", "]"}]}], ";", 
        RowBox[{"nReac", "=", 
         RowBox[{"Length", "[", "RN", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"speciesIdxMap", "=", 
         RowBox[{"AssociationThread", "[", 
          RowBox[{
           RowBox[{"ToString", "/@", "species"}], "->", 
           RowBox[{"Range", "[", "nSpec", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"get", " ", "parsed", " ", 
          RowBox[{"reactant", "/", "product"}], " ", "sets"}], "*)"}], 
        RowBox[{"rp", "=", 
         RowBox[{"getReactProdSets", "[", "RN", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"reactantSets", "=", 
         RowBox[{"rp", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"productSets", "=", 
         RowBox[{"rp", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"determine", " ", "candidate", " ", "sets"}], "*)"}], 
        RowBox[{"candidateSets", "=", 
         RowBox[{"OptionValue", "[", "\"\<CandidateSets\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maxSize", "=", 
         RowBox[{"OptionValue", "[", "\"\<MaxSize\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"requireColCond", "=", 
         RowBox[{
         "OptionValue", "[", "\"\<RequireColumnReactProdInT\>\"", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"candidateSets", "===", "Automatic"}], ",", 
          RowBox[{"candidateSets", "=", 
           RowBox[{"Rest", "@", 
            RowBox[{"Subsets", "[", 
             RowBox[{
              RowBox[{"ToString", "/@", "species"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"Min", "[", 
                 RowBox[{"maxSize", ",", "nSpec"}], "]"}]}], "}"}]}], 
             "]"}]}]}], "  ", 
          RowBox[{"(*", 
           RowBox[{
           "nonempty", " ", "subsets", " ", "up", " ", "to", " ", "maxSize"}],
            "*)"}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "canonicalize", " ", "candidateSets", " ", "to", " ", "strings"}], 
           "*)"}], 
          RowBox[{
           RowBox[{"candidateSets", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"ToString", "/@", 
               RowBox[{"(", "#", ")"}]}], "&"}], "/@", "candidateSets"}]}], 
           ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"results", "=", 
         RowBox[{
          RowBox[{"Reap", "[", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"tested", "++"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"T", "=", 
                   RowBox[{"candidateSets", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], ",", "intReacIdx", ",", 
                  "speciesIdx", ",", "colOkQ", ",", "colIndices", ",", 
                  "lpres"}], "}"}], ",", 
                RowBox[{"(*", 
                 RowBox[{
                 "internal", " ", "reactions", " ", "via", " ", "parsing", 
                  " ", "of", " ", "reactants"}], "*)"}], 
                RowBox[{
                 RowBox[{"intReacIdx", "=", 
                  RowBox[{"findInternalReactionsByParsing", "[", 
                   RowBox[{"RN", ",", "T"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"intReacIdx", "===", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{"<|", 
                    RowBox[{
                    RowBox[{"\"\<T\>\"", "->", "T"}], ",", 
                    RowBox[{"\"\<isCore\>\"", "->", "False"}], ",", 
                    RowBox[{
                    "\"\<reason\>\"", "->", 
                    "\"\<no internal reactions\>\""}]}], "|>"}], "]"}], ";", 
                    RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"column", " ", 
                    RowBox[{"condition", ":", 
                    RowBox[{
                    "for", " ", "each", " ", "internal", " ", "reaction", " ",
                     "j"}]}]}], ",", 
                   RowBox[{
                   "require", " ", "at", " ", "least", " ", "one", " ", 
                    "reactant", " ", "in", " ", "T", " ", "and", " ", "at", 
                    " ", "least", " ", "one", " ", "product", " ", "in", " ", 
                    "T"}]}], "*)"}], 
                 RowBox[{"colOkQ", "=", "True"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"colIndices", "=", 
                  RowBox[{"Select", "[", 
                   RowBox[{"intReacIdx", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"rset", "=", 
                    RowBox[{"reactantSets", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], ",", 
                    RowBox[{"pset", "=", 
                    RowBox[{"productSets", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], ",", "ok"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"ok", "=", "True"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{"requireColCond", ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Intersection", "[", 
                    RowBox[{"rset", ",", "T"}], "]"}], "=!=", 
                    RowBox[{"{", "}"}]}], "&&", 
                    RowBox[{
                    RowBox[{"Intersection", "[", 
                    RowBox[{"pset", ",", "T"}], "]"}], "=!=", 
                    RowBox[{"{", "}"}]}]}], ")"}]}], ",", 
                    RowBox[{"ok", "=", "False"}]}], "]"}], ";"}]}], "]"}], 
                    ";", "\[IndentingNewLine]", "ok"}]}], "]"}], ")"}], 
                    "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"colIndices", "===", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{"<|", 
                    RowBox[{
                    RowBox[{"\"\<T\>\"", "->", "T"}], ",", 
                    RowBox[{"\"\<isCore\>\"", "->", "False"}], ",", 
                    RowBox[{
                    "\"\<reason\>\"", "->", 
                    "\"\<columns do not satisfy reactant/product-in-T \
condition\>\""}], ",", 
                    RowBox[{"\"\<intReacIdx\>\"", "->", "intReacIdx"}]}], 
                    "|>"}], "]"}], ";", 
                    RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"species", " ", "indices"}], "*)"}], 
                 RowBox[{"speciesIdx", "=", 
                  RowBox[{"speciesIdxMap", "/@", "T"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"LP", " ", "test"}], "*)"}], 
                 RowBox[{"lpres", "=", 
                  RowBox[{"isAutocatalyticBlockLP", "[", 
                   RowBox[{"gamma", ",", "speciesIdx", ",", "colIndices"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"lpres", "[", "\"\<isCore\>\"", "]"}], ",", 
                   RowBox[{"Sow", "[", 
                    RowBox[{"<|", 
                    RowBox[{
                    RowBox[{"\"\<T\>\"", "->", "T"}], ",", 
                    RowBox[{"\"\<isCore\>\"", "->", "True"}], ",", 
                    RowBox[{"\"\<intReacIdx\>\"", "->", "colIndices"}], ",", 
                    RowBox[{"\"\<t\>\"", "->", 
                    RowBox[{"lpres", "[", "\"\<t\>\"", "]"}]}], ",", 
                    RowBox[{"\"\<v\>\"", "->", 
                    RowBox[{"lpres", "[", "\"\<v\>\"", "]"}]}], ",", 
                    RowBox[{"\"\<gammaT\>\"", "->", 
                    RowBox[{"lpres", "[", "\"\<gammaT\>\"", "]"}]}]}], "|>"}],
                     "]"}], ",", 
                   RowBox[{"Sow", "[", 
                    RowBox[{"<|", 
                    RowBox[{
                    RowBox[{"\"\<T\>\"", "->", "T"}], ",", 
                    RowBox[{"\"\<isCore\>\"", "->", "False"}], ",", 
                    RowBox[{"\"\<reason\>\"", "->", 
                    RowBox[{"lpres", "[", "\"\<reason\>\"", "]"}]}], ",", 
                    RowBox[{"\"\<t\>\"", "->", 
                    RowBox[{"lpres", "[", "\"\<t\>\"", "]"}]}], ",", 
                    RowBox[{"\"\<gammaT\>\"", "->", 
                    RowBox[{"lpres", "[", "\"\<gammaT\>\"", "]"}]}]}], "|>"}],
                     "]"}]}], "]"}], ";"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"Length", "[", "candidateSets", "]"}]}], "}"}]}], 
            "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Filter", " ", "only", " ", "true", " ", "cores", " ", "and", " ", 
          "reduce", " ", "to", " ", "minimal", " ", "ones", " ", 
          RowBox[{"(", 
           RowBox[{
           "no", " ", "proper", " ", "subset", " ", "that", " ", "is", " ", 
            "also", " ", "core"}], ")"}]}], "*)"}], 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"cores", "=", 
             RowBox[{"Select", "[", 
              RowBox[{"results", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", "\"\<isCore\>\"", "]"}], "===", "True"}], 
                "&"}]}], "]"}]}], ",", "minimal"}], "}"}], ",", 
          RowBox[{
           RowBox[{"minimal", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"cores", ",", 
              RowBox[{"Function", "[", 
               RowBox[{"c", ",", 
                RowBox[{"Not", "[", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"DeleteCases", "[", 
                    RowBox[{"cores", ",", "c"}], "]"}], ",", 
                   RowBox[{"d_", "/;", 
                    RowBox[{
                    RowBox[{"SubsetQ", "[", 
                    RowBox[{
                    RowBox[{"ToString", "/@", 
                    RowBox[{"d", "[", "\"\<T\>\"", "]"}]}], ",", 
                    RowBox[{"ToString", "/@", 
                    RowBox[{"c", "[", "\"\<T\>\"", "]"}]}]}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{"d", "[", "\"\<T\>\"", "]"}], "=!=", 
                    RowBox[{"c", "[", "\"\<T\>\"", "]"}]}]}]}]}], "]"}], 
                 "]"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Species\>\"", "->", "species"}], ",", 
             RowBox[{"\"\<GammaDimensions\>\"", "->", 
              RowBox[{"Dimensions", "[", "gamma", "]"}]}], ",", 
             RowBox[{"\"\<Tested\>\"", "->", "tested"}], ",", 
             RowBox[{"\"\<AllResults\>\"", "->", "results"}], ",", 
             RowBox[{"\"\<Cores\>\"", "->", "minimal"}]}], "|>"}]}]}], 
         "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", "Example"}]}]}]}]}]}]}]}]}]}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"usage", "--"}], "--"}], "--"}], "--"}], "--"}], "--"}],
          "--"}], "--"}], "--"}], "--"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Use", " ", "your", " ", "RN"}], ";", 
     RowBox[{
     "here", " ", "the", " ", "simple", " ", "autocatalytic", " ", 
      "example"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RNexample", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A", "->", 
        RowBox[{"A", "+", "B"}]}], ",", 
       RowBox[{"B", "->", 
        RowBox[{"A", "+", "B"}]}], ",", 
       RowBox[{"A", "->", "0"}], ",", 
       RowBox[{"B", "->", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "If", " ", "you", " ", "already", " ", "have", " ", "minimal", " ", 
      "siphons"}], ",", 
     RowBox[{
      RowBox[{"pass", " ", "them", " ", "as", " ", "CandidateSets"}], "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"\"\<A\>\"", ",", "\"\<B\>\""}], "}"}], "}"}]}]}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"res", "=", 
     RowBox[{"findCores", "[", 
      RowBox[{"RNexample", ",", 
       RowBox[{"\"\<CandidateSets\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"\"\<A\>\"", ",", "\"\<B\>\""}], "}"}], "}"}]}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{"res", "//", "InputForm"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.9685944891792097`*^9, 3.9685945008964615`*^9}, 
   3.9697179432346206`*^9, {3.96985686240127*^9, 3.9698568663838696`*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"043e7501-4a19-41bf-9ea4-ba9928c4b4bf"],

Cell[BoxData[
 TemplateBox[{
  "RuleDelayed", "rhs", 
   "\"Pattern \\!\\(\\*RowBox[{\\\"m_\\\"}]\\) appears on the right-hand side \
of rule \\!\\(\\*RowBox[{RowBox[{\\\"s_Symbol\\\", \\\" \\\", \
RowBox[{\\\"m_\\\", \\\"?\\\", \\\"NumericQ\\\"}]}], \\\"\[RuleDelayed]\\\", \
RowBox[{RowBox[{\\\"s\\\", \\\"|\\\", RowBox[{RowBox[{\\\"m_\\\", \\\"?\\\", \
\\\"NumericQ\\\"}], \\\" \\\", \\\"s_String\\\"}]}], \\\"\[RuleDelayed]\\\", \
RowBox[{RowBox[{\\\"s\\\", \\\"|\\\", \\\"s_Symbol\\\"}], \
\\\"\[RuleDelayed]\\\", RowBox[{RowBox[{\\\"s\\\", \\\"|\\\", \
\\\"s_String\\\"}], \\\"\[RuleDelayed]\\\", \\\"s\\\"}]}]}]}]\\).\"", 2, 278, 
   1, 24863171801868452237, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9698568687649155`*^9},
 CellLabel->
  "During evaluation of \
In[269]:=",ExpressionUUID->"8d947e11-88ae-4e66-8ea3-a6e879fa9606"],

Cell[BoxData[
 TemplateBox[{
  "RuleDelayed", "rhs", 
   "\"Pattern \\!\\(\\*RowBox[{\\\"s_String\\\"}]\\) appears on the \
right-hand side of rule \\!\\(\\*RowBox[{RowBox[{\\\"s_Symbol\\\", \\\" \\\", \
RowBox[{\\\"m_\\\", \\\"?\\\", \\\"NumericQ\\\"}]}], \\\"\[RuleDelayed]\\\", \
RowBox[{RowBox[{\\\"s\\\", \\\"|\\\", RowBox[{RowBox[{\\\"m_\\\", \\\"?\\\", \
\\\"NumericQ\\\"}], \\\" \\\", \\\"s_String\\\"}]}], \\\"\[RuleDelayed]\\\", \
RowBox[{RowBox[{\\\"s\\\", \\\"|\\\", \\\"s_Symbol\\\"}], \
\\\"\[RuleDelayed]\\\", RowBox[{RowBox[{\\\"s\\\", \\\"|\\\", \
\\\"s_String\\\"}], \\\"\[RuleDelayed]\\\", \\\"s\\\"}]}]}]}]\\).\"", 2, 278, 
   2, 24863171801868452237, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9698568688230762`*^9},
 CellLabel->
  "During evaluation of \
In[269]:=",ExpressionUUID->"48800788-c839-4bb6-a7ba-5e4bf815892a"],

Cell[BoxData[
 TemplateBox[{
  "RuleDelayed", "rhs", 
   "\"Pattern \\!\\(\\*RowBox[{\\\"s_Symbol\\\"}]\\) appears on the \
right-hand side of rule \\!\\(\\*RowBox[{RowBox[{\\\"s_Symbol\\\", \\\" \\\", \
RowBox[{\\\"m_\\\", \\\"?\\\", \\\"NumericQ\\\"}]}], \\\"\[RuleDelayed]\\\", \
RowBox[{RowBox[{\\\"s\\\", \\\"|\\\", RowBox[{RowBox[{\\\"m_\\\", \\\"?\\\", \
\\\"NumericQ\\\"}], \\\" \\\", \\\"s_String\\\"}]}], \\\"\[RuleDelayed]\\\", \
RowBox[{RowBox[{\\\"s\\\", \\\"|\\\", \\\"s_Symbol\\\"}], \
\\\"\[RuleDelayed]\\\", RowBox[{RowBox[{\\\"s\\\", \\\"|\\\", \
\\\"s_String\\\"}], \\\"\[RuleDelayed]\\\", \\\"s\\\"}]}]}]}]\\).\"", 2, 278, 
   3, 24863171801868452237, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9698568688707666`*^9},
 CellLabel->
  "During evaluation of \
In[269]:=",ExpressionUUID->"4e4b2a80-c957-47d5-97c6-07916ff9742b"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"RuleDelayed\\\", \\\"::\
\\\", \\\"rhs\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 278, 4, 24863171801868452237, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9698568689379606`*^9},
 CellLabel->
  "During evaluation of \
In[269]:=",ExpressionUUID->"118aecb5-a6c1-441c-bc03-7e4fd914e001"],

Cell["\<\
<|\"Species\" -> {\"a\", \"b\"}, \"GammaDimensions\" -> {2, 4}, \"Tested\" -> \
1, 
 \"AllResults\" -> {<|\"T\" -> {\"A\", \"B\"}, \"isCore\" -> False, 
    \"reason\" -> \"no internal reactions\"|>}, \"Cores\" -> {}|>\
\>", "Output",
 CellChangeTimes->{3.96985686898917*^9},
 CellLabel->
  "Out[279]//InputForm=",ExpressionUUID->"78b99ad9-019a-43b0-bedd-\
c0aa38511752"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EpidCRN`*"}]], "Input",
 CellChangeTimes->{{3.9685944891792097`*^9, 3.9685945008964615`*^9}, 
   3.9697179432346206`*^9, 
   3.96985686240127*^9},ExpressionUUID->"90688be1-3055-4a6b-9811-\
3189207cbd25"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["EpidCRN`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["EpidCRN`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["ACM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "ACM", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Grobpol", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "Grobpol", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["onePR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "onePR", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["albe", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "albe", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["H4", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "H4", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["onlyP", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "onlyP", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["arrow2pairReac", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "arrow2pairReac", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["H6", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "H6", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["optHopf", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "optHopf", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["asoRea", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "asoRea", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Hirono", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "Hirono", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Par", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "Par", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["autocatalysisReport", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "autocatalysisReport", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["hopfD", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "hopfD", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["perC", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "perC", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["bd1", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "bd1", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Hur2", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "Hur2", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["perR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "perR", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["bd2", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "bd2", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Hur3M", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "Hur3M", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["persistenceAnalysis", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "persistenceAnalysis", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["bdAn", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "bdAn", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Hur4M", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "Hur4M", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["persistenceReport", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "persistenceReport", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["bdCo", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "bdCo", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Hur5M", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "Hur5M", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["pertIC", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "pertIC", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["bdFp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "bdFp", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["IaFHJ", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "IaFHJ", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["phasePl2", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "phasePl2", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["Bifp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "Bifp", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["IkFHJ", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "IkFHJ", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["posM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "posM", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["catalysisAnalysis", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "catalysisAnalysis", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["intEq", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "intEq", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["reaToRHS", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "reaToRHS", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["checkPersistence", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "checkPersistence", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["invFace", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "invFace", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["reCL", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "reCL", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["chRN", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "chRN", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["invN", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "invN", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["remZ", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "remZ", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CofP", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "CofP", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["invN2", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "invN2", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Res1F", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "Res1F", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CofRH", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "CofRH", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isCatalytic", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "isCatalytic", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RHS2RN", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "RHS2RN", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["compToAsso", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "compToAsso", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isCritical", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "isCritical", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rtS", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "rtS", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["cont", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "cont", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isDrainable", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "isDrainable", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RUR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "RUR", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["convertReactionFormat", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "convertReactionFormat", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isEndotactic", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "isEndotactic", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["scan", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "scan", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["convNum", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "convNum", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isInvariantFacet", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "isInvariantFacet", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["scanPar", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "scanPar", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["countMS", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "countMS", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isSelfReplicable", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "isSelfReplicable", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["selZR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "selZR", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CreateMassActionRate", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "CreateMassActionRate", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isSiph", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "isSiph", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["seZF", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "seZF", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["Deg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "Deg", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["isStronglyEndotactic", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "isStronglyEndotactic", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["simpleOptHopf", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "simpleOptHopf", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DerEq", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "DerEq", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["JR0", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "JR0", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["siphonAnalysis", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "siphonAnalysis", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DerL", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "DerL", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["JTD", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "JTD", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SpeComInc", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "SpeComInc", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DFE", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "DFE", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["JTDP", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "JTDP", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["sta", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "sta", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["endo", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "endo", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["L13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "L13", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Sta", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "Sta", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["EucFHJ", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "EucFHJ", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["L1Planar", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "L1Planar", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Stab", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "Stab", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["expM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "expM", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["L23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "L23", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Stodola", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "Stodola", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["expon", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "expon", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["l2L", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "l2L", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["stoichiometricMatrices", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "stoichiometricMatrices", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["extHD", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "extHD", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["lapK", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "lapK", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["str2Sym", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "str2Sym", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["extMat", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "extMat", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ListFunctionsByPackage", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "ListFunctionsByPackage", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["strEdg", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "strEdg", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["extSpe", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "extSpe", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["m2toM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "m2toM", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["strToSymb", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "strToSymb", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["FHJ", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "FHJ", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["makeLPM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "makeLPM", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["sym2Str", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "sym2Str", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["findCatalyticSets", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "findCatalyticSets", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["mat2Matl", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "mat2Matl", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["symbToStr", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "symbToStr", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["findMinimalCriticalSiphons", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "findMinimalCriticalSiphons", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["matl2Mat", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "matl2Mat", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["toProd", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "toProd", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["fpHopf", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "fpHopf", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["matlr2Mat", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "matlr2Mat", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["toSum", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "toSum", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["FposEx", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "FposEx", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["minSiph", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "minSiph", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TS", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "TS", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["GBH", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "GBH", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["mRts", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "mRts", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["whenP", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "whenP", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["getComE", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "getComE", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["mSim", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "mSim", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["WhereIs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "WhereIs", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["getInfectionIndices", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "getInfectionIndices", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NewtPol", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "NewtPol", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["GetVec", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "GetVec", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NGM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", {
                   "NGM", "EpidCRN`"}, False},
                 ButtonNote->"EpidCRN`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.31666666666666665`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.968594502378731*^9},
 CellLabel->
  "Out[712]=",ExpressionUUID->"b417c589-b929-4689-a796-e002e6dc790e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"(Core)compToAsso[side] parses a reaction side (left \
or right) and returns an association of species names to stoichiometric \
coefficients. Example: compToAsso[k*\\\"i\\\" + 2*\\\"s\\\"] returns \
<|\\\"i\\\"->k, \\\"s\\\"->2|>\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"compToAsso", "[", "EpidCRN`Private`side_", "]"}],
                     ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "EpidCRN`Private`coeffs", "}"}], ",", 
                    RowBox[{
                    RowBox[{"EpidCRN`Private`coeffs", "=", 
                    RowBox[{"Association", "[", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"EpidCRN`Private`side", "===", "0"}], ",", 
                    RowBox[{"Return", "[", "EpidCRN`Private`coeffs", "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", "EpidCRN`Private`side", "]"}], "===",
                     "Plus"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", "EpidCRN`Private`term", "]"}], "===",
                     "Times"}], ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"EpidCRN`Private`parts", ",", 
                    "EpidCRN`Private`strings", ",", 
                    "EpidCRN`Private`nonStrings"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"EpidCRN`Private`parts", "=", 
                    RowBox[{"List", "@@", "EpidCRN`Private`term"}]}], ";", 
                    RowBox[{"EpidCRN`Private`strings", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"EpidCRN`Private`parts", ",", "StringQ"}], 
                    "]"}]}], ";", 
                    RowBox[{"EpidCRN`Private`nonStrings", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"EpidCRN`Private`parts", ",", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"StringQ", "[", "#1", "]"}]}], "&"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "EpidCRN`Private`strings", "]"}], 
                    "\[GreaterEqual]", "1"}], ",", 
                    RowBox[{
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"EpidCRN`Private`coeffs", "[", 
                    "EpidCRN`Private`str", "]"}], "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "EpidCRN`Private`nonStrings", 
                    "]"}], "\[Equal]", "0"}], ",", "1", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "EpidCRN`Private`nonStrings", 
                    "]"}], "\[Equal]", "1"}], ",", 
                    
                    RowBox[{"EpidCRN`Private`nonStrings", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{"Times", "@@", "EpidCRN`Private`nonStrings"}]}], 
                    "]"}]}], "]"}]}], ";"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"EpidCRN`Private`str", ",", 
                    "EpidCRN`Private`strings"}], "}"}]}], "]"}], ";"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"StringQ", "[", "EpidCRN`Private`term", "]"}], 
                    ",", 
                    RowBox[{
                    
                    RowBox[{"EpidCRN`Private`coeffs", "[", 
                    "EpidCRN`Private`term", "]"}], "=", "1"}]}], "]"}]}], 
                    "]"}]}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"StringQ", "[", "EpidCRN`Private`term", "]"}], 
                    ",", 
                    RowBox[{
                    
                    RowBox[{"EpidCRN`Private`coeffs", "[", 
                    "EpidCRN`Private`term", "]"}], "=", "1"}]}], "]"}], 
                    ";"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"EpidCRN`Private`term", ",", 
                    RowBox[{"List", "@@", "EpidCRN`Private`side"}]}], "}"}]}],
                     "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", "EpidCRN`Private`side", "]"}], "===",
                     "Times"}], ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"EpidCRN`Private`parts", ",", 
                    "EpidCRN`Private`strings", ",", 
                    "EpidCRN`Private`nonStrings"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"EpidCRN`Private`parts", "=", 
                    RowBox[{"List", "@@", "EpidCRN`Private`side"}]}], ";", 
                    RowBox[{"EpidCRN`Private`strings", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"EpidCRN`Private`parts", ",", "StringQ"}], 
                    "]"}]}], ";", 
                    RowBox[{"EpidCRN`Private`nonStrings", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"EpidCRN`Private`parts", ",", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"StringQ", "[", "#1", "]"}]}], "&"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "EpidCRN`Private`strings", "]"}], 
                    "\[GreaterEqual]", "1"}], ",", 
                    RowBox[{
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"EpidCRN`Private`coeffs", "[", 
                    "EpidCRN`Private`str", "]"}], "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "EpidCRN`Private`nonStrings", 
                    "]"}], "\[Equal]", "0"}], ",", "1", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "EpidCRN`Private`nonStrings", 
                    "]"}], "\[Equal]", "1"}], ",", 
                    
                    RowBox[{"EpidCRN`Private`nonStrings", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{"Times", "@@", "EpidCRN`Private`nonStrings"}]}], 
                    "]"}]}], "]"}]}], ";"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"EpidCRN`Private`str", ",", 
                    "EpidCRN`Private`strings"}], "}"}]}], "]"}], ";"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"StringQ", "[", "EpidCRN`Private`side", "]"}], 
                    ",", 
                    RowBox[{
                    
                    RowBox[{"EpidCRN`Private`coeffs", "[", 
                    "EpidCRN`Private`side", "]"}], "=", "1"}]}], "]"}]}], 
                    "]"}]}]}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"StringQ", "[", "EpidCRN`Private`side", "]"}], 
                    ",", 
                    RowBox[{
                    
                    RowBox[{"EpidCRN`Private`coeffs", "[", 
                    "EpidCRN`Private`side", "]"}], "=", "1"}]}], "]"}]}], 
                    "]"}]}], "]"}], ";", "EpidCRN`Private`coeffs"}]}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"EpidCRN`compToAsso\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"(Core)compToAsso[side] parses a reaction side (left \
or right) and returns an association of species names to stoichiometric \
coefficients. Example: compToAsso[k*\\\"i\\\" + 2*\\\"s\\\"] returns \
<|\\\"i\\\"->k, \\\"s\\\"->2|>\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "(Core)compToAsso[side] parses a reaction side (left or right) and \
returns an association of species names to stoichiometric coefficients. \
Example: compToAsso[k*\"i\" + 2*\"s\"] returns <|\"i\"->k, \"s\"->2|>", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, EpidCRN`compToAsso, {EpidCRN`compToAsso[
         Pattern[EpidCRN`Private`side, 
          Blank[]]] :> 
       Module[{EpidCRN`Private`coeffs}, EpidCRN`Private`coeffs = <||>; 
         If[EpidCRN`Private`side === 0, 
           Return[EpidCRN`Private`coeffs]]; 
         If[Head[EpidCRN`Private`side] === Plus, 
           Do[
            If[Head[EpidCRN`Private`term] === Times, 
             
             Module[{EpidCRN`Private`parts, EpidCRN`Private`strings, 
               EpidCRN`Private`nonStrings}, 
              EpidCRN`Private`parts = Apply[List, EpidCRN`Private`term]; 
              EpidCRN`Private`strings = 
               Select[EpidCRN`Private`parts, StringQ]; 
              EpidCRN`Private`nonStrings = Select[EpidCRN`Private`parts, Not[
                  StringQ[#]]& ]; 
              If[Length[EpidCRN`Private`strings] >= 1, 
                Do[EpidCRN`Private`coeffs[EpidCRN`Private`str] = 
                   If[Length[EpidCRN`Private`nonStrings] == 0, 1, 
                    If[Length[EpidCRN`Private`nonStrings] == 1, 
                    Part[EpidCRN`Private`nonStrings, 1], 
                    Apply[Times, EpidCRN`Private`nonStrings]]]; Null, {
                  EpidCRN`Private`str, EpidCRN`Private`strings}]; Null, 
                If[
                 StringQ[EpidCRN`Private`term], 
                 EpidCRN`Private`coeffs[EpidCRN`Private`term] = 1]]], If[
               StringQ[EpidCRN`Private`term], 
               EpidCRN`Private`coeffs[EpidCRN`Private`term] = 1]; Null], {
            EpidCRN`Private`term, 
             Apply[List, EpidCRN`Private`side]}], 
           If[Head[EpidCRN`Private`side] === Times, 
            
            Module[{EpidCRN`Private`parts, EpidCRN`Private`strings, 
              EpidCRN`Private`nonStrings}, 
             EpidCRN`Private`parts = Apply[List, EpidCRN`Private`side]; 
             EpidCRN`Private`strings = Select[EpidCRN`Private`parts, StringQ]; 
             EpidCRN`Private`nonStrings = Select[EpidCRN`Private`parts, Not[
                 StringQ[#]]& ]; 
             If[Length[EpidCRN`Private`strings] >= 1, 
               Do[EpidCRN`Private`coeffs[EpidCRN`Private`str] = 
                  If[Length[EpidCRN`Private`nonStrings] == 0, 1, 
                    If[Length[EpidCRN`Private`nonStrings] == 1, 
                    Part[EpidCRN`Private`nonStrings, 1], 
                    Apply[Times, EpidCRN`Private`nonStrings]]]; Null, {
                 EpidCRN`Private`str, EpidCRN`Private`strings}]; Null, 
               If[
                StringQ[EpidCRN`Private`side], 
                EpidCRN`Private`coeffs[EpidCRN`Private`side] = 1]]], 
            If[
             StringQ[EpidCRN`Private`side], 
             EpidCRN`Private`coeffs[EpidCRN`Private`side] = 1]]]; 
         EpidCRN`Private`coeffs]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "EpidCRN`compToAsso"|>, 
   False]]], "Print",
 CellTags->
  "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8",ExpressionUUID->"0f1d0fd4-e09c-\
4aa8-9dcf-26c92ab9c636"]
}, Open  ]]
},
WindowSize->{791.1428571428571, 371.57142857142856`},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 3, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"16a80dff-4e9a-4db1-9bf4-1618292880ce"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info-fd0e203d-e62d-42b0-98d1-41fb311826a8"->{
  Cell[173432, 4048, 21099, 485, 107, "Print",ExpressionUUID->"0f1d0fd4-e09c-4aa8-9dcf-26c92ab9c636",
   CellTags->"Info-fd0e203d-e62d-42b0-98d1-41fb311826a8"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info-fd0e203d-e62d-42b0-98d1-41fb311826a8", 194955, 4547}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[578, 20, 27182, 511, 866, "Input",ExpressionUUID->"3604622a-b672-418b-a705-97f5a454d22c"],
Cell[CellGroupData[{
Cell[27785, 535, 435, 7, 22, "Print",ExpressionUUID->"9a144e80-cf3c-4d06-a950-705b8d6c5f0d"],
Cell[28223, 544, 900, 20, 22, "Print",ExpressionUUID->"f3e290a5-9ad1-4610-809d-5dffbf977611"],
Cell[29126, 566, 619, 13, 22, "Print",ExpressionUUID->"2cf63e2b-fb1b-4507-8059-b65883dcb27a"],
Cell[29748, 581, 1070, 22, 22, "Print",ExpressionUUID->"514e02c0-c85f-41a3-8fbd-37f700f627bc"],
Cell[30821, 605, 1068, 22, 22, "Print",ExpressionUUID->"c24d93cb-2296-4a26-b605-2d666cd2bb29"],
Cell[31892, 629, 1021, 21, 22, "Print",ExpressionUUID->"20605a35-12a3-4588-a87e-871f119cfca6"],
Cell[32916, 652, 1019, 21, 22, "Print",ExpressionUUID->"6200c585-4e18-48da-9b08-6bacba2b8596"],
Cell[33938, 675, 527, 11, 22, "Print",ExpressionUUID->"431eca6c-b701-4476-9ebf-dba55b34aee7"],
Cell[34468, 688, 4152, 86, 198, "Print",ExpressionUUID->"3c03118b-bf14-4f4a-a9d2-24ec6ceb0799"],
Cell[38623, 776, 436, 7, 40, "Print",ExpressionUUID->"12ca1a87-1261-4851-af95-42b3ae760770"],
Cell[39062, 785, 750, 18, 22, "Print",ExpressionUUID->"509a2f39-e884-4a66-8015-f9f50cabc489"],
Cell[39815, 805, 969, 20, 22, "Print",ExpressionUUID->"07511854-4797-42fd-9f0f-6aaee1e66819"],
Cell[40787, 827, 987, 20, 22, "Print",ExpressionUUID->"4500f713-1ab9-4246-a8a7-8fe508227ebb"],
Cell[41777, 849, 1105, 23, 22, "Print",ExpressionUUID->"e88647bc-6df1-4d70-8d7c-bf140d0ac162"],
Cell[42885, 874, 989, 20, 22, "Print",ExpressionUUID->"a5d6bcc8-c9c1-4c78-a072-c4da8b73f4bd"],
Cell[43877, 896, 1109, 23, 22, "Print",ExpressionUUID->"61df4506-eb26-489b-ba1a-fea74cb9629b"],
Cell[44989, 921, 991, 20, 22, "Print",ExpressionUUID->"2752a6cf-1014-4759-a570-9aefe711b235"],
Cell[45983, 943, 1109, 23, 22, "Print",ExpressionUUID->"b026803a-d7a4-4989-9e9e-299cd06805e6"],
Cell[47095, 968, 989, 20, 22, "Print",ExpressionUUID->"68449c43-d716-447e-997d-200e0ce6c27d"]
}, Open  ]],
Cell[48099, 991, 513, 11, 28, "Message",ExpressionUUID->"161a97be-5ad3-4f61-bffe-5a543f4eab4e"],
Cell[48615, 1004, 513, 11, 28, "Message",ExpressionUUID->"52756b6c-4fa6-40df-9c39-e399ef959b2b"],
Cell[CellGroupData[{
Cell[49153, 1019, 967, 20, 22, "Print",ExpressionUUID->"1c7a2f2f-6b66-4fd4-8e28-3ba74225e60e"],
Cell[50123, 1041, 985, 20, 22, "Print",ExpressionUUID->"d9fcf075-8191-44ce-b933-99f9845a9d52"],
Cell[51111, 1063, 1107, 23, 22, "Print",ExpressionUUID->"7718a700-6001-4d20-926a-2285cb044d5f"],
Cell[52221, 1088, 991, 20, 22, "Print",ExpressionUUID->"2a50d183-3379-4b23-9ac0-274fecdbe4c3"],
Cell[53215, 1110, 1111, 23, 22, "Print",ExpressionUUID->"d6ddb976-c892-4ec9-9799-5b31381ee648"],
Cell[54329, 1135, 987, 20, 22, "Print",ExpressionUUID->"38dfab57-4d2e-4c50-842b-8e12c6da5466"],
Cell[55319, 1157, 1111, 23, 22, "Print",ExpressionUUID->"755d7185-0fde-4b10-80ce-f3c85bfcdb66"],
Cell[56433, 1182, 989, 20, 22, "Print",ExpressionUUID->"8799c86f-af98-497d-9f4b-14aace7705e7"]
}, Open  ]],
Cell[57437, 1205, 513, 11, 28, "Message",ExpressionUUID->"58645132-9b30-4b56-a239-d5fa92ec3804"],
Cell[57953, 1218, 465, 10, 28, "Message",ExpressionUUID->"0114e945-c749-45c8-9f12-ea0006349990"],
Cell[CellGroupData[{
Cell[58443, 1232, 969, 20, 22, "Print",ExpressionUUID->"fb345505-ab7c-44de-88c2-357b12777670"],
Cell[59415, 1254, 987, 20, 22, "Print",ExpressionUUID->"e400f626-59e1-40fa-8c32-43a5d9a8868d"],
Cell[60405, 1276, 1105, 23, 22, "Print",ExpressionUUID->"b22cba4b-50a8-4416-b48e-a32c816b1b56"],
Cell[61513, 1301, 989, 20, 22, "Print",ExpressionUUID->"5da5700b-2018-49aa-902a-5a213d256d12"],
Cell[62505, 1323, 1111, 23, 22, "Print",ExpressionUUID->"562e7ad4-91ab-45d4-8adb-e011f67a3f3c"],
Cell[63619, 1348, 991, 20, 22, "Print",ExpressionUUID->"17492327-a715-4e66-9615-b5691ed927e5"],
Cell[64613, 1370, 1111, 23, 22, "Print",ExpressionUUID->"6e90399d-bf5d-404e-bebd-3828a25e9423"],
Cell[65727, 1395, 989, 20, 22, "Print",ExpressionUUID->"966a642e-6373-4cf8-b60a-a8075d45a873"],
Cell[66719, 1417, 527, 11, 22, "Print",ExpressionUUID->"473be840-4fdf-45af-b76b-6b122b040f11"],
Cell[67249, 1430, 410, 7, 22, "Print",ExpressionUUID->"2b956dee-9869-45ed-9d9a-3ff539bee6dc"],
Cell[67662, 1439, 2507, 63, 129, "Print",ExpressionUUID->"68e2e3bb-6c57-4d4a-997e-dce79e100e0a"],
Cell[70172, 1504, 1126, 31, 22, "Print",ExpressionUUID->"84ef3a2f-5149-4053-b9d9-b7e8744c27ed"],
Cell[71301, 1537, 653, 15, 22, "Print",ExpressionUUID->"29495ee6-d0a6-4113-9b32-7f49eaa8fce7"],
Cell[71957, 1554, 434, 7, 22, "Print",ExpressionUUID->"b34407d0-991b-42f6-b882-9b101c8010eb"],
Cell[72394, 1563, 2995, 66, 66, "Print",ExpressionUUID->"e56b3280-7ea0-45da-9335-fd9803b83725"],
Cell[75392, 1631, 1624, 39, 56, "Print",ExpressionUUID->"85324b88-37ac-4ee4-99ce-99c6853c1e00"],
Cell[77019, 1672, 2597, 70, 60, "Print",ExpressionUUID->"eed1be90-5eeb-46c5-9f2a-97566f93fa2c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79665, 1748, 34559, 868, 2427, "Input",ExpressionUUID->"043e7501-4a19-41bf-9ea4-ba9928c4b4bf"],
Cell[114227, 2618, 866, 16, 47, "Message",ExpressionUUID->"8d947e11-88ae-4e66-8ea3-a6e879fa9606"],
Cell[115096, 2636, 872, 16, 47, "Message",ExpressionUUID->"48800788-c839-4bb6-a7ba-5e4bf815892a"],
Cell[115971, 2654, 872, 16, 47, "Message",ExpressionUUID->"4e4b2a80-c957-47d5-97c6-07916ff9742b"],
Cell[116846, 2672, 458, 10, 28, "Message",ExpressionUUID->"118aecb5-a6c1-441c-bc03-7e4fd914e001"],
Cell[117307, 2684, 381, 9, 81, "Output",ExpressionUUID->"78b99ad9-019a-43b0-bedd-c0aa38511752"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117725, 2698, 232, 5, 28, "Input",ExpressionUUID->"90688be1-3055-4a6b-9811-3189207cbd25"],
Cell[117960, 2705, 55469, 1341, 994, "Output",ExpressionUUID->"b417c589-b929-4689-a796-e002e6dc790e"],
Cell[173432, 4048, 21099, 485, 107, "Print",ExpressionUUID->"0f1d0fd4-e09c-4aa8-9dcf-26c92ab9c636",
 CellTags->"Info-fd0e203d-e62d-42b0-98d1-41fb311826a8"]
}, Open  ]]
}
]
*)

